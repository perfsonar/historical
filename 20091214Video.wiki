=  Dec 14 2009 Conference Call 2:30 p.m. EDT =

== Agenda/Minutes ==

 # Attendees: 
 # Developer Updates
 # Actions from last call:
 * _*ACTION*_: Joe continue to refine wiki about cfengine. 
 * _*ACTION*_: Maxim will work with Andy and Aaron to verify the pingER-MP fix.
 * _*ACTION*_: Andy will propose methods to deal with test point uniqueness.
 * _*ACTION*_: Jeff, Brian and Joe will work on the roadmap.
 * _*ACTION*_: Jon will add Aaron to Iperf project. Aaron will add autoconf tools and begin bwctl/iperf3 integration.
 * _*ACTION*_: Joe/Brian will consider if ESnet has resources they want to put towards the RedHat based pS-NPTk version.
 # pS-Performance-Toolkit - Security updates
   * NTP issue
   * Policy for security updates going forward
     # Need a more private list for discussion of issues
     # Publicly announce once we have solution?
     # Automatic security updates?
 # *!TestPoint Uniqueness* (Andy)
 # Future Meetings
   * 1/2 day vid-conf in January
   * 1/2 day f2f @ SLC (Jt Techs - Sunday afternoon)
 # *Future topics*:
   * _*pSPS*_:
     * Community handling in regular testing screens.  If the user doesn't pick a community, others can'y use this mechanism to find the node
       * N.B. the node is still _findable_ via other methods including domain/IP and it does show up in the gLS
       * Does it make sense to set a default?
       * Should there be other methods to find sans communities?
     * GUIs
       * BWCTL
       * OWAMP
   * _*Google MLab*_
     * Register each deployment (and tools on each) into pSPS
     * GUI to find an NDT server.  Started by *Jason*, still have the _public_ vs _private_ routing to these servers
     * Make MLab data public - even better expose it via pSPS
   * _*NSF perfSONAR Workshop*_
     * How would a researcher use pS to fulfill research goals?
     * How do you get tool developers to publish via pS?
     * NSF will be creating a steering committee for this workshop.
     * Hopefully NSF is interested in funding pS.
   * _*Service Monitoring*_
     * Availability (current + historic)
     * Nagios Plugins
     * Data monitoring vs service liveness
   * _*Config management*_
     * Sharing service configuration through IS
     * Centralized way to manage configs of similar services.  
   * _*Status Collection Enhancements*_
     * Overview: DCN _Status_ page uses the TL1 collector to extract and display many of the Cienna counters.  Currently only cares about interfaces and interface-like things.  
     * Similar Work: Jon Dugan's [http://code.google.com/p/esxsnmp/|ESxSNMP] which is a high performance SNMP polling system.  
     * Enhancement Ideas
       * Combine efforts to use TL1 collectors in ESxSNMP.  Would use same database backend and pS interface by doing this
       * Collecting/Storing network topology.  Specifically: how interfaces are connected via the switching fabric/external links and any other tie ins to the discussions in working groups. 
       * Gathering and storing alarm information.  Is this the same as Status?  Could or should this be done in nagios.  
 
=== ACTIONS ===


== Where ==

ESnet conference bridge:
 * GDS:  00113498255555
 * phone: 1-510-883-7860  then 8255555# at the prompt.
