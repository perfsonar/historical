#summary Some beginning plans on activities for circuit monitoring

=== Circuit Monitoring Agent ===
A circuit monitoring agent will tie together the circuit creation software, and
the monitoring infrastructure.

The agent would listen for new circuits being created. It would generate the
segment descriptor for its portion of the circuit, and, if applicable, the
circuit descriptor as well. These descriptors will be registered into a local,
or shared, topology service. If needed, the agent will kick off monitoring of
the various pieces.

Task: write the agent

Open Questions:
 * The topology information we get from OSCARS isn't necessarily the information we need for monitoring. How does this information get configured?
 * It's easy to "kick off" measurement for ESxSNMP systems, but what about other systems (e.g. SNAPP or Cacti or whatever)? Should we just mandate that they install ESxSNMP? We could have it run a script, but that would likely be painful for end sites to have to write.

Algorithm:
 * Listens to the Notification Broker for circuit instantiation and tear down
   * Depends: Notification Broker client
 * On circuit creation:
   * Generate a circuit descriptor (if the circuit originates in this domain)
     * Depends: an algorithm for converting IDC circuit IDs to glif-style circuit ids
     * Depends: an algorithm for converting IDC circuit IDs to glif-style segment ids
     * Depends: an algorithm for figuring out the domain ordering of the circuit based on the IDC circuit description
   * Generate a segment descriptor
     * Depends: an algorithm for converting IDC circuit IDs to glif-style segment ids
     * Depends: a way of converting the IDC representation of the ports/nodes in the circuit to the set of ports that are being measured
   * Instantiate the measurements (if applicable)
     * Open questions: how do we do this in a general way?
   * Register the descriptor(s) into the TS
     * Depends: a TS client

=== Display Client ===
Goal: The display client would be an E2EMon-like web page showing circuit status an agent would grab a list of circuits, looks up the status/utilization/etc, and generates E2EMon-like web pages showing that status

Algorithm:
 * Once every X minutes, the agent performs the following tasks
   * Retrieves the list of current circuits from the IDC
     * Depends: client for retrieving the list of circuits from the IDC
     * Depends: knowing how to convert the IDC identifier into a circuit identifier (need to standardize this process)
   * Looks up the circuit descriptor in the local Topology Service
     * Could look up the TS associated with the domain and then look up the TS, but that's probably not necessary
     * Depends: A TS client
   * Queries the lookup service looking for the TS associated with each domain
     * Depends: An LS client
   * Looks up the segment descriptors in their respective TS
     * Depends: A TS client
   * Looks up the vlan ports pointed to by the segment descriptors
     * Depends: A TS client
   * Looks up the base ports pointed to by the vlan ports
     * Depends: A TS client
   * Looks up the nodes pointed to by the base ports
     * Depends: A TS client
   * Looks up the MAs containing data on the utilization, oper status and admin status for the hostnames/ifNames
     * Depends: An LS client
   * Caches some or all of the above lookups to make it querying quicker later
   * Queries the MAs for oper status, admin status and utilization
     * Depends: An MA client
   * Generates a series of html files containing the operational, administrative and utilization statistics

=== Topology Service ===
The topology service holds the nodes, ports, and circuit/segment descriptors

Task: modify the existing topology service to support topology defined using the new schema/id format alongside the old topology. If applicable, modify the TS to provide basic access control. Modify the query mechanism if needed or desirable.

Open Questions:
   * How do we differentiate new vs. old topology elements (especially if the namespace may change once NML finalizes their representation)? Just go by the identifiers?

== Example Circuit Monitoring Topology Elements ==

{{{
<!-- Circuit Descriptor -->
<nml:link id="urn:glif:internet2.edu:oscars_ion.internet2.edu-1680">
    <nml:name>oscars_ion.internet2.edu-1680</nml:name>
    <nml:description>TeraPaths, BNL-1294783394550, circuit</nml:description>
    <nml:capacity>250000000</nml:capacity>

    <nml:lifetime>
        <nml:start>1295276597</nml:start>
        <nml:end>1295281997</nml:end>
    <nml:lifetime>

    <nml:relation type="bidirectional-link">
        <nml:link idRef="urn:glif:internet2.edu:oscars_ion.internet2.edu-1680_atob" />
        <nml:link idRef="urn:glif:internet2.edu:oscars_ion.internet2.edu-1680_btoa" />
    </nml:relation>
</nml:link>

<nml:link id="urn:glif:internet2.edu:oscars_ion.internet2.edu-1680_atob">
    <nml:name>oscars_ion.internet2.edu-1680</nml:name>
    <nml:description>TeraPaths, BNL-1294783394550, circuit</nml:description>
    <nml:capacity>250000000</nml:capacity>

    <nml:lifetime>
        <nml:start>1295276597</nml:start>
        <nml:end>1295281997</nml:end>
    <nml:lifetime>

    <nml:relation type="connects">
        <nml:link idRef="urn:glif:internet2.edu:oscars_ion.internet2.edu-1680_segment_atob">
          <nml:relation type="next">
              <nml:link idRef="urn:glif:es.net:oscars_ion.internet2.edu-1680_segment_atob" />
          </nml:relation>
        </nml:link>
        <nml:link idRef="urn:glif:es.net:oscars_ion.internet2.edu-1680_segment_atob">
          <nml:relation type="next">
              <nml:link idRef="urn:glif:caltech.edu:oscars_ion.internet2.edu-1680_segment_atob" />
          </nml:relation>
        </nml:link>
        <nml:link idRef="urn:glif:caltech.edu:oscars_ion.internet2.edu-1680_segment_atob" />
    </nml:relation>
</nml:link>

<nml:link id="urn:glif:internet2.edu:oscars_ion.internet2.edu-1680_btoa">
    <nml:name>oscars_ion.internet2.edu-1680</nml:name>
    <nml:description>TeraPaths, BNL-1294783394550, circuit</nml:description>
    <nml:capacity>250000000</nml:capacity>

    <nml:lifetime>
        <nml:start>1295276597</nml:start>
        <nml:end>1295281997</nml:end>
    <nml:lifetime>

    <nml:relation type="connects">
        <nml:link idRef="urn:glif:internet2.edu:oscars_ion.internet2.edu-1680_segment_btoa">
          <nml:relation type="next">
              <nml:link idRef="urn:glif:es.net:oscars_ion.internet2.edu-1680_segment_btoa" />
          </nml:relation>
        </nml:link>
        <nml:link idRef="urn:glif:es.net:oscars_ion.internet2.edu-1680_segment_btoa">
          <nml:relation type="next">
              <nml:link idRef="urn:glif:caltech.edu:oscars_ion.internet2.edu-1680_segment_btoa" />
          </nml:relation>
        </nml:link>
        <nml:link idRef="urn:glif:caltech.edu:oscars_ion.internet2.edu-1680_segment_btoa" />
    </nml:relation>
</nml:link>

<!-- Segment Descriptor -->
<nml:link id="urn:glif:internet2.edu:oscars_ion.internet2.edu-1680_segment_atob">
    <nml:name>oscars_ion.internet2.edu-1680</nml:name>
    <nml:description>TeraPaths, BNL-1294783394550, circuit</nml:description>
    <nml:capacity>250000000</nml:capacity>

    <nml:lifetime>
        <nml:start>1295276597</nml:start>
        <nml:end>1295281997</nml:end>
    <nml:lifetime>

    <nml:relation type="connects">
        <nml:port idRef="urn:glif:internet2.edu:rtr.chic_xe-6/0/0.3562">
          <nml:relation type="next">
	      <nml:port idRef="urn:glif:internet2.edu:rtr.chic_ge-0/0/0.3562" />
          </nml:relation>
        </nml:port>
        <nml:port idRef="urn:glif:internet2.edu:rtr.chic_ge-0/0/0.3562">
          <nml:relation type="next">
	      <nml:port idRef="urn:glif:internet2.edu:rtr.newy_xe-0/0/0.3562" />
          </nml:relation>
        </nml:port>
	<nml:port idRef="urn:glif:internet2.edu:rtr.newy_xe-0/0/0.3562">
          <nml:relation type="next">
	      <nml:port idRef="urn:glif:internet2.edu:rtr.newy_xe-2/1/0.3562" />
          </nml:relation>
        </nml:port>
	<nml:port idRef="urn:glif:internet2.edu:rtr.newy_xe-2/1/0.3562" />
    </nml:relation>
</nml:link>

<nml:link id="urn:glif:internet2.edu:oscars_ion.internet2.edu-1680_segment_btoa">
    <nml:name>oscars_ion.internet2.edu-1680</nml:name>
    <nml:description>TeraPaths, BNL-1294783394550, circuit</nml:description>
    <nml:capacity>250000000</nml:capacity>

    <nml:lifetime>
        <nml:start>1295276597</nml:start>
        <nml:end>1295281997</nml:end>
    <nml:lifetime>

    <nml:relation type="connects">
	<nml:port idRef="urn:glif:internet2.edu:rtr.newy_xe-2/1/0.3562">
          <nml:relation type="next">
	      <nml:port idRef="urn:glif:internet2.edu:rtr.newy_xe-0/0/0.3562" />
          </nml:relation>
        </nml:port>
	<nml:port idRef="urn:glif:internet2.edu:rtr.newy_xe-0/0/0.3562">
          <nml:relation type="next">
	      <nml:port idRef="urn:glif:internet2.edu:rtr.chic_ge-0/0/0.3562" />
          </nml:relation>
        </nml:port>
        <nml:port idRef="urn:glif:internet2.edu:rtr.chic_ge-0/0/0.3562">
          <nml:relation type="next">
              <nml:port idRef="urn:glif:internet2.edu:rtr.chic_xe-6/0/0.3562" />
          </nml:relation>
        </nml:port>
        <nml:port idRef="urn:glif:internet2.edu:rtr.chic_xe-6/0/0.3562" />
    </nml:relation>
</nml:link>

<!-- Vlan Ports -->
<nml:port idRef="urn:glif:internet2.edu:rtr.newy_xe-2/1/0.3562">
    <nml:name>xe-2/1/0.3562</nml:name>
    <nml-eth:vlan>3562</nml-eth:vlan>
    <nml:relation type="contained-in">
        <nml:port idRef="urn:glif:internet2.edu:rtr.newy_xe-2/1/0">
    </nml:relation>
</nml:port>

<nml:port idRef="urn:glif:internet2.edu:rtr.newy_xe-0/0/0.3562">
    <nml:name>xe-0/0/0.3562</nml:name>
    <nml-eth:vlan>3562</nml-eth:vlan>
    <nml:relation type="contained-in">
        <nml:port idRef="urn:glif:internet2.edu:rtr.newy_xe-2/1/0">
    </nml:relation>
</nml:port>

<nml:port idRef="urn:glif:internet2.edu:rtr.chic_xe-6/0/0.3562">
    <nml:name>xe-6/0/0.3562</nml:name>
    <nml-eth:vlan>3562</nml-eth:vlan>
    <nml:relation type="contained-in">
        <nml:port idRef="urn:glif:internet2.edu:rtr.chic_xe-6/0/0">
    </nml:relation>
</nml:port>

<nml:port idRef="urn:glif:internet2.edu:rtr.chic_xe-0/0/0.3562">
    <nml:name>xe-0/0/0.3562</nml:name>
    <nml-eth:vlan>3562</nml-eth:vlan>
    <nml:relation type="contained-in">
        <nml:port idRef="urn:glif:internet2.edu:rtr.chic_xe-0/0/0">
    </nml:relation>
</nml:port>

<!-- Base Ports -->
<nml:port idRef="urn:glif:internet2.edu:rtr.newy_xe-2/1/0">
    <nml:name>xe-2/1/0</nml:name>
    <nml:relation type="contained-in">
        <nml:port idRef="urn:glif:internet2.edu:rtr.newy">
    </nml:relation>
</nml:port>

<nml:port idRef="urn:glif:internet2.edu:rtr.newy_xe-0/0/0">
    <nml:name>xe-0/0/0</nml:name>
    <nml:relation type="contained-in">
        <nml:port idRef="urn:glif:internet2.edu:rtr.newy">
    </nml:relation>
</nml:port>

<nml:port idRef="urn:glif:internet2.edu:rtr.chic_xe-6/0/0">
    <nml:name>xe-6/0/0</nml:name>
    <nml:relation type="contained-in">
        <nml:port idRef="urn:glif:internet2.edu:rtr.chic">
    </nml:relation>
</nml:port>

<nml:port idRef="urn:glif:internet2.edu:rtr.chic_xe-0/0/0">
    <nml:name>xe-0/0/0</nml:name>
    <nml:relation type="contained-in">
        <nml:port idRef="urn:glif:internet2.edu:rtr.chic">
    </nml:relation>
</nml:port>

<!-- Nodes -->
<nml:node id="urn:glif:internet2.edu:rtr.chic">
    <nml:name>rtr.chic.net.internet2.edu</nml:name>
    <nml:location>
        <nml:city>Chicago</nml:city>
        <nml:country>USA</nml:country>
    </nml:location>
    <nml:relation type="contains">
        <nml:port idRef="urn:glif:internet2.edu:rtr.chic_xe-0/0/0">
        <nml:port idRef="urn:glif:internet2.edu:rtr.chic_xe-6/0/0">
    </nml:relation>
</nml:node>

<nml:node id="urn:glif:internet2.edu:rtr.newy">
    <nml:name>rtr.newy.net.internet2.edu</nml:name>
    <nml:location>
        <nml:city>New York</nml:city>
        <nml:country>USA</nml:country>
    </nml:location>
    <nml:relation type="contains">
        <nml:port idRef="urn:glif:internet2.edu:rtr.newy_xe-0/0/0">
        <nml:port idRef="urn:glif:internet2.edu:rtr.newy_xe-2/1/0">
    </nml:relation>
</nml:node>
}}}

== Example Client Query Method for Passive Measurements ==

 # lookup topology services containing "internet2.edu" elements
 # query 1 or more topology services for link with name "urn:glif:internet2.edu:oscars_ion.internet2.edu-1680"
   * if not found, report error
 # read through link "urn:glif:internet2.edu:oscars_ion.internet2.edu-1680" and pull out the two unidirectional link ids
 # query the TS(es) located in #2 for those undirectional links
   * if not found, report error
 # read through the undirectional links and pull out the segment identifiers
 # lookup the topology services containing the domains from the segment identifiers
 # query each topology service for their respective segments
 # go through each segment identifier, and pull out the port identifiers
 # query each topology service for the ports
 # qead through each port, record its ifName (name) and pull out the identifier for the element in the "contains" relationship.
 # query each topology service for the elements.
 # if the element is a port, continue looking up elements. if the element is a node, record its hostname (name element).
 # for each host/port pair, lookup the MA(s) containing utilization and status information about that host
 # query each MA for the respective host/port pairs it contains

== Open Question: Active Measurements? ==
How will active measurements be tied to the underlying circuits they traverse? To associate the the measurement to the circuit from a high-level, we'd need some way of linking the circuit ID with the active measurement. A related open question would be how to define directionality in this circumstance? The high-level association has the downside of not providing detailed information to the client. If a bwctl test is said to traverse a circuit, but has hops above and beyond the circuit itself, those hops become lost misleading the client. It also has the downside of not working with things like LambdaStation which might automagically switch to circuit under the hood without telling the measurement infrastructure about it.

Another way to associate the measurements on a lower level. This would be to look at the path itself, and then look for active tests that traverse that path. This could be difficult and time-consuming with the added wrinkle that the client may not be able to find enough topology information to make this determination.

== Last Updated ==

$Id$
