#summary Testing for gLSes and hLSes

<wiki:toc max_depth="6" />

= Introduction =

These tests aim to answer the following questions
 # How many gLSes are active?
 # How many hLSes are registered per each gLS?
 # How many gLSes does each hLS register on?
 # For registered hLS how many are actually working?

In addition to that we show some results about the usage of configuration parameters on perfSONAR deployment, e.g. serviceDescription and serviceName. These results do not reflect performance but it we show it for two reasons. First, as indication how really these parameters are useful. Second, give statistics about how perfSONAR community are using available features of perfSONAR.

= gLS Testing =
First step is to find the gLSes. We used the hints on http://www.perfsonar.net/gls.root.hints as source for the available gLSes. Second step is to query all gLSes for the available hLSes. We run the following XQuery on all gLSes registered on the root.hints.
{{{
<nmwg:message id="msg1" type="LSQueryRequest" xmlns:nmwg="http://ggf.org/ns/nmwg/base/2.0/" xmlns:xquery="http://ggf.org/ns/nmwg/tools/org/perfsonar/service/lookup/xquery/1.0/">
    <nmwg:metadata id="meta1">
        <xquery:subject id="sub1">
        declare namespace nmwg="http://ggf.org/ns/nmwg/base/2.0/";
        declare namespace perfsonar="http://ggf.org/ns/nmwg/tools/org/perfsonar/1.0/";
        declare namespace psservice="http://ggf.org/ns/nmwg/tools/org/perfsonar/service/1.0/";
        declare namespace summary="http://ggf.org/ns/nmwg/tools/org/perfsonar/service/lookup/summarization/2.0/";
        
        for $metadata in /nmwg:store[@type="LSStore"]/nmwg:metadata 
        return $metadata/perfsonar:subject/psservice:service
    </xquery:subject>
        <nmwg:eventType>http://ggf.org/ns/nmwg/tools/org/perfsonar/service/lookup/xquery/1.0</nmwg:eventType>
        <xquery:parameters id="param.1">
            <nmwg:parameter name="lsOutput">native</nmwg:parameter>
        </xquery:parameters>
    </nmwg:metadata>
    <nmwg:data id="d1" metadataIdRef="meta1"/>
</nmwg:message>
}}}

We found that only 4 out of 9 gLSes registered on root.hints gave results

|| *gLS* || *Number of hLSes* || *Notes*||
||http://ndb1.internet2.edu:9991/perfSONAR_PS/services/gLS||170|| ||
||http://blackseal.damsl.cis.udel.edu:9991/perfSONAR_PS/services/gLS||Error sending request to service: 500 Can't connect to blackseal.damsl.cis.udel.edu:9991 (connect: Connection refused)|| This is NOT gLS now removed from root.hints||
||http://ps1.es.net:9990/perfSONAR_PS/services/gLS||175|| ||
||http://ps4.es.net:9990/perfSONAR_PS/services/gLS||177|| ||
||http://ls.monipe.rnp.br:9990/perfSONAR_PS/services/gLS||Error sending request to service: 500 alarm|| ||
||http://xenmon.fnal.gov:9995/perfSONAR_PS/services/gLS||Error sending request to service: 500 Can't connect to xenmon.fnal.gov:9995 (connect: Connection refused)|| ||
||http://ls.perfsonar.pionier.net.pl:9990/perfSONAR_PS/services/gLS||Database errors prevented the transaction from completing|| ||
||http://ps1.jp.apan.net:9990/perfSONAR_PS/services/gLS||181|| ||
||http://moonshine.damsl.cis.udel.edu:9991/perfSONAR_PS/services/gLS||Database errors prevented the transaction from completing|| ||


Each hLS register to multiple gLSes. The total number of unique hLSes is 184. The following table shows statistics about the number of gLS registration for each hLS.
|| *Number gLSes registered at* || *Number of hLS* || *Notes* ||
|| 1 || Zero || Other runs of the test gave 4||
|| 2 || 6 || ||
|| 3 || 21 || ||
|| 4 || 157 || ||
|| Total || 184|| ||

The following table shows the service types used for describing hLS
|| *Service Type* || *Number of times used* ||
|| LS || 2 ||
|| ls || 13 ||
|| hLS || 169 ||

The following table shows service names used for hLSes
|| *Service Name* || *Number of times used* ||
|| APAN-JP Home Lookup Service || 1 ||
|| CA-TRIIUMF-XML-LS || 1 ||
|| CH-CERN-XML-LS || 1 ||
|| DK-NDGF-XML-LS || 1 ||
|| FCCN-XML-LS || 1 ||
|| Fermilab Lookup Service || 1 ||
|| Home Lookup Service || 1 ||
|| IT-INFN-CNAF-XML-LS || 1 ||
|| Internet2 DCN Home Lookup Service || 1 ||
|| Internet2 Home Lookup Service 2 || 1 ||
|| JGN2Plus Home Lookup Service || 1 ||
|| NECTEC Lookup Service || 1 ||
|| ORG Home Lookup Service || 1 ||
|| PIONIER perfSONAR hLS (Poznan, Poland) || 1 ||
|| RNP Home Lookup Service || 1 ||
|| SPRACE Lookup Service || 1 ||
|| UK-T1-RAL-XML-LS || 1 ||
|| US-FNAL-CMS-XML-LS || 1 ||
|| US-T1-BNL-XML-LS || 1 ||
|| University of Delaware Home Lookup Service || 1 ||
|| VinaREN Lookup Service || 1 ||
|| XML-LS-GEANT2 || 1 ||
|| XML-LS-TW-ASGC || 1 ||
|| pS-XML-LS-GEANT-SECONDARY || 1 ||
|| Geant3 JAVA - XML LS  || 2 ||
|| Internet2 Home Lookup Service || 3 ||
|| ESnet Home Lookup Service || 4 ||
|| Lookup Service || 151 ||
|| *Total* || *184* ||




The following table shows service description usage statistics for hLSes
|| *Service Description* || *Number of times used* || Notes ||
|| _Unique Description_ || 103 || Two interesting descriptions "ORG Home Lookup Service (CITY, STATE, COUNTRY)" and "VinaREN NACESTI perfSONAR Service (CITY, STATE, COUNTRY)"||
|| _Description used twice_ || 12 || ||
|| _Description used three times_ || 2 || ||
|| _Description used four times_ || 4 || ||
|| _Default description_ || 78 || perfSONAR_PS Lookup Service ||
|| _Empty_ || 2 || ||
|| *Total* || 204 || I think that some services registered with multiple descriptions, need to double check! ||

The following table shows organization usage statistics for hLSes
|| *Organization* || *Number of times used* || Notes ||
|| CA-TRIUMF || 1 || ||
|| CH-CERN || 1 || ||
|| DK-NDGF || 1 || ||
|| FCCN || 1 || ||
|| GEANT || 1 || ||
|| GEANT2 || 1 || ||
|| IT-INFN-CNAF || 1 || ||
|| PIONIER || 1 || ||
|| RNP || 1 || ||
|| TW-ASGC || 1 || ||
|| UK-T1-RAL || 1 || ||
|| US-FNAL-CMS || 1 || ||
|| US-T1-BNL || 1 || ||
|| _empty_ || 171 || ||
|| *Total* || *184* || ||


The following table shows contact usage statistics for hLSes
|| *Organization* || *Number of times used* || Notes ||
|| herbert dot souza at unifacs dot br || 1 || ||
|| szymon dot trocha at psnc dot pl || 1 || ||
|| service dot support at geant2 dot net  || 11 || ||
|| _empty_ || 171 || ||
|| *Total* || *184* || ||


=Testing hLSes=
For all hLSes registered at gLSes we run the following query to get all registered services on each hLS
{{{
<nmwg:message id="msg1" type="LSQueryRequest" xmlns:nmwg="http://ggf.org/ns/nmwg/base/2.0/" xmlns:xquery="http://ggf.org/ns/nmwg/tools/org/perfsonar/service/lookup/xquery/1.0/">
    <nmwg:metadata id="meta1">
        <xquery:subject id="sub1">
        declare namespace nmwg="http://ggf.org/ns/nmwg/base/2.0/";
        declare namespace perfsonar="http://ggf.org/ns/nmwg/tools/org/perfsonar/1.0/";
        declare namespace psservice="http://ggf.org/ns/nmwg/tools/org/perfsonar/service/1.0/";
        declare namespace summary="http://ggf.org/ns/nmwg/tools/org/perfsonar/service/lookup/summarization/2.0/";
        
        for $metadata in /nmwg:store[@type="LSStore"]/nmwg:metadata 
        return $metadata/perfsonar:subject/psservice:service
    </xquery:subject>
        <nmwg:eventType>http://ggf.org/ns/nmwg/tools/org/perfsonar/service/lookup/xquery/1.0</nmwg:eventType>
        <xquery:parameters id="param.1">
            <nmwg:parameter name="lsOutput">native</nmwg:parameter>
        </xquery:parameters>
    </nmwg:metadata>
    <nmwg:data id="d1" metadataIdRef="meta1"/>
</nmwg:message>
}}}


We found that only 99 out of 184 gave results.
|| *Number of not working hLSes* || *Reason* ||
|| 63 || Not investigated yet, but on random sample mostly is "Error sending request to service: 500 alarm" ||
|| 10 || Nothing returned for search. ||
|| 9 || This version of LS supports only [escaped] results of xquery (by default). You used [native] value. ||
|| 2 || Database errors prevented the transaction from completing ||
|| 1 || An internal error occurred while servicing this metadata/data block ||
|| *85* || *Total* ||


The following table shows the distribution of services per hLS. Note that each service can register to multiple hLSes. The results shows that the distribution of services is not balanced and just three hLSes are taking the vast majority of the load.
|| *Number of registered services* || *Number of hLSes* || *Notes*||
|| 1 || 37 || ||
|| 2 || 27 || ||
|| 3 || 28 || ||
|| 4 || 4  || ||
|| 56 || 1 || http://ndb1.internet2.edu:9995/perfSONAR_PS/services/hLS ||
|| 97 || 1 || http://ps5.es.net:8095/perfSONAR_PS/services/hLS ||
|| 99 || 1 || http://ps2.es.net:8095/perfSONAR_PS/services/hLS ||

Each perfSONAR service can register at many hLSes. The following tables shows the number of hLSes that each service register at. Most services register once while some others register twice. But some services from es.net register three times.
|| *Number hLSes registered at* || *Number of Services* || *Notes* ||
|| 1 || 175 || ||
|| 2 || 59 || ||
|| 3 || 50 || All these service accessPoints are *owamp.es.net ||


=Collecting real queries from moonshine gLS =
We changed the current deployed gLS on moonshine.damsl.cis.udel.edu to modified version of
netlogged gLS. The modified version logs the query and response for the query as well. 
After running the logged version for three days, 12974 queries where served. The following tables shows the types of queries and number of queries served from that type.

|| *Query* || *Number of Queries* || *Notes* ||
|| {{{declare namespace perfsonar=""; declare namespace nmwg=""; declare namespace psservice=""; /nmwg:store[@type=""]/nmwg:metadata[./perfsonar:subject/psservice:service/psservice:serviceType[text()="" or text()="" or text()="" or text()=""]]}}} || 12875 || This query is probably generated by the cache.pl ||
|| {{{declare namespace nmwg=""; declare namespace summary=""; declare namespace perfsonar=""; declare namespace psservice=""; declare namespace nmtb=""; for $metadata in /nmwg:store[@type=""]/nmwg:metadata let $metadata_id := $metadata/@id let $data := /nmwg:store[@type=""]/nmwg:data[@metadataIdRef=$metadata_id] where $data/nmwg:metadata/nmwg:eventType[text()=""] and $data/nmwg:metadata/summary:subject/nmtb:domain/nmtb:name[@type="" and text()=""] return $metadata/perfsonar:subject/psservice:service/psservice:accessPoint}}}|| 85 || ||
|| {{{/nmwg:store[@type=""]/nmwg:metadata/*[local-name()=""]/*[local-name()=""]/*[local-name()=""]}}}|| 5 || ||
|| {{{declare namespace perfsonar=""; declare namespace nmwg=""; declare namespace psservice=""; /nmwg:store[@type=""]/nmwg:metadata[./perfsonar:subject/psservice:service/psservice:serviceType[text()=""]]}}}|| 4 || ||
|| {{{declare namespace perfsonar=""; declare namespace nmwg=""; declare namespace psservice=""; /nmwg:store[@type=""]/nmwg:metadata[./perfsonar:subject/psservice:service}}}|| 2 || ||
|| {{{declare namespace perfsonar=""; declare namespace nmwg=""; declare namespace psservice=""; /nmwg:store[@type=""]/nmwg:metadata[./perfsonar:subject/psservice:service/*}}}|| 1 || ||
|| {{{declare namespace nmwg=""; for $metadata in /nmwg:store[@type=""]/nmwg:metadata let $metadata_id := $metadata/@id let $data := /nmwg:store[@type=""]/nmwg:data[@metadataIdRef=$metadata_id] where $data/nmwg:metadata[((.//nmwg:parameter[@name="" and (@value="" or text()="")]) or (.//nmwg:parameter[@name="" and (@value="" or text()="")]) or (.//nmwg:parameter[@name="" and (@value="" or text()="")]) or (.//nmwg:parameter[@name="" and (@value="" or text()="")]))] return $metadata}}}|| 1 || ||
|| {{{declare namespace nmwg=""; for $metadata in /nmwg:store[@type=""]/nmwg:metadata let $metadata_id := $metadata/@id let $data := /nmwg:store[@type=""]/nmwg:data[@metadataIdRef=$metadata_id] where $data/nmwg:metadata[((.//nmwg:parameter[@name="" and (@value="" or text()="")]) or (.//nmwg:parameter[@name="" and (@value="project:LHC-OPN" or text()="project:LHC-OPN")]) or (.//nmwg:parameter[@name="" and (@value="" or text()="")]) or (.//nmwg:parameter[@name="" and (@value="" or text()="")]))] return $metadata}}}|| 1 || ||


== Last Updated ==

$Id$