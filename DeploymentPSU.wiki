= PSU Deployment =

<wiki:toc max_depth="6" />

== Introduction ==

The following describes a proposed plan for deployment of [http://www.internet2.edu/performance performance] tools at The Pennsylvania State University.  The proposed roll-out will be conducted in stages to allow for tool development and user adoption.  Many steps are pending development efforts by Internet2 and project partners.  Feedback about individual items may cause slippage in the schedule or overall way forward.

== Tools ==

The following tools are to be considered in the overall performance rollout.  The following descriptions assume the available of software via RPM packages in a special [YumRepository Internet2 Repository].  This offering will be a joint effort between Internet2 and partners to make available measurement software and related tools.  Internet2 will be committed to maintaining the _master_ instance and would encourage mirroring by interested parties.  All releases of software will be packaged as RPMs and made available in this manner.  

=== BWCTL ===

[http://e2epi.internet2.edu/bwctl/ BWCTL] is a scheduling and policy daemon wrapped around throughput testing tools (e.g. [http://sourceforge.net/projects/iperf Iperf], [http://www.lcp.nrl.navy.mil/nuttcp/ nuttcp]).  Typical use cases for BWCTL:

 # Daemons installed at Points of Presence (_*PoPs*_) of a network.
 # Client applications made available to IT/NOC staff and PSU customers
 # Documentation provided on how and why to use this tool
 # Integration with Monitoring frameworks (e.g. [DeploymentPSU#perfSONAR-BUOY perfSONAR-BUOY])
 
BWCTL is a lightweight tool and requires only minimal installation and maintenance:

 # _*iperf*_ - installed via RPM; available from _alternative_ package repositories such as [http://dag.wieers.com/rpm/ DAG]
 # _*bwctl-server*_ - installed via RPM from Internet2 Repository, deploy to all servers.  
 # _*bwctl-client*_ - installed via RPM from Internet2 Repository, deploy to client machines (helpful on servers)
 
=== OWAMP ===

[http://e2epi.internet2.edu/owamp/ OWAMP] is a reference implementation of the [http://www.rfc-editor.org/rfc/rfc4656.txt One Way Ping RFC].  OWAMP consists of a simple client/server paradigm that is able to stream measurements in either direction and interpret the results.  Typical use cases for OWAMP:

 # Daemons installed at Points of Presence (_*PoPs*_) of a network.
 # Client applications made available to IT/NOC staff and PSU customers
 # Documentation provided on how and why to use this tool
 # Integration with Monitoring frameworks (e.g. [DeploymentPSU#perfSONAR-BUOY perfSONAR-BUOY])

Similar to [DeploymentPSU#BWCTL BWCTL], OWAMP is lightweight and requires minimal installation and maintenance:

 # _*owamp-server*_ - installed via RPM from Internet2 Repository, deploy to all servers.  
 # _*owamp-client*_ - installed via RPM from Internet2 Repository, deploy to client machines (helpful on servers)
 
=== NDT ===

[http://e2epi.internet2.edu/ndt/ NDT] is a diagnostic tool with the goal of making performance debugging a tool that directly involves the user.  NDT relies on modifications to an existing Linux Kernel using the [http://www.web100.org/ Web100] package.  Once installed, the NDT server may be contacted via an included web server (users run tests directly from their web browser) or via a command line interface (_CLI_).  Results of NDT tests attempt to identify potential problems in the network including:

 * Duplex mismatch
 * Buffer Configuration
 * Network bottleneck
 * Loss
 * Congestion
 * Delay
 
Typical use cases for NDT include:

 # Web100 and NDT servers installed at at Points of Presence (_*PoPs*_) of a network.
 # CLI tool made available to IT/NOC staff (maybe PSU customers)
 # Appropriate documentation on how to use both the GUI and CLI, proper announcement that tools are available at certain locations.  
 # Availability of [NPToolkit Network Performance Toolkit] CDs to IT/NOC staff to aid in network debugging

NDT requires more maintenance and Installation than other tools, partially due to the modifications necessary to the Linux Kernel.  Requirements:

 # _*web100-enabled Kernel*_ - installed via RPM from Internet2 Repository, deploy to all servers.  Internet2 is still evaluating how best to handle this situation.  We propose:
   * Making _builds_ of web100 into _vanilla_ kernels from [http://www.kernel.org Kernel.org]
   * Community involvement for this process when applicable - particularly for vendor specific kernels as offered by RHEL and Fedora
   * Housing Kernel RPMs in the Internet2 Repository
   * Guarantee to address all upstream security issues in a timely fashion
 # _*ndt-server*_ - installed via RPM from Internet2 Repository, deploy to all servers.
 # _*ndt-client*_ - installed via RPM from Internet2 Repository, deploy to clients that would require a CLI (helpful at servers as well)

=== SNMP Monitoring ===

We highly recommend the installation of SNMP monitoring software (if not present already).  Tools such as [http://oss.oetiker.ch/mrtg/ MRTG], [http://cricket.sourceforge.net/ Cricket], or [http://www.cacti.net/ Cacti] can easily be integrated with the [DeploymentPSU#SNMP_MA SNMP MA].  Typical use case:

 # Install SNMP monitoring in a central location
 # Monitor all (or as many) network devices as possible
 # Make GUIs from these tools available for internal use
 # Integrate with the [DeploymentPSU#SNMP_MA SNMP MA] for data sharing.  

SNMP monitoring is lightweight and would require installation in a single location as well as enabling the SNMP protocol elsewhere:

 # _*SNMP Monitor*_ - One of the aforementioned tools will suffice.  These are normally available via the package manager for a given distribution.  
 # _*perfSONAR SNMP MA*_ - See [DeploymentPSU#SNMP_MA SNMP MA] for more info.

=== Nagios ===

[http://www.nagios.org/ Nagios] is a monitoring system that the Internet2 developers have been considering to perform the task of _monitoring the monitoring_.  Work here is still preliminary, but goals include:

 * Plugins to monitor perfSONAR services (liveness)
 * Plugins to monitor performance daemons (liveness)
 * Plugins to graph measurement data over time.
 
=== perfSONAR ===

There are man perfSONAR tools available, we will recommend only 3 here with the potential to add more in the future based on what other forms of measurement/monitoring are required.  

==== perfSONAR-BUOY ====

[http://www.internet2.edu/performance/pS-PS/perfsonar-buoy.html perfSONAR-BUOY] is a regular testing framework that wraps the [DeploymentPSU#OWAMP OWAMP] and [DeploymentPSU#BWCTL BWCTL] tools.  The addition of this tool to a network allows for continuous monitoring of desired paths instead of using the tools for diagnostics only.  Use cases:

 # Install BWCTL/OWAMP at Points of Presence (_*PoPs*_) of a network.
 # Configure a central host to act as the database - this host will then collect all periodic measurements
 # Configure CGIs and Dashboard applications (<font color="red">pending</font>) to speak with the database and offer current status.  
 # Configure NOC Alarms such as Nagios (<font color="red">pending</font>) to alert when expected behavior drops.  

perfSONAR-BUOY features many moving parts, including a sometimes manual configuration procedure.  Maintenance can be complex during upgrade procedures.  Requirements:

 # _*bwctl*_ - See [DeploymentPSU#BWCTL BWCTL] for more info.
 # _*owamp*_ - See [DeploymentPSU#OWAMP OWAMP] for more info.
 # _*perfSONAR-BUOY-server*_ - installed via RPM from Internet2 Repository, deploy to all beacons.
 # _*perfSONAR-BUOY-client*_ - installed via RPM from Internet2 Repository, deploy to central server.
 # _*perfSONAR-BUOY-config*_ - Still some open issues about the configuration, namely each _beacon_ needs to have a copy of the config.  Changes would need to be dist'ed out to all:
   * Provide _skeleton_ to make RPMs, PSU could dist out homemade RPMS this way
   * Manage the file via rsync (would be a _local_ solution for anyone, e.g. PSU may do this differently than MCNC)
 # _*perfSONAR-BUOY-cgi*_ - (<font color="red">pending</font>) installed via RPM from Internet2 Repository, deploy to central server.

==== SNMP MA ====

The [http://www.internet2.edu/performance/pS-PS/ma.html SNMP MA] is only required if using the suggestions in [DeploymentPSU#SNMP_Monitoring SNMP Monitoring].  The purpose of this tool is to expose the collected SNMP data from tools such as [http://oss.oetiker.ch/mrtg/ MRTG], [http://cricket.sourceforge.net/ Cricket], or [http://www.cacti.net/ Cacti].  Normally these tools provide a GUI, but making the data available (and sharing it with perfSONAR participants) allows for the sharing of performance information and the potential to create _cross-domain_ GUIs.  Use Cases:

 # Install SNMP monitoring in a central location
 # Monitor all (or as many) network devices as possible
 # Make GUIs from these tools available for internal use
 # Integrate with the [DeploymentPSU#SNMP_MA SNMP MA] for data sharing.  

SNMP monitoring is lightweight and would require installation in a single location as well as enabling the SNMP protocol elsewhere:

 # _*SNMP Monitor*_ - See [DeploymentPSU#SNMP_Monitoring SNMP Monitoring] for more info.
 # _*perfSONAR SNMP MA*_ - installed via RPM from Internet2 Repository, deploy to server machine.  Configuration to integrate with SNMP Monitoring would be tricky, but should be one time only.  

==== Lookup Service ====

The [http://www.internet2.edu/performance/pS-PS/lookup.html Lookup Service] is an Information Service that stores information about perfSONAR and related measurement tools.  This information is then propagated through a global _information cloud_ so other perfSONAR users could discover it.  This service is only required if PSU is comfortable with exposing perfSONAR measurements, or the location of tools such as NDT/OWAMP/BWCTL.  Use Case:

 # Install [http://www.oracle.com/technology/documentation/berkeley-db/xml/index.html Oracle DBXML] on the target machine
 # Install the LS software
 # Install related GUIs (<font color="red">pending</font>)
 
Deployment involves the installation of finicky software:

 # _*dbxml*_ - installed via RPM from Internet2 Repository, deploy to server machine.
 # _*perfSONAR LS*_ - installed via RPM from Internet2 Repository, deploy to server machine.

== Schedule ==

The following is a very loose schedule based on interests of PSU and development activities of Internet2.  

=== Feb and March 2009 ===

Developer time will be focused on the release of new tools (perfsonar, owamp, bwctl).  PSU time can be focused on either testing new releases or deploying existing tools.  

 * _*Internet2 Developers*_

|| _*Date*_ || _*Activity*_ ||
|| Jan/Feb || OWAMP Release ||
|| Jan/Feb || BWCTL Release ||  
|| Early March || Internet2 Repository - public availability ||
|| March, 27 || perfSONAR-PS Release ||

 * _*Penn State Staff*_

|| _*Date*_ || _*Activity*_ ||
|| Early March || Configure Beacons to use Internet2 (and other) Repositories ||
|| Early March || Ensure Beacons are NTP'd and TCP Tune'd ||
|| March || Install BWCTL to Beacons, BWCTL Clients to NOC/IT machines ||
|| Late March || Install OWAMP to Beacons, OWAMP Clients to NOC/IT machines ||
|| Late March || Live CD deployment to selected locations (temporary) ||
  
=== April and May 2009 ===

Developer time will be focused on additional releases (Performance Node) and beta testing.  PSU time can be spent deploying perfSONAR tools and testing new releases.

 * _*Internet2 Developers*_

|| _*Date*_ || _*Activity*_ ||
|| April, 27 || perfSONAR-PS Release (selected services, Nagios support) ||
|| May || Performance Node Live CD Release ||
|| April/May || Possible Coordination for F2F/Training if desired ||

 * _*Penn State Staff*_

|| _*Date*_ || _*Activity*_ ||
|| Mid April || Beta Testing of Live CD - Replace existing Live CDs ||
|| April || perfSONAR-BUOY Deployment using Beacon machines ||
|| Late April/May || Beta Testing of web100/NDT projects - selected live CD locations can be used for this ||

=== Summer 2009 ===

Developers will be planning releases, and can focus on PSU feedback.  PSU can provide feedback, deploy any remaining tools.  

 * _*Internet2 Developers*_

|| _*Date*_ || _*Activity*_ ||
|| June/July || Performance Node (Fedora Based) ||
|| June/July || perfSONAR-PS (planned) ||
|| July/Aug || GUI development ||
|| June/July || Performance Node Demonstration (for JTs) ||
 
 * _*Penn State Staff*_

|| _*Date*_ || _*Activity*_ ||
|| June/July || NDT/web100 full deployment ||
|| June/July || LS if applicable ||
|| Summer || Review current progress, suggest tool/GUI directions ||

== Action Items ==

 * JZ
   # Complete deployment of Internet2 Yum/APT Repo
   # Document Yum/APT Repo procedures
   # Furnish info to KM for PSU deployment of bwctl/owamp
 * KM
   # Deploy Tools
   # Gather requirements for documentation/remaining tool roll-outs

== Last Modified ==

$Id$
