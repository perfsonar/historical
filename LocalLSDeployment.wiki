#summary Deploying LS Infrastructure on a Private Network

<wiki:toc max_depth="6" />

== Introduction ==

(NOTE: this page is for the old perfSONAR lookup service. The new Lookup Service is at: [https://code.google.com/p/simple-lookup-service]

This page outlines the steps necessary to deploy an LS infrastructure for a private domain.  The reasons for doing this can vary from simply being able to locate services similar to a global methodology (e.g. search by keyword, IP range, etc) or using GUIs that would expect services to be located in a gLS instance.  

The following sections will describe how to set up and configure the software packages, along with the necessary modifications that need to be made to supporting software (e.g. perfSONAR services and GUIs).  We will finish with a simple example network that features services, LS instances, and a GUI that will be able to locate measurement data.

_*N.B.*_ This deployment strategy describes changes to the perfSONAR-PS code base released as RPMs _*only*_.  This procedure is not guaranteed to work with the [http://psps.perfsonar.net/toolkit pS Performance Toolkit].  

== Setup ==

The following image describes the general idea of information services in the perfSONAR infrastructure

http://perfsonar-ps.googlecode.com/svn/wiki/LocalLSDeployment/gls_overview.png

 * _*gLS Cloud*_: The overall concept of many connected _*gLS Instances*_.  Over time, each instance will learn the entire state of the world (e.g. _*hLS*_s will register to one or more _*gLS*_s and the _*gLS*_s will share the information).  An intelligent _*Client*_ will be smart enough to contact any instance in the _*Cloud*_ when looking for something since they are all equal.  
 * _*gLS Instances*_: A single _*gLS*_ instance.  Note that a single instance can be a _*Cloud*_ by itself - but for redundancy reasons it is nice to have several.  A _*gLS*_ is based on the same code as the _*hLS*_, it performs the same functions (just at a higher logical level).  
 * _*hLS Instances*_: Responsible for collecting the information from registered _*Services*_ (e.g. _*MA*_s, _*MP*_s).  Summarizes all it knows about, and shares this up a level to the _*gLS*_s
 * _*Services*_: Responsible for making or storing measurements.  Register whom they are and what they manage (e.g. measurement type, where the measurements originate, etc.) to a close _*hLS*_.  
 * _*Clients*_: Searching for something, perhaps a specific domain or measurement type.  Will contact the _*gLS Cloud*_ first, then will be redirected to an _*hLS*_ (or _*hLS*_s), finally will contact the appropriate service for the data in question.  

The above diagram relies on several pieces of software, I will describe each in terms of the [http://psps.perfsonar.net perfSONAR PS] version of the software.  Note that other perfSONAR offerings would work just as well.  

=== Hints File ===

The _*hints*_ file is a listing of _*gLS*_ servers that participate in a given cloud.  This list must accurately reflect what is available for a given _*gLS Cloud*_ as many parts of the framework depend on it's availability:

 * Other _*gLS*_ servers
   * Will consult the list to find peers to synchronize with
 * _*hLS*_ servers
   * Will consult to register
 * _*Clients/Services*_: Will contact to find information.

_*gLS*_s that are not listed in the hints file are essentially _unreachable_.  A _*gLS*_ that is not listed in the hints may of course still use a given hints, but this interaction is very one way.  

For an example, see [http://www.perfsonar.net/gls.root.hints here].

The first step is to establish where your gLS will live, then create a _*hints*_ file that contains this information.  Make it public on a web server and configure all services (_*gLS*_s, _*hLS*_s and _*services*_) aware of the location.  

=== gLS ===

The [http://software.internet2.edu/sources/perfSONAR-PS/perfSONAR_PS-LookupService-3.1.8.tar.gz gLS] is really the same code as the [LocalLSDeployment#hLS hLS].  There is one key change in the configuration file:

{{{
root    1
}}}

This enables the software to function as a root gLS server.  After designating the root server, it is also necessary to add it to the list of _*hints*_ (see [LocalLSDeployment#Hints_File Hints File]).  The remainder of the configuration will look similar to the following (making changes where obvious):

{{{
<port 9991>
    <endpoint /perfSONAR_PS/services/gLS>
        <gls>
			root                            1
				                                # data TTL = 4 days
			ls_ttl                          5760
				                                # 60 minute (1hr) registration window
			ls_registration_interval        60
				                                # 20 minute cleaning/summary window
			maintenance_interval	        20
				                                # Database options (only change path)
			metadata_db_file	            glsstore.dbxml
			metadata_summary_db_file	    glsstore-summary.dbxml
			metadata_db_name	            /var/lib/perfsonar/lookup_service/gls-xmldb
				                                # Service options (please customize)
			service_accesspoint	            http://somehost.somedomain.net:9991/perfSONAR_PS/services/gLS
			service_description             ORG Global Lookup Service (CITY, STATE, COUNTRY)
			service_name                    ORG Global Lookup Service
			service_type	                gLS
		</gls>
		disable	                            0
		module	                            perfSONAR_PS::Services::LS::gLS
	</endpoint>
</port>
	                                            # 60 minute (1hr) registration window
ls_registration_interval	                60
disable_echo	                            0
	                                            # Root hints info, url + local copy location
root_hints_url	                            http://somehost.somedomain.net/gls.root.hints
root_hints_file	                            /var/lib/perfsonar/lookup_service/gls.root.hints
	                                            # Daemon management, shouldn't need changing
reaper_interval	                            20
max_worker_lifetime	                        300
max_worker_processes	                    30
pid_dir                                     /var/run
pid_file	                                gls.pid
}}}

=== hLS ===

The [http://software.internet2.edu/sources/perfSONAR-PS/perfSONAR_PS-LookupService-3.1.8.tar.gz hLS] is really the same code as the [LocalLSDeployment#gLS gLS].  There is one key change in the configuration file:

{{{
root    0
}}}

This changes signifies that this service is _*not*_ a root server, and will simply contact the existing root servers.  Note that this service also relies on the [LocalLSDeployment#Hints_File Hints File], so be sure to properly specify where the file resides.  The configuration file looks similar to the following:

{{{
<port 9995>
    <endpoint /perfSONAR_PS/services/hLS>
        <gls>
			root                            1
				                                # data TTL = 4 days
			ls_ttl                          5760
				                                # 60 minute (1hr) registration window
			ls_registration_interval        60
				                                # 20 minute cleaning/summary window
			maintenance_interval	        20
				                                # Database options (only change path)
			metadata_db_file	            glsstore.dbxml
			metadata_summary_db_file	    glsstore-summary.dbxml
			metadata_db_name	            /var/lib/perfsonar/lookup_service/hls-xmldb
				                                # Service options (please customize)
			service_accesspoint	            http://somehost.somedomain.net:9995/perfSONAR_PS/services/hLS
			service_description             ORG Home Lookup Service (CITY, STATE, COUNTRY)
			service_name                    ORG Home Lookup Service
			service_type	                hLS
		</gls>
		disable	                            0
		module	                            perfSONAR_PS::Services::LS::gLS
	</endpoint>
</port>
	                                            # 60 minute (1hr) registration window
ls_registration_interval	                60
disable_echo	                            0
	                                            # Root hints info, url + local copy location
root_hints_url	                            http://somehost.somedomain.net/gls.root.hints
root_hints_file	                            /var/lib/perfsonar/lookup_service/hls.root.hints
	                                            # Daemon management, shouldn't need changing
reaper_interval	                            20
max_worker_lifetime	                        300
max_worker_processes	                    30
pid_dir                                     /var/run
pid_file	                                hls.pid
}}}

=== perfSONAR-PS Services ===

Each perfSONAR-PS service has the ability to contact an hLS in one of two ways:

 * Directly by specifying an address
 * By using the [LocalLSDeployment#Hints_File Hints File]
 
It is recommended that both ways be set in the configuration.  First the direct specification:

{{{
ls_instance         http://somehost.somedomain.net:9995/perfSONAR_PS/services/hLS
}}}

Note that this should be specified _*in*_ the stanza for the service (e.g. _*port/endpoint/snmp*_, _*port/endpoint/perfsonarbuoy*_, etc.) as well as in the file by itself (see the configuration file for examples).  Lastly, the hints:

{{{
root_hints_url      http://somehost.somedomain.net/gls.root.hints
}}}

=== perfAdmin ===

The [http://software.internet2.edu/sources/perfSONAR-PS/perfSONAR_PS-perfAdmin-3.1.6.tar.gz perfAdmin GUI] needs some manual changes to the [LocalLSDeployment#Hints_File Hints File] location.  Open the _*perfSONAR_PS-perfAdmin/bin/cache.pl*_ file and change:

{{{
my $hints  = "http://www.perfsonar.net/gls.root.hints";
}}}

To the appropriate location specified above.  This change will have the cache script contact the appropriate _*gLS Cloud*_. Also change the following line:

{{{
#my @private_list = ( "10.0.0.0/8", "172.16.0.0/12", "192.168.0.0/16" );
my @private_list = ( );
}}}

This allows the GUI to care about private networks.  All other GUIs will function after this change is made.

== Example Network ==

The following is a test deployment done on a private network (192.168.69.0/255 address space).  The setup consists of 3 machines:

 * gLS Machine (192.168.69.172)
   * Web Server
   * gLS
   * perfAdmin
 * hLS Machine 1 (192.168.69.174)
   * hLS 1
   * Service 1
 * hLS Machine 2 (192.168.69.141)
   * hLS 2
   * Service 2

The interactions between the services will be as follows:

 * Hints File
   * Located at http://192.168.69.172/hints
 * hLS 1
   * Reads hints at http://192.168.69.172/hints and registers to gLS http://192.168.69.172:9991/perfSONAR_PS/services/gLS
 * hLS 2
   * Reads hints at http://192.168.69.172/hints and registers to gLS http://192.168.69.172:9991/perfSONAR_PS/services/gLS
 * Service 1
   * Registers to hLS1 http://192.168.69.174:9995/perfSONAR_PS/services/hLS (_*only*_ - will not use hints)
 * Service 2
   * Registers to hLS2 http://192.168.69.141:9995/perfSONAR_PS/services/hLS (_*only*_ - will not use hints)
 * perfAdmin
   * Reads hints located at http://192.168.69.172/hints

=== gLS Machine ===

Machine is running Centos 5.2 (i386).  Basic setup:

{{{
sudo rpm --import http://www.perfsonar.net/download/services/perfSONAR-PS_RPM-GPG-KEY
wget -c http://software.internet2.edu/Internet2-repo-0.1-2.noarch.rpm
sudo rpm -ivh http://software.internet2.edu/Internet2-repo-0.1-2.noarch.rpm
wget -c http://dag.wieers.com/packages/RPM-GPG-KEY.dag.txt
sudo rpm --import RPM-GPG-KEY.dag.txt
wget -c http://apt.sw.be/redhat/el5/en/i386/rpmforge/RPMS/rpmforge-release-0.3.6-1.el5.rf.i386.rpm
sudo rpm -ivh rpmforge-release-0.3.6-1.el5.rf.i386.rpm
}}}

perfSONAR-PS Service Setup:

{{{
sudo yum install perl-perfSONAR_PS-LookupService perl-perfSONAR_PS-perfAdmin
}}}

Create the hints file:

{{{
[zurawski@clean-centos5 ~]$ cat /var/www/html/hints 
http://192.168.69.172:9991/perfSONAR_PS/services/gLS
}}}

Make sure it is reachable:

http://perfsonar-ps.googlecode.com/svn/wiki/LocalLSDeployment/hints.png

gLS Configuration:

{{{
[zurawski@clean-centos5 ~]$ sudo cat /opt/perfsonar_ps/lookup_service/etc/daemon.conf 
<port 9991>
    <endpoint /perfSONAR_PS/services/gLS>
        <gls>
				                                # just an hLS ... (ORG, CITY, STATE, COUNTRY)
			root                            1
				                                # data TTL = 4 days
			ls_ttl                          5760
				                                # 60 minute (1hr) registaration window
			ls_registration_interval        60
				                                # 20 miute cleaning/summary window
			maintenance_interval	        20
				                                # Database options (only change path)
			metadata_db_file	            glsstore.dbxml
			metadata_summary_db_file	    glsstore-summary.dbxml
			metadata_db_name	            /var/lib/perfsonar/lookup_service/xmldb
				                                # Service options (please customize)
			service_accesspoint	            http://192.168.69.172:9991/perfSONAR_PS/services/gLS
			service_description             Test Global Lookup Service (Washington DC, USA)
			service_name                    Test Global Lookup Service
			service_type	                gLS
		</gls>
		disable	                            0
		module	                            perfSONAR_PS::Services::LS::gLS
	</endpoint>
</port>
	                                            # 60 minute (3hr) registaration window
ls_registration_interval	                60
disable_echo	                            0
	                                            # Root hints info, url + local copy location
root_hints_url	                            http://192.168.69.172/hints
root_hints_file	                            /var/lib/perfsonar/lookup_service/gls.root.hints
	                                            # Daemon management, shouldn't need changing
reaper_interval	                            20
max_worker_lifetime	                        300
max_worker_processes	                    30
pid_dir                                     /var/run
pid_file	                                gls.pid
}}}

The cache program (_*/opt/perfsonar_ps/perfAdmin/bin/cache.pl*_) was changed as well.  Start the gLS:

{{{
[zurawski@clean-centos5 ~]$ sudo /etc/init.d/lookup_service start
/opt/perfsonar_ps/lookup_service/bin/daemon.pl --config=/opt/perfsonar_ps/lookup_service/etc/daemon.conf --pidfile=lookup_service.pid --piddir=/var/run --logger=/opt/perfsonar_ps/lookup_service/etc/daemon_logger.conf --user=perfsonar --group=perfsonar
/etc/init.d/lookup_service start: perfSONAR Lookup Service started

}}}

View perfAdmin (note that there will be nothing here yet):

http://perfsonar-ps.googlecode.com/svn/wiki/LocalLSDeployment/empty_directory.png

http://perfsonar-ps.googlecode.com/svn/wiki/LocalLSDeployment/empty_tree.png

=== hLS Machine 1 ===

Machine is running Centos 4.7 (i386).  Basic setup:

{{{
sudo rpm --import http://www.perfsonar.net/download/services/perfSONAR-PS_RPM-GPG-KEY
wget -c http://software.internet2.edu/Internet2-repo-0.1-2.noarch.rpm
sudo rpm -ivh http://software.internet2.edu/Internet2-repo-0.1-2.noarch.rpm
wget -c http://dag.wieers.com/packages/RPM-GPG-KEY.dag.txt
sudo rpm --import RPM-GPG-KEY.dag.txt
wget -c rpm -Uhv http://apt.sw.be/redhat/el4/en/i386/rpmforge/RPMS/rpmforge-release-0.3.6-1.el4.rf.i386.rpm
sudo rpm -ivh rpmforge-release-0.3.6-1.el4.rf.i386.rpm
}}}

perfSONAR-PS Service Setup:

{{{
sudo yum install perl-perfSONAR_PS-LookupService perl-perfSONAR_PS-SNMPMA
}}}

hLS Configuration:

{{{
[zurawski@clean-centos4 ~]$ sudo cat /opt/perfsonar_ps/lookup_service/etc/daemon.conf 
<port 9995>
    <endpoint /perfSONAR_PS/services/hLS>
        <gls>
				                                # just an hLS ... (ORG, CITY, STATE, COUNTRY)
			root                            0
				                                # data TTL = 4 days
			ls_ttl                          5760
				                                # 60 minute (1hr) registaration window
			ls_registration_interval        60
				                                # 20 miute cleaning/summary window
			maintenance_interval	        20
				                                # Database options (only change path)
			metadata_db_file	            glsstore.dbxml
			metadata_summary_db_file	    glsstore-summary.dbxml
			metadata_db_name	            /var/lib/perfsonar/lookup_service/xmldb
				                                # Service options (please customize)
			service_accesspoint	            http://192.168.69.174:9995/perfSONAR_PS/services/hLS
			service_description             TEST Home Lookup Service 1 (Washington DC, USA)
			service_name                    TEST Home Lookup Service 1
			service_type	                hLS
		</gls>
		disable	                            0
		module	                            perfSONAR_PS::Services::LS::gLS
	</endpoint>
</port>
	                                            # 60 minute (1hr) registaration window
ls_registration_interval	                60
disable_echo	                            0
	                                            # Root hints info, url + local copy location
root_hints_url	                            http://192.168.69.172/hints
root_hints_file	                            /var/lib/perfsonar/lookup_service/hls.root.hints
	                                            # Daemon management, shouldn't need changing
reaper_interval	                            20
max_worker_lifetime	                        300
max_worker_processes	                    30
pid_dir                                     /var/run
pid_file	                                lookup_service.pid


}}}

Start the hLS:

{{{
[zurawski@clean-centos4 ~]$ sudo /etc/init.d/lookup_service start
/opt/perfsonar_ps/lookup_service/bin/daemon.pl --config=/opt/perfsonar_ps/lookup_service/etc/daemon.conf --pidfile=lookup_service.pid --piddir=/var/run --logger=/opt/perfsonar_ps/lookup_service/etc/daemon_logger.conf --user=perfsonar --group=perfsonar
/etc/init.d/lookup_service start: perfSONAR Lookup Service started

}}}

Service Configuration (daemon.conf):

{{{
[zurawski@clean-centos4 etc]$ sudo cat /opt/perfsonar_ps/snmp_ma/etc/daemon.conf 
<port 9990>
    <endpoint /perfSONAR_PS/services/SNMPMA>
        <snmp>
            default_resolution              300
            rrdtool                         /usr/bin/rrdtool
            
            metadata_db_external            none
            metadata_db_external_source     

                                                        # Sample Cacti configuration
#            metadata_db_external                   cacti
#            metadata_db_external_source            /etc/cacti/cactid.conf

                                                        # Sample cricket configuration
#            metadata_db_external                   cricket
#            metadata_db_external_cricket_config    /home/cricket/cricket-config
#            metadata_db_external_cricket_cricket   /home/cricket/cricket
#            metadata_db_external_cricket_data      /home/cricket/cricket-data
#            metadata_db_external_cricket_home      /home/cricket

            metadata_db_file                /var/lib/perfsonar/snmp_ma/store.xml
            metadata_db_type                file

                                                        # Sample dbxml configuration
#            metadata_db_file                       snmpstore.dbxml
#            metadata_db_name                       /var/lib/perfsonar/snmp_ma/xmldb
#            metadata_db_type                       xmldb
                                                        
	                                            # 20 minute registaration window
            ls_registration_interval        20
            enable_registration             1
                                                # fake LS instance (change to something real)
            ls_instance                     http://192.168.69.141:9995/perfSONAR_PS/services/hLS
            
				                                # Service options (please customize)
            service_accesspoint             http://192.168.69.174:9990/perfSONAR_PS/services/SNMPMA
            service_description             TEST SNMP MA 1 (Washington DC, USA)
            service_name                    TEST SNMP MA 1
            service_type                    MA
        </snmp>
        disable                             0
        module                              perfSONAR_PS::Services::MA::SNMP
    </endpoint>
</port>
	                                            # 20 minute registaration window
ls_registration_interval	                20
                                                # fake LS instance (change to something real)
ls_instance                                 http://192.168.69.141:9995/perfSONAR_PS/services/hLS

disable_echo	                            0
	                                            # Root hints info, url + local copy location
root_hints_url	                            http://fake
root_hints_file	                            /var/lib/perfsonar/snmp_ma/root.hints
	                                            # Daemon management, shouldn't need changing
reaper_interval	                            20
max_worker_lifetime	                        300
max_worker_processes	                    30
pid_dir                                     /var/run
pid_file	                                snmp_ma.pid

}}}

Service Configuration (store.xml):

{{{
[zurawski@clean-centos4 ~]$ sudo cat /var/lib/perfsonar/snmp_ma/store.xml 
<?xml version="1.0" encoding="UTF-8"?>
<nmwg:store  xmlns:nmwg="http://ggf.org/ns/nmwg/base/2.0/"
             xmlns:netutil="http://ggf.org/ns/nmwg/characteristic/utilization/2.0/"
             xmlns:neterr="http://ggf.org/ns/nmwg/characteristic/errors/2.0/"
             xmlns:netdisc="http://ggf.org/ns/nmwg/characteristic/discards/2.0/"
             xmlns:nmwgt="http://ggf.org/ns/nmwg/topology/2.0/"
             xmlns:snmp="http://ggf.org/ns/nmwg/tools/snmp/2.0/"
             xmlns:nmtm="http://ggf.org/ns/nmwg/time/2.0/">

  <nmwg:metadata xmlns:nmwg="http://ggf.org/ns/nmwg/base/2.0/" id="m-in-netutil-1">
    <netutil:subject xmlns:netutil="http://ggf.org/ns/nmwg/characteristic/utilization/2.0/" id="s-in-netutil-1">
      <nmwgt:interface xmlns:nmwgt="http://ggf.org/ns/nmwg/topology/2.0/">
        <nmwgt:ifAddress type="ipv4">192.168.69.174</nmwgt:ifAddress>
        <nmwgt:hostName>localhost</nmwgt:hostName>
        <nmwgt:ifName>eth0</nmwgt:ifName>
        <nmwgt:ifIndex>2</nmwgt:ifIndex>
        <nmwgt:direction>in</nmwgt:direction>
        <nmwgt:capacity>1000000000</nmwgt:capacity>
      </nmwgt:interface>
    </netutil:subject>
    <nmwg:parameters id="p-in-netutil-1">
      <nmwg:parameter name="supportedEventType">http://ggf.org/ns/nmwg/characteristic/utilization/2.0</nmwg:parameter>
      <nmwg:parameter name="supportedEventType">http://ggf.org/ns/nmwg/tools/snmp/2.0</nmwg:parameter>
    </nmwg:parameters>
    <nmwg:eventType>http://ggf.org/ns/nmwg/characteristic/utilization/2.0</nmwg:eventType>
    <nmwg:eventType>http://ggf.org/ns/nmwg/tools/snmp/2.0</nmwg:eventType>
  </nmwg:metadata>

  <nmwg:data xmlns:nmwg="http://ggf.org/ns/nmwg/base/2.0/" id="d-in-netutil-1" metadataIdRef="m-in-netutil-1">
    <nmwg:key id="k-in-netutil-1">
      <nmwg:parameters id="pk-in-netutil-1">
        <nmwg:parameter name="eventType">http://ggf.org/ns/nmwg/tools/snmp/2.0</nmwg:parameter>
        <nmwg:parameter name="eventType">http://ggf.org/ns/nmwg/characteristic/utilization/2.0</nmwg:parameter>
        <nmwg:parameter name="type">rrd</nmwg:parameter>
        <nmwg:parameter name="file">/var/lib/perfsonar/snmp_ma/localhost.rrd</nmwg:parameter>
        <nmwg:parameter name="valueUnits">Bps</nmwg:parameter>
        <nmwg:parameter name="dataSource">ifinoctets</nmwg:parameter>
      </nmwg:parameters>
    </nmwg:key>
  </nmwg:data>

  <nmwg:metadata xmlns:nmwg="http://ggf.org/ns/nmwg/base/2.0/" id="m-out-netutil-1">
    <netutil:subject xmlns:netutil="http://ggf.org/ns/nmwg/characteristic/utilization/2.0/" id="s-out-netutil-1">
      <nmwgt:interface xmlns:nmwgt="http://ggf.org/ns/nmwg/topology/2.0/">
        <nmwgt:ifAddress type="ipv4">192.168.69.174</nmwgt:ifAddress>
        <nmwgt:hostName>localhost</nmwgt:hostName>
        <nmwgt:ifName>eth0</nmwgt:ifName>
        <nmwgt:ifIndex>2</nmwgt:ifIndex>
        <nmwgt:direction>out</nmwgt:direction>
        <nmwgt:capacity>1000000000</nmwgt:capacity>
      </nmwgt:interface>
    </netutil:subject>
    <nmwg:parameters id="p-out-netutil-1">
      <nmwg:parameter name="supportedEventType">http://ggf.org/ns/nmwg/characteristic/utilization/2.0</nmwg:parameter>
      <nmwg:parameter name="supportedEventType">http://ggf.org/ns/nmwg/tools/snmp/2.0</nmwg:parameter>
    </nmwg:parameters>
    <nmwg:eventType>http://ggf.org/ns/nmwg/characteristic/utilization/2.0</nmwg:eventType>
    <nmwg:eventType>http://ggf.org/ns/nmwg/tools/snmp/2.0</nmwg:eventType>
  </nmwg:metadata>

  <nmwg:data xmlns:nmwg="http://ggf.org/ns/nmwg/base/2.0/" id="d-out-netutil-1" metadataIdRef="m-out-netutil-1">
    <nmwg:key id="k-out-netutil-1">
      <nmwg:parameters id="pk-out-netutil-1">
        <nmwg:parameter name="eventType">http://ggf.org/ns/nmwg/tools/snmp/2.0</nmwg:parameter>
        <nmwg:parameter name="eventType">http://ggf.org/ns/nmwg/characteristic/utilization/2.0</nmwg:parameter>
        <nmwg:parameter name="type">rrd</nmwg:parameter>
        <nmwg:parameter name="file">/var/lib/perfsonar/snmp_ma/localhost.rrd</nmwg:parameter>
        <nmwg:parameter name="valueUnits">Bps</nmwg:parameter>
        <nmwg:parameter name="dataSource">ifoutoctets</nmwg:parameter>
      </nmwg:parameters>
    </nmwg:key>
  </nmwg:data>

  <nmwg:metadata xmlns:nmwg="http://ggf.org/ns/nmwg/base/2.0/" id="m-in-neterr-1">
    <neterr:subject xmlns:neterr="http://ggf.org/ns/nmwg/characteristic/errors/2.0/" id="s-in-neterr-1">
      <nmwgt:interface xmlns:nmwgt="http://ggf.org/ns/nmwg/topology/2.0/">
        <nmwgt:ifAddress type="ipv4">192.168.69.174</nmwgt:ifAddress>
        <nmwgt:hostName>localhost</nmwgt:hostName>
        <nmwgt:ifName>eth0</nmwgt:ifName>
        <nmwgt:ifIndex>2</nmwgt:ifIndex>
        <nmwgt:direction>in</nmwgt:direction>
        <nmwgt:capacity>1000000000</nmwgt:capacity>
      </nmwgt:interface>
    </neterr:subject>
    <nmwg:parameters id="p-in-neterr-1">
      <nmwg:parameter name="supportedEventType">http://ggf.org/ns/nmwg/characteristic/errors/2.0</nmwg:parameter>
      <nmwg:parameter name="supportedEventType">http://ggf.org/ns/nmwg/tools/snmp/2.0</nmwg:parameter>
    </nmwg:parameters>
    <nmwg:eventType>http://ggf.org/ns/nmwg/characteristic/errors/2.0</nmwg:eventType>
    <nmwg:eventType>http://ggf.org/ns/nmwg/tools/snmp/2.0</nmwg:eventType>
  </nmwg:metadata>

  <nmwg:data xmlns:nmwg="http://ggf.org/ns/nmwg/base/2.0/" id="d-in-neterr-1" metadataIdRef="m-in-neterr-1">
    <nmwg:key id="k-in-neterr-1">
      <nmwg:parameters id="pk-in-neterr-1">
        <nmwg:parameter name="eventType">http://ggf.org/ns/nmwg/tools/snmp/2.0</nmwg:parameter>
        <nmwg:parameter name="eventType">http://ggf.org/ns/nmwg/characteristic/errors/2.0</nmwg:parameter>
        <nmwg:parameter name="type">rrd</nmwg:parameter>
        <nmwg:parameter name="file">/var/lib/perfsonar/snmp_ma/localhost.rrd</nmwg:parameter>
        <nmwg:parameter name="valueUnits">Eps</nmwg:parameter>
        <nmwg:parameter name="dataSource">ifinerrors</nmwg:parameter>
      </nmwg:parameters>
    </nmwg:key>
  </nmwg:data>

  <nmwg:metadata xmlns:nmwg="http://ggf.org/ns/nmwg/base/2.0/" id="m-out-neterr-1">
    <neterr:subject xmlns:neterr="http://ggf.org/ns/nmwg/characteristic/errors/2.0/" id="s-out-neterr-1">
      <nmwgt:interface xmlns:nmwgt="http://ggf.org/ns/nmwg/topology/2.0/">
        <nmwgt:ifAddress type="ipv4">192.168.69.174</nmwgt:ifAddress>
        <nmwgt:hostName>localhost</nmwgt:hostName>
        <nmwgt:ifName>eth0</nmwgt:ifName>
        <nmwgt:ifIndex>2</nmwgt:ifIndex>
        <nmwgt:direction>out</nmwgt:direction>
        <nmwgt:capacity>1000000000</nmwgt:capacity>
      </nmwgt:interface>
    </neterr:subject>
    <nmwg:parameters id="p-out-neterr-1">
      <nmwg:parameter name="supportedEventType">http://ggf.org/ns/nmwg/characteristic/errors/2.0</nmwg:parameter>
      <nmwg:parameter name="supportedEventType">http://ggf.org/ns/nmwg/tools/snmp/2.0</nmwg:parameter>
    </nmwg:parameters>
    <nmwg:eventType>http://ggf.org/ns/nmwg/characteristic/errors/2.0</nmwg:eventType>
    <nmwg:eventType>http://ggf.org/ns/nmwg/tools/snmp/2.0</nmwg:eventType>
  </nmwg:metadata>

  <nmwg:data xmlns:nmwg="http://ggf.org/ns/nmwg/base/2.0/" id="d-out-neterr-1" metadataIdRef="m-out-neterr-1">
    <nmwg:key id="k-out-neterr-1">
      <nmwg:parameters id="pk-out-neterr-1">
        <nmwg:parameter name="eventType">http://ggf.org/ns/nmwg/tools/snmp/2.0</nmwg:parameter>
        <nmwg:parameter name="eventType">http://ggf.org/ns/nmwg/characteristic/errors/2.0</nmwg:parameter>
        <nmwg:parameter name="type">rrd</nmwg:parameter>
        <nmwg:parameter name="file">/var/lib/perfsonar/snmp_ma/localhost.rrd</nmwg:parameter>
        <nmwg:parameter name="valueUnits">Eps</nmwg:parameter>
        <nmwg:parameter name="dataSource">ifouterrors</nmwg:parameter>
      </nmwg:parameters>
    </nmwg:key>
  </nmwg:data>

  <nmwg:metadata xmlns:nmwg="http://ggf.org/ns/nmwg/base/2.0/" id="m-in-netdisc-1">
    <netdisc:subject xmlns:netdisc="http://ggf.org/ns/nmwg/characteristic/discards/2.0/" id="s-in-netdisc-1">
      <nmwgt:interface xmlns:nmwgt="http://ggf.org/ns/nmwg/topology/2.0/">
        <nmwgt:ifAddress type="ipv4">192.168.69.174</nmwgt:ifAddress>
        <nmwgt:hostName>localhost</nmwgt:hostName>
        <nmwgt:ifName>eth0</nmwgt:ifName>
        <nmwgt:ifIndex>2</nmwgt:ifIndex>
        <nmwgt:direction>in</nmwgt:direction>
        <nmwgt:capacity>1000000000</nmwgt:capacity>
      </nmwgt:interface>
    </netdisc:subject>
    <nmwg:parameters id="p-in-netdisc-1">
      <nmwg:parameter name="supportedEventType">http://ggf.org/ns/nmwg/characteristic/discards/2.0</nmwg:parameter>
      <nmwg:parameter name="supportedEventType">http://ggf.org/ns/nmwg/tools/snmp/2.0</nmwg:parameter>
    </nmwg:parameters>
    <nmwg:eventType>http://ggf.org/ns/nmwg/characteristic/discards/2.0</nmwg:eventType>
    <nmwg:eventType>http://ggf.org/ns/nmwg/tools/snmp/2.0</nmwg:eventType>
  </nmwg:metadata>

  <nmwg:data xmlns:nmwg="http://ggf.org/ns/nmwg/base/2.0/" id="d-in-netdisc-1" metadataIdRef="m-in-netdisc-1">
    <nmwg:key id="k-in-netdisc-1">
      <nmwg:parameters id="pk-in-netdisc-1">
        <nmwg:parameter name="eventType">http://ggf.org/ns/nmwg/tools/snmp/2.0</nmwg:parameter>
        <nmwg:parameter name="eventType">http://ggf.org/ns/nmwg/characteristic/discards/2.0</nmwg:parameter>
        <nmwg:parameter name="type">rrd</nmwg:parameter>
        <nmwg:parameter name="file">/var/lib/perfsonar/snmp_ma/localhost.rrd</nmwg:parameter>
        <nmwg:parameter name="valueUnits">Dps</nmwg:parameter>
        <nmwg:parameter name="dataSource">ifindiscards</nmwg:parameter>
      </nmwg:parameters>
    </nmwg:key>
  </nmwg:data>

  <nmwg:metadata xmlns:nmwg="http://ggf.org/ns/nmwg/base/2.0/" id="m-out-netdisc-1">
    <netdisc:subject xmlns:netdisc="http://ggf.org/ns/nmwg/characteristic/discards/2.0/" id="s-out-netdisc-1">
      <nmwgt:interface xmlns:nmwgt="http://ggf.org/ns/nmwg/topology/2.0/">
        <nmwgt:ifAddress type="ipv4">192.168.69.174</nmwgt:ifAddress>
        <nmwgt:hostName>localhost</nmwgt:hostName>
        <nmwgt:ifName>eth0</nmwgt:ifName>
        <nmwgt:ifIndex>2</nmwgt:ifIndex>
        <nmwgt:direction>out</nmwgt:direction>
        <nmwgt:capacity>1000000000</nmwgt:capacity>
      </nmwgt:interface>
    </netdisc:subject>
    <nmwg:parameters id="p-out-netdisc-1">
      <nmwg:parameter name="supportedEventType">http://ggf.org/ns/nmwg/characteristic/discards/2.0</nmwg:parameter>
      <nmwg:parameter name="supportedEventType">http://ggf.org/ns/nmwg/tools/snmp/2.0</nmwg:parameter>
    </nmwg:parameters>
    <nmwg:eventType>http://ggf.org/ns/nmwg/characteristic/discards/2.0</nmwg:eventType>
    <nmwg:eventType>http://ggf.org/ns/nmwg/tools/snmp/2.0</nmwg:eventType>
  </nmwg:metadata>

  <nmwg:data xmlns:nmwg="http://ggf.org/ns/nmwg/base/2.0/" id="d-out-netdisc-1" metadataIdRef="m-out-netdisc-1">
    <nmwg:key id="k-out-netdisc-1">
      <nmwg:parameters id="pk-out-netdisc-1">
        <nmwg:parameter name="eventType">http://ggf.org/ns/nmwg/tools/snmp/2.0</nmwg:parameter>
        <nmwg:parameter name="eventType">http://ggf.org/ns/nmwg/characteristic/discards/2.0</nmwg:parameter>
        <nmwg:parameter name="type">rrd</nmwg:parameter>
        <nmwg:parameter name="file">/var/lib/perfsonar/snmp_ma/localhost.rrd</nmwg:parameter>
        <nmwg:parameter name="valueUnits">Dps</nmwg:parameter>
        <nmwg:parameter name="dataSource">ifoutdiscards</nmwg:parameter>
      </nmwg:parameters>
    </nmwg:key>
  </nmwg:data>

</nmwg:store>

}}}

Start the service:

{{{
[zurawski@clean-centos4 ~]$ sudo /etc/init.d/snmp_ma start
/opt/perfsonar_ps/snmp_ma/bin/daemon.pl --config=/opt/perfsonar_ps/snmp_ma/etc/daemon.conf --pidfile=snmp_ma.pid --piddir=/var/run --logger=/opt/perfsonar_ps/snmp_ma/etc/daemon_logger.conf --user=perfsonar --group=perfsonar
/etc/init.d/snmp_ma start: perfSONAR SNMP MA Service started
}}}

Re-start the hLS (speeds up the summarization process):

{{{
[zurawski@clean-centos4 ~]$ sudo /etc/init.d/lookup_service restart
/etc/init.d/lookup_service stop: perfSONAR Lookup Service stopped
waiting...
/opt/perfsonar_ps/lookup_service/bin/daemon.pl --config=/opt/perfsonar_ps/lookup_service/etc/daemon.conf --pidfile=lookup_service.pid --piddir=/var/run --logger=/opt/perfsonar_ps/lookup_service/etc/daemon_logger.conf --user=perfsonar --group=perfsonar
/etc/init.d/lookup_service start: perfSONAR Lookup Service started

}}}

Re-start the hLS again (speeds up the summarization process):

{{{
[zurawski@clean-centos4 ~]$ sudo /etc/init.d/lookup_service restart
/etc/init.d/lookup_service stop: perfSONAR Lookup Service stopped
waiting...
/opt/perfsonar_ps/lookup_service/bin/daemon.pl --config=/opt/perfsonar_ps/lookup_service/etc/daemon.conf --pidfile=lookup_service.pid --piddir=/var/run --logger=/opt/perfsonar_ps/lookup_service/etc/daemon_logger.conf --user=perfsonar --group=perfsonar
/etc/init.d/lookup_service start: perfSONAR Lookup Service started

}}}

=== hLS Machine 2 ===

Machine is running Centos 5.3 (x86_64).  Basic setup:

{{{
sudo rpm --import http://www.perfsonar.net/download/services/perfSONAR-PS_RPM-GPG-KEY
wget -c http://software.internet2.edu/Internet2-repo-0.1-2.noarch.rpm
sudo rpm -ivh http://software.internet2.edu/Internet2-repo-0.1-2.noarch.rpm
wget -c http://dag.wieers.com/packages/RPM-GPG-KEY.dag.txt
sudo rpm --import RPM-GPG-KEY.dag.txt
wget -c rpm -Uhv http://apt.sw.be/redhat/el5/en/x86_64/rpmforge/RPMS//rpmforge-release-0.3.6-1.el5.rf.x86_64.rpm
sudo rpm -ivh rpmforge-release-0.3.6-1.el5.rf.x86_64.rpm
}}}

perfSONAR-PS Service Setup:

{{{
sudo yum install perl-perfSONAR_PS-LookupService perl-perfSONAR_PS-SNMPMA
}}}

hLS Configuration:

{{{
[zurawski@clean-centos5 ~]$ sudo cat /opt/perfsonar_ps/lookup_service/etc/daemon.conf 
<port 9995>
    <endpoint /perfSONAR_PS/services/hLS>
        <gls>
				                                # just an hLS ... (ORG, CITY, STATE, COUNTRY)
			root                            0
				                                # data TTL = 4 days
			ls_ttl                          5760
				                                # 60 minute (1hr) registaration window
			ls_registration_interval        60
				                                # 20 miute cleaning/summary window
			maintenance_interval	        20
				                                # Database options (only change path)
			metadata_db_file	            glsstore.dbxml
			metadata_summary_db_file	    glsstore-summary.dbxml
			metadata_db_name	            /var/lib/perfsonar/lookup_service/xmldb
				                                # Service options (please customize)
			service_accesspoint	            http://192.168.69.141:9995/perfSONAR_PS/services/hLS
			service_description             Test Home Lookup Service 2 (Washington DC, USA)
			service_name                    Test Home Lookup Service 2
			service_type	                hLS
		</gls>
		disable	                            0
		module	                            perfSONAR_PS::Services::LS::gLS
	</endpoint>
</port>
	                                            # 60 minute (1hr) registaration window
ls_registration_interval	                60
disable_echo	                            0
	                                            # Root hints info, url + local copy location
root_hints_url	                            http://192.168.69.172/hints
root_hints_file	                            /var/lib/perfsonar/lookup_service/hls.root.hints
	                                            # Daemon management, shouldn't need changing
reaper_interval	                            20
max_worker_lifetime	                        300
max_worker_processes	                    30
pid_dir                                     /var/run
pid_file	                                hls.pid
}}}

Start the hLS:

{{{
[zurawski@clean-centos5 ~]$ sudo /etc/init.d/lookup_service start
/opt/perfsonar_ps/lookup_service/bin/daemon.pl --config=/opt/perfsonar_ps/lookup_service/etc/daemon.conf --pidfile=lookup_service.pid --piddir=/var/run --logger=/opt/perfsonar_ps/lookup_service/etc/daemon_logger.conf --user=perfsonar --group=perfsonar
/etc/init.d/lookup_service start: perfSONAR Lookup Service started
}}}

Service Configuration (daemon.conf):

{{{
[zurawski@clean-centos5 ~]$ sudo cat /opt/perfsonar_ps/snmp_ma/etc/daemon.conf 
<port 9990>
    <endpoint /perfSONAR_PS/services/SNMPMA>
        <snmp>
            default_resolution              300
            rrdtool                         /usr/bin/rrdtool
            
            metadata_db_external            none
            metadata_db_external_source     

                                                        # Sample Cacti configuration
#            metadata_db_external                   cacti
#            metadata_db_external_source            /etc/cacti/cactid.conf

                                                        # Sample cricket configuration
#            metadata_db_external                   cricket
#            metadata_db_external_cricket_config    /home/cricket/cricket-config
#            metadata_db_external_cricket_cricket   /home/cricket/cricket
#            metadata_db_external_cricket_data      /home/cricket/cricket-data
#            metadata_db_external_cricket_home      /home/cricket

            metadata_db_file                /var/lib/perfsonar/snmp_ma/store.xml
            metadata_db_type                file

                                                        # Sample dbxml configuration
#            metadata_db_file                       snmpstore.dbxml
#            metadata_db_name                       /var/lib/perfsonar/snmp_ma/xmldb
#            metadata_db_type                       xmldb
                                                        
	                                            # 20 minute registaration window
            ls_registration_interval        20
            enable_registration             1
                                                # fake LS instance (change to something real)
            ls_instance                     http://192.168.69.174:9995/perfSONAR_PS/services/hLS
            
				                                # Service options (please customize)
            service_accesspoint             http://192.168.69.141:9990/perfSONAR_PS/services/SNMPMA
            service_description             TEST SNMP MA 2 (Washington DC, USA)
            service_name                    TEST SNMP MA 2
            service_type                    MA
        </snmp>
        disable                             0
        module                              perfSONAR_PS::Services::MA::SNMP
    </endpoint>
</port>
	                                            # 20 minute registaration window
ls_registration_interval	                20
                                                # fake LS instance (change to something real)
ls_instance                                 http://192.168.69.174:9995/perfSONAR_PS/services/hLS

disable_echo	                            0
	                                            # Root hints info, url + local copy location
root_hints_url	                            http://fake
root_hints_file	                            /var/lib/perfsonar/snmp_ma/root.hints
	                                            # Daemon management, shouldn't need changing
reaper_interval	                            20
max_worker_lifetime	                        300
max_worker_processes	                    30
pid_dir                                     /var/run
pid_file	                                snmp_ma.pid

}}}

Service Configuration (store.xml):

{{{
[zurawski@clean-centos5 ~]$ sudo cat /var/lib/perfsonar/snmp_ma/store.xml
<?xml version="1.0" encoding="UTF-8"?>
<nmwg:store  xmlns:nmwg="http://ggf.org/ns/nmwg/base/2.0/"
             xmlns:netutil="http://ggf.org/ns/nmwg/characteristic/utilization/2.0/"
             xmlns:neterr="http://ggf.org/ns/nmwg/characteristic/errors/2.0/"
             xmlns:netdisc="http://ggf.org/ns/nmwg/characteristic/discards/2.0/"
             xmlns:nmwgt="http://ggf.org/ns/nmwg/topology/2.0/"
             xmlns:snmp="http://ggf.org/ns/nmwg/tools/snmp/2.0/"
             xmlns:nmtm="http://ggf.org/ns/nmwg/time/2.0/">

  <nmwg:metadata xmlns:nmwg="http://ggf.org/ns/nmwg/base/2.0/" id="m-in-netutil-1">
    <netutil:subject xmlns:netutil="http://ggf.org/ns/nmwg/characteristic/utilization/2.0/" id="s-in-netutil-1">
      <nmwgt:interface xmlns:nmwgt="http://ggf.org/ns/nmwg/topology/2.0/">
        <nmwgt:ifAddress type="ipv4">192.168.69.141</nmwgt:ifAddress>
        <nmwgt:hostName>localhost</nmwgt:hostName>
        <nmwgt:ifName>eth0</nmwgt:ifName>
        <nmwgt:ifIndex>2</nmwgt:ifIndex>
        <nmwgt:direction>in</nmwgt:direction>
        <nmwgt:capacity>1000000000</nmwgt:capacity>
      </nmwgt:interface>
    </netutil:subject>
    <nmwg:parameters id="p-in-netutil-1">
      <nmwg:parameter name="supportedEventType">http://ggf.org/ns/nmwg/characteristic/utilization/2.0</nmwg:parameter>
      <nmwg:parameter name="supportedEventType">http://ggf.org/ns/nmwg/tools/snmp/2.0</nmwg:parameter>
    </nmwg:parameters>
    <nmwg:eventType>http://ggf.org/ns/nmwg/characteristic/utilization/2.0</nmwg:eventType>
    <nmwg:eventType>http://ggf.org/ns/nmwg/tools/snmp/2.0</nmwg:eventType>
  </nmwg:metadata>

  <nmwg:data xmlns:nmwg="http://ggf.org/ns/nmwg/base/2.0/" id="d-in-netutil-1" metadataIdRef="m-in-netutil-1">
    <nmwg:key id="k-in-netutil-1">
      <nmwg:parameters id="pk-in-netutil-1">
        <nmwg:parameter name="eventType">http://ggf.org/ns/nmwg/tools/snmp/2.0</nmwg:parameter>
        <nmwg:parameter name="eventType">http://ggf.org/ns/nmwg/characteristic/utilization/2.0</nmwg:parameter>
        <nmwg:parameter name="type">rrd</nmwg:parameter>
        <nmwg:parameter name="file">/var/lib/perfsonar/snmp_ma/localhost.rrd</nmwg:parameter>
        <nmwg:parameter name="valueUnits">Bps</nmwg:parameter>
        <nmwg:parameter name="dataSource">ifinoctets</nmwg:parameter>
      </nmwg:parameters>
    </nmwg:key>
  </nmwg:data>

  <nmwg:metadata xmlns:nmwg="http://ggf.org/ns/nmwg/base/2.0/" id="m-out-netutil-1">
    <netutil:subject xmlns:netutil="http://ggf.org/ns/nmwg/characteristic/utilization/2.0/" id="s-out-netutil-1">
      <nmwgt:interface xmlns:nmwgt="http://ggf.org/ns/nmwg/topology/2.0/">
        <nmwgt:ifAddress type="ipv4">192.168.69.141</nmwgt:ifAddress>
        <nmwgt:hostName>localhost</nmwgt:hostName>
        <nmwgt:ifName>eth0</nmwgt:ifName>
        <nmwgt:ifIndex>2</nmwgt:ifIndex>
        <nmwgt:direction>out</nmwgt:direction>
        <nmwgt:capacity>1000000000</nmwgt:capacity>
      </nmwgt:interface>
    </netutil:subject>
    <nmwg:parameters id="p-out-netutil-1">
      <nmwg:parameter name="supportedEventType">http://ggf.org/ns/nmwg/characteristic/utilization/2.0</nmwg:parameter>
      <nmwg:parameter name="supportedEventType">http://ggf.org/ns/nmwg/tools/snmp/2.0</nmwg:parameter>
    </nmwg:parameters>
    <nmwg:eventType>http://ggf.org/ns/nmwg/characteristic/utilization/2.0</nmwg:eventType>
    <nmwg:eventType>http://ggf.org/ns/nmwg/tools/snmp/2.0</nmwg:eventType>
  </nmwg:metadata>

  <nmwg:data xmlns:nmwg="http://ggf.org/ns/nmwg/base/2.0/" id="d-out-netutil-1" metadataIdRef="m-out-netutil-1">
    <nmwg:key id="k-out-netutil-1">
      <nmwg:parameters id="pk-out-netutil-1">
        <nmwg:parameter name="eventType">http://ggf.org/ns/nmwg/tools/snmp/2.0</nmwg:parameter>
        <nmwg:parameter name="eventType">http://ggf.org/ns/nmwg/characteristic/utilization/2.0</nmwg:parameter>
        <nmwg:parameter name="type">rrd</nmwg:parameter>
        <nmwg:parameter name="file">/var/lib/perfsonar/snmp_ma/localhost.rrd</nmwg:parameter>
        <nmwg:parameter name="valueUnits">Bps</nmwg:parameter>
        <nmwg:parameter name="dataSource">ifoutoctets</nmwg:parameter>
      </nmwg:parameters>
    </nmwg:key>
  </nmwg:data>

  <nmwg:metadata xmlns:nmwg="http://ggf.org/ns/nmwg/base/2.0/" id="m-in-neterr-1">
    <neterr:subject xmlns:neterr="http://ggf.org/ns/nmwg/characteristic/errors/2.0/" id="s-in-neterr-1">
      <nmwgt:interface xmlns:nmwgt="http://ggf.org/ns/nmwg/topology/2.0/">
        <nmwgt:ifAddress type="ipv4">192.168.69.141</nmwgt:ifAddress>
        <nmwgt:hostName>localhost</nmwgt:hostName>
        <nmwgt:ifName>eth0</nmwgt:ifName>
        <nmwgt:ifIndex>2</nmwgt:ifIndex>
        <nmwgt:direction>in</nmwgt:direction>
        <nmwgt:capacity>1000000000</nmwgt:capacity>
      </nmwgt:interface>
    </neterr:subject>
    <nmwg:parameters id="p-in-neterr-1">
      <nmwg:parameter name="supportedEventType">http://ggf.org/ns/nmwg/characteristic/errors/2.0</nmwg:parameter>
      <nmwg:parameter name="supportedEventType">http://ggf.org/ns/nmwg/tools/snmp/2.0</nmwg:parameter>
    </nmwg:parameters>
    <nmwg:eventType>http://ggf.org/ns/nmwg/characteristic/errors/2.0</nmwg:eventType>
    <nmwg:eventType>http://ggf.org/ns/nmwg/tools/snmp/2.0</nmwg:eventType>
  </nmwg:metadata>

  <nmwg:data xmlns:nmwg="http://ggf.org/ns/nmwg/base/2.0/" id="d-in-neterr-1" metadataIdRef="m-in-neterr-1">
    <nmwg:key id="k-in-neterr-1">
      <nmwg:parameters id="pk-in-neterr-1">
        <nmwg:parameter name="eventType">http://ggf.org/ns/nmwg/tools/snmp/2.0</nmwg:parameter>
        <nmwg:parameter name="eventType">http://ggf.org/ns/nmwg/characteristic/errors/2.0</nmwg:parameter>
        <nmwg:parameter name="type">rrd</nmwg:parameter>
        <nmwg:parameter name="file">/var/lib/perfsonar/snmp_ma/localhost.rrd</nmwg:parameter>
        <nmwg:parameter name="valueUnits">Eps</nmwg:parameter>
        <nmwg:parameter name="dataSource">ifinerrors</nmwg:parameter>
      </nmwg:parameters>
    </nmwg:key>
  </nmwg:data>

  <nmwg:metadata xmlns:nmwg="http://ggf.org/ns/nmwg/base/2.0/" id="m-out-neterr-1">
    <neterr:subject xmlns:neterr="http://ggf.org/ns/nmwg/characteristic/errors/2.0/" id="s-out-neterr-1">
      <nmwgt:interface xmlns:nmwgt="http://ggf.org/ns/nmwg/topology/2.0/">
        <nmwgt:ifAddress type="ipv4">192.168.69.141</nmwgt:ifAddress>
        <nmwgt:hostName>localhost</nmwgt:hostName>
        <nmwgt:ifName>eth0</nmwgt:ifName>
        <nmwgt:ifIndex>2</nmwgt:ifIndex>
        <nmwgt:direction>out</nmwgt:direction>
        <nmwgt:capacity>1000000000</nmwgt:capacity>
      </nmwgt:interface>
    </neterr:subject>
    <nmwg:parameters id="p-out-neterr-1">
      <nmwg:parameter name="supportedEventType">http://ggf.org/ns/nmwg/characteristic/errors/2.0</nmwg:parameter>
      <nmwg:parameter name="supportedEventType">http://ggf.org/ns/nmwg/tools/snmp/2.0</nmwg:parameter>
    </nmwg:parameters>
    <nmwg:eventType>http://ggf.org/ns/nmwg/characteristic/errors/2.0</nmwg:eventType>
    <nmwg:eventType>http://ggf.org/ns/nmwg/tools/snmp/2.0</nmwg:eventType>
  </nmwg:metadata>

  <nmwg:data xmlns:nmwg="http://ggf.org/ns/nmwg/base/2.0/" id="d-out-neterr-1" metadataIdRef="m-out-neterr-1">
    <nmwg:key id="k-out-neterr-1">
      <nmwg:parameters id="pk-out-neterr-1">
        <nmwg:parameter name="eventType">http://ggf.org/ns/nmwg/tools/snmp/2.0</nmwg:parameter>
        <nmwg:parameter name="eventType">http://ggf.org/ns/nmwg/characteristic/errors/2.0</nmwg:parameter>
        <nmwg:parameter name="type">rrd</nmwg:parameter>
        <nmwg:parameter name="file">/var/lib/perfsonar/snmp_ma/localhost.rrd</nmwg:parameter>
        <nmwg:parameter name="valueUnits">Eps</nmwg:parameter>
        <nmwg:parameter name="dataSource">ifouterrors</nmwg:parameter>
      </nmwg:parameters>
    </nmwg:key>
  </nmwg:data>

  <nmwg:metadata xmlns:nmwg="http://ggf.org/ns/nmwg/base/2.0/" id="m-in-netdisc-1">
    <netdisc:subject xmlns:netdisc="http://ggf.org/ns/nmwg/characteristic/discards/2.0/" id="s-in-netdisc-1">
      <nmwgt:interface xmlns:nmwgt="http://ggf.org/ns/nmwg/topology/2.0/">
        <nmwgt:ifAddress type="ipv4">192.168.69.141</nmwgt:ifAddress>
        <nmwgt:hostName>localhost</nmwgt:hostName>
        <nmwgt:ifName>eth0</nmwgt:ifName>
        <nmwgt:ifIndex>2</nmwgt:ifIndex>
        <nmwgt:direction>in</nmwgt:direction>
        <nmwgt:capacity>1000000000</nmwgt:capacity>
      </nmwgt:interface>
    </netdisc:subject>
    <nmwg:parameters id="p-in-netdisc-1">
      <nmwg:parameter name="supportedEventType">http://ggf.org/ns/nmwg/characteristic/discards/2.0</nmwg:parameter>
      <nmwg:parameter name="supportedEventType">http://ggf.org/ns/nmwg/tools/snmp/2.0</nmwg:parameter>
    </nmwg:parameters>
    <nmwg:eventType>http://ggf.org/ns/nmwg/characteristic/discards/2.0</nmwg:eventType>
    <nmwg:eventType>http://ggf.org/ns/nmwg/tools/snmp/2.0</nmwg:eventType>
  </nmwg:metadata>

  <nmwg:data xmlns:nmwg="http://ggf.org/ns/nmwg/base/2.0/" id="d-in-netdisc-1" metadataIdRef="m-in-netdisc-1">
    <nmwg:key id="k-in-netdisc-1">
      <nmwg:parameters id="pk-in-netdisc-1">
        <nmwg:parameter name="eventType">http://ggf.org/ns/nmwg/tools/snmp/2.0</nmwg:parameter>
        <nmwg:parameter name="eventType">http://ggf.org/ns/nmwg/characteristic/discards/2.0</nmwg:parameter>
        <nmwg:parameter name="type">rrd</nmwg:parameter>
        <nmwg:parameter name="file">/var/lib/perfsonar/snmp_ma/localhost.rrd</nmwg:parameter>
        <nmwg:parameter name="valueUnits">Dps</nmwg:parameter>
        <nmwg:parameter name="dataSource">ifindiscards</nmwg:parameter>
      </nmwg:parameters>
    </nmwg:key>
  </nmwg:data>

  <nmwg:metadata xmlns:nmwg="http://ggf.org/ns/nmwg/base/2.0/" id="m-out-netdisc-1">
    <netdisc:subject xmlns:netdisc="http://ggf.org/ns/nmwg/characteristic/discards/2.0/" id="s-out-netdisc-1">
      <nmwgt:interface xmlns:nmwgt="http://ggf.org/ns/nmwg/topology/2.0/">
        <nmwgt:ifAddress type="ipv4">192.168.69.141</nmwgt:ifAddress>
        <nmwgt:hostName>localhost</nmwgt:hostName>
        <nmwgt:ifName>eth0</nmwgt:ifName>
        <nmwgt:ifIndex>2</nmwgt:ifIndex>
        <nmwgt:direction>out</nmwgt:direction>
        <nmwgt:capacity>1000000000</nmwgt:capacity>
      </nmwgt:interface>
    </netdisc:subject>
    <nmwg:parameters id="p-out-netdisc-1">
      <nmwg:parameter name="supportedEventType">http://ggf.org/ns/nmwg/characteristic/discards/2.0</nmwg:parameter>
      <nmwg:parameter name="supportedEventType">http://ggf.org/ns/nmwg/tools/snmp/2.0</nmwg:parameter>
    </nmwg:parameters>
    <nmwg:eventType>http://ggf.org/ns/nmwg/characteristic/discards/2.0</nmwg:eventType>
    <nmwg:eventType>http://ggf.org/ns/nmwg/tools/snmp/2.0</nmwg:eventType>
  </nmwg:metadata>

  <nmwg:data xmlns:nmwg="http://ggf.org/ns/nmwg/base/2.0/" id="d-out-netdisc-1" metadataIdRef="m-out-netdisc-1">
    <nmwg:key id="k-out-netdisc-1">
      <nmwg:parameters id="pk-out-netdisc-1">
        <nmwg:parameter name="eventType">http://ggf.org/ns/nmwg/tools/snmp/2.0</nmwg:parameter>
        <nmwg:parameter name="eventType">http://ggf.org/ns/nmwg/characteristic/discards/2.0</nmwg:parameter>
        <nmwg:parameter name="type">rrd</nmwg:parameter>
        <nmwg:parameter name="file">/var/lib/perfsonar/snmp_ma/localhost.rrd</nmwg:parameter>
        <nmwg:parameter name="valueUnits">Dps</nmwg:parameter>
        <nmwg:parameter name="dataSource">ifoutdiscards</nmwg:parameter>
      </nmwg:parameters>
    </nmwg:key>
  </nmwg:data>

</nmwg:store>

}}}

Start the service:

{{{
[zurawski@clean-centos5 ~]$ sudo /etc/init.d/snmp_ma start
/opt/perfsonar_ps/snmp_ma/bin/daemon.pl --config=/opt/perfsonar_ps/snmp_ma/etc/daemon.conf --pidfile=snmp_ma.pid --piddir=/var/run --logger=/opt/perfsonar_ps/snmp_ma/etc/daemon_logger.conf --user=perfsonar --group=perfsonar
/etc/init.d/snmp_ma start: perfSONAR SNMP MA Service started

}}}

Re-start the hLS:

{{{
[zurawski@clean-centos5 ~]$ sudo /etc/init.d/lookup_service restart
/etc/init.d/lookup_service stop: perfSONAR Lookup Service stopped
waiting...
/opt/perfsonar_ps/lookup_service/bin/daemon.pl --config=/opt/perfsonar_ps/lookup_service/etc/daemon.conf --pidfile=lookup_service.pid --piddir=/var/run --logger=/opt/perfsonar_ps/lookup_service/etc/daemon_logger.conf --user=perfsonar --group=perfsonar
/etc/init.d/lookup_service start: perfSONAR Lookup Service started

}}}

Re-start the hLS again (speeds up the summarization process):

{{{
[zurawski@clean-centos5 ~]$ sudo /etc/init.d/lookup_service restart
/etc/init.d/lookup_service stop: perfSONAR Lookup Service stopped
waiting...
/opt/perfsonar_ps/lookup_service/bin/daemon.pl --config=/opt/perfsonar_ps/lookup_service/etc/daemon.conf --pidfile=lookup_service.pid --piddir=/var/run --logger=/opt/perfsonar_ps/lookup_service/etc/daemon_logger.conf --user=perfsonar --group=perfsonar
/etc/init.d/lookup_service start: perfSONAR Lookup Service started
}}}

=== Validation ===

On the [LocalLSDeployment#gLS_Machine gLS Machine], restart the gLS (speeds up the summarization):

{{{
[zurawski@clean-centos5 ~]$ sudo /etc/init.d/lookup_service restart
/etc/init.d/lookup_service stop: perfSONAR Lookup Service stopped
waiting...
/opt/perfsonar_ps/lookup_service/bin/daemon.pl --config=/opt/perfsonar_ps/lookup_service/etc/daemon.conf --pidfile=lookup_service.pid --piddir=/var/run --logger=/opt/perfsonar_ps/lookup_service/etc/daemon_logger.conf --user=perfsonar --group=perfsonar
/etc/init.d/lookup_service start: perfSONAR Lookup Service started

}}}

On the [LocalLSDeployment#gLS_Machine gLS Machine], _kick_ the cache program:

{{{
[zurawski@clean-centos5 ~]$ sudo /opt/perfsonar_ps/perfAdmin/bin/cache.pl --verbose
Trying root 'http://192.168.69.172:9991/perfSONAR_PS/services/gLS'
Service: http://192.168.69.174:9995/perfSONAR_PS/services/hLS
		hLS:	http://192.168.69.174:9995/perfSONAR_PS/services/hLS
Service: http://192.168.69.141:9995/perfSONAR_PS/services/hLS
		hLS:	http://192.168.69.141:9995/perfSONAR_PS/services/hLS

 Contacting hLSs
Trying 'http://192.168.69.141:9995/perfSONAR_PS/services/hLS'
Trying 'http://192.168.69.174:9995/perfSONAR_PS/services/hLS'
decoding: 'http://192.168.69.141:9995/perfSONAR_PS/services/hLS'
decoding: 'http://192.168.69.174:9995/perfSONAR_PS/services/hLS'
list.snmpma - http://192.168.69.174:9990/perfSONAR_PS/services/SNMPMA
list.snmpma - http://192.168.69.141:9990/perfSONAR_PS/services/SNMPMA
}}}

View the perfAdmin one more time:

http://perfsonar-ps.googlecode.com/svn/wiki/LocalLSDeployment/full_directory.png

http://perfsonar-ps.googlecode.com/svn/wiki/LocalLSDeployment/full_tree.png

== Last Updated ==

$Id$