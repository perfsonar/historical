= Configuring perfSONAR performance nodes =

This document describes the current interface of the Performance Node Live CD
as well as proposed changes to bring the users of this tool a higher level of 
comfort during the configuration process.  

 * [PerformanceNodeAdminInterface#Interface_Requirements Interface Requirements]
   * [PerformanceNodeAdminInterface#Modes_of_Operation Modes of Operation]
     * [PerformanceNodeAdminInterface#Zero-Config_Mode Zero-Config Mode]
     * [PerformanceNodeAdminInterface#Pre-Config_Mode Pre-Config Mode]
     * [PerformanceNodeAdminInterface#Full_Config_Mode Full Config Mode]
   * [PerformanceNodeAdminInterface#Rebooting Rebooting]
 * [PerformanceNodeAdminInterface#Proposed_Changes Proposed Changes]
   * [PerformanceNodeAdminInterface#Current_Tool_Options Current Tool Options]
   * [PerformanceNodeAdminInterface#Zero-Config_Boot Zero-Config Boot]
   * [PerformanceNodeAdminInterface#Web-based_Configuration Web-based Configuration]
 * [PerformanceNodeAdminInterface#Development_Plan Development Plan]
   * [PerformanceNodeAdminInterface#Final_Knoppix_Release Final Knoppix Release]
   * [PerformanceNodeAdminInterface#First_Fedora_Release First Fedora Release]
   * [PerformanceNodeAdminInterface#Subsequent_Fedora_Releases Subsequent Fedora Releases]

== Interface Requirements ==

Planned operation of this tool should allow the disk to be easily brought online
with minimal assistance from the user.  Special consideration must be given to
_headless_ installs.  Expected behavior on boot is to present the user with a 
prompt via the Command Line Interface (CLI).  This prompt is basic and should 
inquire about additional configuration - inactivity for some length of time
(e.g. 60 seconds) will force the system into
[PerformanceNodeAdminInterface#Zero-Config_Mode Zero-Config Mode].  If the user
makes the choice to enter into configuration (e.g. by addressing the on screen
_prompt_), there are several immediate questions to answer:

 * Define a password for the Administrative GUI
 * Network Identification
   * DHCP
   * Static Address

The boot process will proceed after these steps, concluding with a printed URL
that can be used to access the system.  Note that this URL will be related to
the network identification step - it is provided as service for individuals who
may be unaware of how to access the newly configured machine.  The final result
leaves the system in 
[PerformanceNodeAdminInterface#Pre-Config_Mode Pre-Config Mode].  Eventually
this state could achieved be through use of a specfic _*kickstart*_ file that
indicates the admin password; physical access would not be required. The admin
password should not be codified on an ISO in any way.

The user may now access the Administrative GUIs and activate additional
tools and functionalities if desired. For example, they could enter identifying
information including _*keywords*_; this feature is desirable for communities
such as USATLAS. This would make it possible to register the host with the
Information Services (_*IS*_) infrastructure and have them be easily
recognizable. The _enable_ page for publicizing the host could be pre-populated
with data retrieved from a query WHOIS, using the network address information.

Dependencies among tools should be minimized, however the following
dependencies do exist:

 # Nothing should be registered to the _*IS*_ infrastructure unless the user enables this in a _publish existence_ page.
 # If publishing is enabled, all active diagnostic tools should be registered as available. (Eventually we might allow selective publishing)
 # MAs should be published if, and only if, they have available data. (i.e. only if the system is configured to do regular tests, or has an archive of old test data)
 # Regularly scheduled tests should be configurable without enabling publishing. This should enable the web CGI scripts for viewing the data locally on the system.

After customization and configuration has been completed, the host is now in 
[PerformanceNodeAdminInterface#Full_Config_Mode Full Config Mode].

Remote-Configuration is something we want to enable in the future. Instead
of specifying an admin password to enter
[PerformanceNodeAdminInterface#Pre-Config_Mode Pre-Config Mode], the user would
be prompted to specify a configuration server.  Alternatively, as mentioned
before a specific kick-start file could be used to specify this information.
It might even be reasonable for a specific community to encode this information
directly into a community targeted ISO - the host would then contact the
remote server to fetch configuration information for configuring all services.

=== Modes of Operation ===

There are two primary modes of operation: zero configuration and minimal, 
or _pre_ configuration.  Each mode fits a well defined use case:

 * Zero Configuration - The original spirit of the Live CD was to offer a set of tools that are ready to go _out of the box_.  
 * Pre-Configuration - Allows the disk to be configured for long term monitoring and measurement.

==== Zero-Config mode ====

Disc is simply put in and the host is ignored. The IP Address is set by DHCP.
A host that has had no configuration will not register with the Information
Services in any way. It is assumed to be a temporary diagnostic host.
owamp/bwctl/ndt/npad will all function but no regular tests will be
initiated from this host and no data will be collected on it. Therefore,
no _*IS*_ or perfSONAR Measurement Archive (_*MA*_) services will be started.

Zero-Config mode will present a login prompt on the CLI when completely booted
up. An expert user can login as root and manually configure the system. The
steps for doing this can be as complex as necessary, and only very
limited support for this mode should be offered in general.

==== Pre-Config mode ====

Identical to [PerformanceNodeAdminInterface#Zero-Config_Mode Zero-Config Mode]
except that the user has specified an admin password and therefore enabled
HTTPS to start, and enabled the web admin GUI.

Host should behave exactly like the
[PerformanceNodeAdminInterface#Zero-Config_Mode Zero-Config Mode] host
until/unless additional configuration information is entered via the web GUI.

==== Full Config mode ====

Indicates all services and customizations have been activated.

=== Rebooting ===

A [PerformanceNodeAdminInterface#Zero-Config_Mode Zero-Config Mode] host has
had no information saved to disk, so it behaves identically on reboot.

A [PerformanceNodeAdminInterface#Pre-Config_Mode Pre-Config Mode] and
[PerformanceNodeAdminInterface#Full_Config_Mode Full Config Mode] host should
present a prompt to allow the user to reset the configuration information. It
should be possible to do 3 things with the CLI in this case: 

 # modify the admin password
 # modify the IP address
 # reset host - completely reformat.

== Proposed Changes ==

To accomplish the above goals, we are proposing the following developmental and
administrative changes. 

=== Current Tool Options ===

  * configure backing store
  * configure site settings (location, admin, etc)
  * enable/disable services
  * set root/knoppix account passwords
  * manage users
  * configure bwctl
  * configure ntp
  * configure owamp
  * set a static IP
  * set the timezone
  * modify advertised external interface
  * configure pinger tests
  * configure perfSONAR-BUOY tests
  * configure SNMP monitoring

=== Zero-Config Boot ===

The current Knoppix instance allows for one to do zero configuration and boot
into a usable system. However, this system won't register with any of its
daemons with the global lookup service. This could be changed with the caveat
that the gLS would end up with entries like _*BWCTL Server*_. The downside to
this approach is that, due to the size of the hLS database, it would effectively
mandate 512M RAM for running the disk so we would need some way of informing
users if they put the disk into a machine with less than that amount of space.

The default configuration for the system is:

  * Timezone: UTC
  * NTP: 4 Internet2 servers, 2 ESnet servers, all in the US
  * BWCTL: Allows for clients to request TCP tests of up to 60 seconds, but no UDP tests.
  * OWAMP: Allows for clients to have up to 500M of disk space and 1Mbps bandwidth. If a user hasn't configured a backing store, that 500M limit may be far too high.
  * Networking: obtained via DHCP

=== Web-based Configuration ===

To support a web interface, all of the CLI tools will need to be rewritten. To
allow both CLI and Web-based configuration would necessitate writing a modular
configuration backend to interact with the various configuration files and
tools. This is something that may be necessary no matter what depending on
security concerns.  A related project,
[http://code.google.com/p/perfsonar-ps-cfg/ perfSONAR Configuration] has 
addressed some of these needs by providing an an abstraction capable of being
used by GUI and CLI interfaces.

There are some security concerns with the web-based configuration as well.
Currently, the www-data user has the ability to write the configuration files
for perfSONAR-BUOY and PingER, and restart perfSONAR-BUOY, PingER and the SNMP
MA. The options that can currently be configured, like specifying the backing
store, changing the root password or disabling SSH, would mean that we would
either have to give www-data far reaching capabilities that we should probably
think through. 

For an incremental approach, we could limit the web-based configuration
options to our tools of interest like ntp, bwctl and owamp, the static IP and
the advertised interface configuration files. This could be done by making all
those files group-owned and writable by the www-data user. The www-data user
would also have access to initiate a reboot and/or restart those services. If
people wanted to add new users or change the root/user passwords, they could
login to the machine and do it via the CLI.

Once we have an idea of how the web server will modify the configuration files,
it should be be pretty straight-forward to write web interfaces to do the
configuration. I can't imagine it taking more than a couple hours per
configuration option.

== Development Plan ==

Changes in the perfSONAR roadmap will dictate the completion of the following
tasks.  The only definites are the conversion to a new base operating system
(Fedora Live CD) and the necessity of packaging tools and administrative glue
into RPMs.  The following goals take this move into consideration.

=== Final Knoppix Release ===

For the next Knoppix release, we can put together rudimentary web configuration
GUIs for the following configurables.

 # NTP
 # BWCTL 
 # OWAMP
 # Enabled Services (removing Apache/SSH from the option list).
 # Site settings (Admin, Keywords, etc).
   * This web GUI will be a bit more involved as it has to write out NDT and NPAD http files
   * It will also necessitate restarting the LS, and all services that register with it or rebooting
 # Static vs. Dynamic IP
   * This will likely necessitate either restarting the machine or giving the apache user the ability to restart networking along with restarting everything like in the _*site settings*_ are modified
 # External interface
   * This will necessitate restarting all the services like for _*site settings*_

=== First Fedora Release ===

For the first Fedora-based release, most of the above GUIs should be easy to
transition over, as is.  Time and resources will dictate this decision.  

Additional consideration will be given to converting the existing
[http://code.google.com/p/perfsonar-ps-cfg/ perfSONAR Configuration GUI] for
use as a general configuration framework.  

=== Subsequent Fedora Releases ===

Subsequent releases of the Fedora-based Live CD should focus on:

 * Modular GUIs
 * Stylistic improvements (improve the _look and feel_)
 
Consideration should be given to user feedback, specifically community and
regional deployments, to help re-structure confusing portions of the
administrative GUIs.

== Last Updated ==

$Id$
