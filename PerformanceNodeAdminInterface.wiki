= Configuring perfSONAR performance nodes =

The first portion of this document describes the interface. The second
portion provides more details on exactly what currently exists and
how we transition from the current setup to the described interface.

== Interface description ==

For the initial booting of the system:

When the disc is put in, the default behavior will be for the system to boot
from the disc. There will be a CLI prompt asking the user if they want
to enable configuration for the performance node. If they do not
answer in [60] seconds, the system will boot into Zero-Config mode
(described below).

If the user answers the prompt, then they are prompted for an admin
passwd for the web-admin GUI. They are also prompted to provide IP
address information (also given the option to DHCP). After this information
is entered, the system finishes the boot process. At the end of the boot
process, the system should print out the URL for accessing the
admin interface. This will be a well-defined URL on the host, so if the
user already knows the host name it will not be important. But will be
useful for someone setting up a diagnotic host on a random network.
This will put the system in Pre-Config mode (described below).

Eventually, Pre-Config mode should be possible using a specfic
kickstart file that indicates the admin passwd so that physical
access to the box is not required. However, the admin passwd should
not be codified on an iso in any way.

The user can now access the the web GUI and activate additional
tools if they want. For example, they could enter organization/admin
identifying information including 'keywords'. This would make it possible
to register the host with the IS infrastructure. The 'enable' page for
publicizing the host could be pre-populated with data retrieved from
WHOIS using the IP address.

They could also activate regularly scheduled tests. Dependencies among
tools should be minimized, however the following dependencies do exist:

1) Nothing should be registered to the IS infrastructure unless the
user enables this in a 'publish existence' page.

2) If publishing is enabled, all active diagnostic tools should be registered
as available. (Eventually we might allow selective publishing, but for now
if it is active, lets publish it.)

3) MAs should be published IFF they have data.

4) Regularly scheduled tests should be configurable without enabling publishing.
This should enable the web CGI scripts for viewing the data locally on the
system.

After configuring as much, or as little as the user wants through the
HTTPS admin interface the host is now in Full Config mode.

Remote-Configuration is something we want to enable in the future. Instead
of specifying an admin passwd to enter Pre-Config mode, the user would
be prompted to specify a configuration server. (Alternatively, as mentioned
before a specific kickstart file could be used to specify this information.
It might even be reasonable for a specific community to encode this information
directly into a community targetted ISO.) The host would then contact the
remote server to fetch configuration information for configuring all services.

=== Zero-Config mode ===

Disc is simply put in and the host is ignored. The IP Address is set by DHCP.
A host that has had no configuration will not register with the Information
Services in any way. It is assumed to be a temporary diagnostic host.
owamp/bwctl/ndt/npad will all function but no regular tests will be
initiated from this host and no data will be collected on it. Therefore,
no IS or pS MA services will be started.

Zero-Config mode will present a login prompt on the CLI when completely booted
up. An expert user can login as root and manually configure the system. The
steps for doing this can be as complex as necessary, and only very
limited support for this mode should be offered in general.

=== Pre-Config mode ===

Identical to Zero-Config mode except that the user has specified an
admin passwd and therefore enabled HTTPS to start, and enabled the
web admin GUI.

Host should behave exactly like the Zero-Config host until/unless additional
configuration information is entered via the web GUI.

=== Rebooting ===

A Zero-Config mode host has had no information saved to disk, so it behaves
identically on reboot.

A Pre-Config and Configured host should present a prompt to allow the user
to reset the configuration information. It should be possible to do 3 things
with the CLI in this case: 1) modify the admin passwd, 2) modify the IP
address, 3) Reset host - completely reformat.

= Plan Forward =
= Current Tool Options =

  * configure backing store
  * configure site settings (location, admin, etc)
  * enable/disable services
  * set root/knoppix account passwords
  * manage users
  * configure bwctl
  * configure ntp
  * configure owamp
  * set a static IP
  * set the timezone
  * modify advertised external interface
  * configure pinger tests
  * configure perfSONAR-BUOY tests
  * configure SNMP monitoring

= Current Zero-Config Booting =

The current Knoppix instance allows for one to do zero configuration and boot
into a usable system. There are a few caveats with this approach, however.

Once issue is that the system won't register with any of its daemons with the
global lookup service. This could be changed with the caveat that the gLS would
end up with entries like "BWCTL Server". The downside to this approach is that,
due to the size of the hLS database, it would effectively mandate 512M RAM
for running the disk.

The other issue is that the knoppix user cannot become root, impeding the
ability to reconfiguration without a reboot. This could be worked around in one
of two ways, either let knoppix become root without typing a password or let
knoppix run the configuration utility without a password. Either approach has
security issues that go along with it. This issue may be obviated by the move
to Fedora, but I'd have to look further into it.

The default configuration for the system is:

  * Timezone: UTC
  * NTP: 4 Internet2 servers, 2 ESnet servers, all in the US
  * BWCTL: Allows for clients to request TCP tests of up to 60 seconds, but no UDP tests.
  * OWAMP: Allows for clients to have up to 500M of disk space and 1Mbps bandwidth. If a user hasn't configured a backing store, that 500M limit may be far too high.
  * Networking: obtained via DHCP

= Migrating To A Web-based Configuration =

To support a web interface, all of the CLI tools will need to be rewritten. To
allow both CLI and Web-based configuration would necessitate writing a modular
configuration backend to interact with the various configuration files and
tools. This is somethign that may be necessary no matter what depending on
security concerns.

There are some security concerns with the web-based configuration as well.
Currently, the www-data user has the ability to write the configuration files
for perfSONAR-BUOY and PingER, and restart perfSONAR-BUOY, PingER and the SNMP
MA. The options that can currently be configured, like specifying the backing
store, changing the root password or disabling SSH, would mean that we would
either have to give www-data far reaching capabilities that we should probably
think through. 

For an incremental approach, we could limit the web-based configuration
options to our tools of interest like ntp, bwctl and owamp, the static IP and
the advertised interface configuration files. This could be done by making all
those files group-owned and writable by the www-data user. The www-data user
would also have access to initiate a reboot and/or restart those services. If
people wanted to add new users or change the root/user passwords, they could
login to the machine and do it via the CLI.

Once we have an idea of how the web server will modify the configuration files,
it should be be pretty straight-forward to write web interfaces to do the
configuration. I can't imagine it taking more than a couple hours per
configuration option.

= Proposed Path Forward =
== Next Release ==
For the next Knoppix release, we can put together rudimentary web configuration
GUIs for the following configurables.

  # NTP
  # BWCTL 
  # OWAMP
  # Enabled Services (removing Apache/SSH from the option list).
  # Site settings (Admin, Keywords, etc).
    * This web GUI will be a bit more involved as it has to write out NDT and NPAD http files
    * It will also necessitate restarting the LS, and all services that register with it or rebooting
  # Static vs. Dynamic IP
    * This will likely necessitate either restarting the machine or giving the apache user the ability to restart networking along with restarting everything like in the "site settings" are modified
  # External interface
    * This will necessitate restarting all the services like for "site settings"

== First Fedora Release ==
For the first Fedora-based release, most of the above guis should be easy to transition over, as is.

== First Fedora Release ==
For the next Fedora-based release, the whole slew of configuration GUIs should
be cleaned up, both from a style standpoint and a code modularity standpoint.
We should also talk to a number of them, and ask, overall, how they use the
tools, and see if there's a better way we can structure the admin and GUI web
pages.
