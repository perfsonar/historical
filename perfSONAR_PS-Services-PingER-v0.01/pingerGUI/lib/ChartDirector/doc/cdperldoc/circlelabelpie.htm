<HTML>
<HEAD>
<Title>Circular Label Layout</Title>
<link type='text/css' rel='Stylesheet' href="maxchartapi.css" />
</HEAD>
<body bgcolor="#FFFFFF" text="#000000" topmargin="0" leftmargin="0" rightmargin="0" marginwidth="0" marginheight="0">

<p class="heading0">ChartDirector Ver 4.1 (Perl Edition)</p>
<p class="heading1">Circular Label Layout</p>
<hr class="separator">
<div class="content">
<img src="images/circlelabelpie0.png">&nbsp;&nbsp;<img src="images/circlelabelpie1.png">
<br><br>
This example demonstrates various options in the "circular label layout" method. It also demonstrates the use of alternative sector label format.<br><br>
By default, in "circular label layout", the sector labels will be external and close to the perimeter of the pie.<br><br>
The <a href="PieChart.setLabelPos.htm">PieChart.setLabelPos</a> method can be used to control the distance between the sector labels and the perimeter. It also allows enabling join lines to connect the labels to the sectors, which are useful if the labels are far away from the perimeter.<br><br>
The distance between the sector labels and the perimeter can be negative, in which case the sectors will be internal to the pie.<br><br>
Note also the sector label format in this example, which consists of 3 lines. It is specified using <a href="PieChart.setLabelFormat.htm">PieChart.setLabelFormat</a>.
</div>
<p class="heading1a">Source Code Listing</p>
<div class="content">
<b>[Standalone Version]</b> perldemo\circlelabelpie.pl
<table width="98%" border="0" cellpadding="10"><tr><td bgcolor="#cccccc"><pre>#!/usr/bin/perl
use perlchartdir;

sub createChart
{
    my $img = shift;

    # The data for the pie chart
    my $data = [25, 18, 15, 12, 30, 35];

    # The labels for the pie chart
    my $labels = ["Labor", "Licenses", "Taxes", "Legal", "Facilities", "Production"];

    # Create a PieChart object of size 300 x 300 pixels
    my $c = new PieChart(300, 300);

    if ($img eq "0") {
    #============================================================
    #    Draw a pie chart where the label is on top of the pie
    #============================================================

        # Set the center of the pie at (150, 150) and the radius to 120 pixels
        $c-&gt;setPieSize(150, 150, 120);

        # Set the label position to -40 pixels from the perimeter of the pie (-ve
        # means label is inside the pie)
        $c-&gt;setLabelPos(-40);

    } else {
    #============================================================
    #    Draw a pie chart where the label is outside the pie
    #============================================================

        # Set the center of the pie at (150, 150) and the radius to 80 pixels
        $c-&gt;setPieSize(150, 150, 80);

        # Set the sector label position to be 20 pixels from the pie. Use a join line
        # to connect the labels to the sectors.
        $c-&gt;setLabelPos(20, $perlchartdir::LineColor);

    }

    # Set the label format to three lines, showing the sector name, value, and
    # percentage. The value 999 will be formatted as US$999K.
    $c-&gt;setLabelFormat("{label}\nUS\${value}K\n({percent}%)");

    # Set the pie data and the pie labels
    $c-&gt;setData($data, $labels);

    # Explode the 1st sector (index = 0)
    $c-&gt;setExplode(0);

    # output the chart
    $c-&gt;makeChart("circlelabelpie$img.png")
}

createChart(0);
createChart(1);</pre></tr></td></table><br><b>[CGI Version]</b> perldemo_cgi\circlelabelpie.pl
<table width="98%" border="0" cellpadding="10"><tr><td bgcolor="#cccccc"><pre>#!/usr/bin/perl

# Include current script directory in the module path (needed on Microsoft IIS).
# This allows this script to work by copying ChartDirector to the same directory
# as the script (as an alternative to installation in Perl module directory)
use File::Basename;
use lib dirname($0);

use perlchartdir;

# Get HTTP query parameters
use CGI;
my $query = new CGI;

# The data for the pie chart
my $data = [25, 18, 15, 12, 30, 35];

# The labels for the pie chart
my $labels = ["Labor", "Licenses", "Taxes", "Legal", "Facilities", "Production"];

# Create a PieChart object of size 300 x 300 pixels
my $c = new PieChart(300, 300);

if ($query-&gt;param("img") eq "0") {
#============================================================
#    Draw a pie chart where the label is on top of the pie
#============================================================

    # Set the center of the pie at (150, 150) and the radius to 120 pixels
    $c-&gt;setPieSize(150, 150, 120);

    # Set the label position to -40 pixels from the perimeter of the pie (-ve means
    # label is inside the pie)
    $c-&gt;setLabelPos(-40);

} else {
#============================================================
#    Draw a pie chart where the label is outside the pie
#============================================================

    # Set the center of the pie at (150, 150) and the radius to 80 pixels
    $c-&gt;setPieSize(150, 150, 80);

    # Set the sector label position to be 20 pixels from the pie. Use a join line to
    # connect the labels to the sectors.
    $c-&gt;setLabelPos(20, $perlchartdir::LineColor);

}

# Set the label format to three lines, showing the sector name, value, and
# percentage. The value 999 will be formatted as US$999K.
$c-&gt;setLabelFormat("{label}\nUS\${value}K\n({percent}%)");

# Set the pie data and the pie labels
$c-&gt;setData($data, $labels);

# Explode the 1st sector (index = 0)
$c-&gt;setExplode(0);

# output the chart
binmode(STDOUT);
print "Content-type: image/png\n\n";
print $c-&gt;makeChart2($perlchartdir::PNG);</pre></tr></td></table>
</div>
<br><hr class="separator"><div class="copyright">&copy; 2008 Advanced Software Engineering Limited. All rights reserved.</div>
</body>
</HTML>
