#summary PS-PS Roadmap plans

== Joint Development Roadmap for perfSONAR ==

 The primary short-term goals for perfSONAR development are:
  * make perfSONAR more reliable, easier to deploy, and easier to debug problems when they arrive
  * better visualization and analysis tools that demonstrate the utility of perfSONAR
  * better client APIs and documentation so that others can quickly write perfSONAR-based tools and services.
  * enable diagnostics of dynamic circuits


=== Specific pS-PS 3.2 Enhancements ===

  * Fedora-Live based (drop knoppix) to enable ISO building from rpms
  * nagios-based host and process monitoring
  * nagios-based alerts based on performance data
  * embedded iperf in bwctl
  * gLS/hLS performance and stability updates
  * better analysis GUIs
  * Circuit Monitoring support for OSCARS/ION circuits
    * SNMP MA enhancements to support dynamic circuits (virtual interfaces that come and go)
  * Traceroute MA, with traceroute data coupled to specific bwctl and owamp results
  * Discovery APIs (Well structured, documented - designed for application programmers)

=== pS-PS 3.2+ enhancements ===

  * AA integration
  * LS - Topology based service queries (nearest MP problem)
  * Centralized Configuration Service
  * GUI enhancements
    * User community centric - search for problems relating to X
  * Centralized control to allow an administrator to control a set of pS-performance nodes

=== pS Schedule ===

These dates are very aggressive, and assume some of the current proposals get funded.

|| *Date* || *Milestone* ||
|| Summer 2010 || pS-PS 3.2 ||
|| WInter 2011 || pS-PS 3.2+ ||
|| Summer 2011 || pS-PS 3.3 ||
 


=== pS Additional Desired Enhancements, pending funding ===

  * Integration into end applications  
    * 3 yr, 2 FTE
  * pS-Netflow - archive of netflow data
    * allow queries to search for specific patterns
    * allow queries for specific summary stats (what ports used, gross traffic flows, IPv4 vs IPv6 etc...)
      * 1 yr, 1 FTE.
  * BGP archive
    * What would the route have been for a packet at time X at location Y be?
      * 1 yr, 1 FTE.
  * More NOC integration
    * Tickets-MA - tag a ticket as relating to specific topology and correlate with performance data
    * Needs to include GUI work for both TT integration, and data usage. For example, correlating a reported maintenance window could flag performance data as suspect.
      * 3 yrs, 2 FTE.
      * Dependent on integration to NOC TT GUIs and Topology services
  * Global - state of the networks GUIs. Provide ways of seeing an overall picture of perfSONAR deployments and then allowing the user to drill down to specific regions (both geographically, as well as by data types or network technology types - or even application communities). Basically, we need something better than pS-UI as a 'general' user interface. (This does not take the place of the dashboards required for specific application-communities or specific regional deployments but is needed to show the scope of the effort. For example, to sell the ideas to others.)
      * 2 yr, 2 FTE.
  * perfSONAR interfaces for sharing of ProtoGENI performance and management data. (LAMP)
      * 3 yr, 1 FTE.
  * DICE-AA integrated AAA supported
      * 2 yr, 2 FTE

$Id$