= perfSONAR Lookup Service (LS) Scalability Tests =

<wiki:toc max_depth="6">
      
== Current Issues to Investigate in gLS/hLS Services ==

 *  Unknown scalability limits
 *  Unknown data consistency
 *  Failure modes are obscure and hard to debug
 *  Sometimes hLS registers empty summary data
 *  Possible XMLDB locking issues
 *  Behavior when using different values in configuration key "`ls_registration_interval`"
 *  Behavior when using different values in configuration key "`maintenance_interval`"


== Suggested tests ==

 *  Use `ls_registration_daemon` to temporarily register 'fake services'.  Jason has a service emulator
 [http://anonsvn.internet2.edu/svn/perfSONAR-PS/trunk/client/fakeService/ FakeService] that should help.
 *  Set up a test gLS and hLS, and then play with Jason's "!FakeService" tool to see when and how things break.
 *  Query the gLS and verify that everything what was registered is returned in the query. 
  *  perfSONAR_PS-perfAdmin/cgi-bin/view.cgi is a program that provides an example of how to query an hLS.
 Use, for instance: http://dc211.internet2.edu/cgi-bin/pA/view.cgi?hls=http://ps-bw.es.net:8095/perfSONAR_PS/services/hLS
  *  Also useful:  `perfSONAR_PS-perfAdmin/bin/cache.pl`
  *  For perl client, use examples in etc/requests.  Consult design document for information on how to form the
 queries and use the eventTypes of the service.
  *  For python, there is a wrapper for the generic perl client (`Shared/client/client.pl`) at:
 `test_harness/test_PS.py` 
 *  Deploy the !FakeService on 50 ESnet hosts and see what happens.


== Testbed ==

 *  University of Delaware's Distributed and Meta-Systems Lab (DAMSL) will participate with 3 servers:
  *  _ale_.damsl.cis.udel.edu
  *  _moonshine_.damsl.cis.udel.edu
  *  _stout_.damsl.cis.udel.edu

 *  Create a new gLS 'cloud', i.e., a new hints file.  The current hints file is located at
 http://dc211.internet2.edu/gls.root.hints .  Make a new hints file like this that includes the gLS instances created for this testing, and place it on _stout_'s web server (/var/www/external).  The contents of the file will be:

{{{
  http://ale.damsl.cis.udel.edu:7000/perfSONAR_PS/services/gLS
}}}

 *  Install the !LookupService package:
  *  one gLS in _ale_, port ~~9990~~ 7000:  in the daemon.conf set '`root 1`'.
  *  one hLS in _moonshine_, standard port:  in the daemon.conf set '`root 0`'.

 *  After initial setup and testing:
  *  Install a total of 2 - 3 gLSs:  one at UDel, one at LBL, one somewhere else (could be UDel/LBL, or one in Ann Arbor).
  *  Install at least 3 hLS and probably more.
  *  Coordinate deployment of !FakeService on ESnet hosts on additional LSs.
 

== Findings and Report ==

=== Note ===

To obtain the current OS version, type:

 `cat /etc/issue`

and/or

 `uname -a`

=== Instructions:  Sources ===

Using these sources for instructions on installation and configuration:

 http://www.internet2.edu/performance/pS-PS/lookup.html

 http://code.google.com/p/perfsonar-ps/wiki/LS

=== Preparing _ale_ ===

This server _ale_ is Fedora Core release 4 (Stentz).

Checked out perfSONAR repository into home directory (must have permission):

 `svn co https://svn.internet2.edu/svn/perfSONAR-PS/`

In perfSONAR-PS/branches/RELEASE_3.1/perfSONAR_PS-!LookupService, must now run
 
{{{
cd perfSONAR-PS/branches/RELEASE_3.1/perfSONAR_PS-LookupService
sudo make install
cd scripts
sudo ./install_dependencies.sh
sudo ./prepare_environment.sh
}}}

After `sudo ./install_dependencies.sh` command, got the following error message:

{{{
running xml2-config...failed
The installed version of libxml2 not compatible with XML::LibXML.

You may continue at your own risk, but:

  - don't expect XML::LibXML to build or work correctly!
  - don't report errors!
  - don't send patches!

Check the README file for more information on versions
that are tested with XML::LibXML

  PAJAS/XML-LibXML-1.69.tar.gz
  /usr/local/bin/perl Makefile.PL -- NO Makefile created
Running make test
  Make had some problems, won't test
Running make install
  Make had some problems, won't install
}}}

This suggests problems with the current version of `libxml2` installed on _ale_.

	 <strong><font color="red">Note:  For <i>ale</i>, there is not much that can be done about this error.
 XML::LibXML is designed to work with only certain versions of libxml2, it has explicit entries in the module
 makefile because of this.  Checking libxml version numbers at <i>ale</i>:

	{{{
	$ rpm -qa | grep xml
	libxml-devel-1.8.17-13
	libxml-1.8.17-13
	libxml2-2.6.20-1.FC4
	libxml2-python-2.6.20-1.FC4
	libxml2-devel-2.6.20-1.FC4
	perl-libxml-perl-0.08-1
	dbxml-2.3.10-2
	}}}

	The libxml2 version is 'recent' enough, just not what the latest XML::LibXML wants to see.  Now, entering the
 CPAN shell:

	  `perl -MCPAN -e shell`

	Then running this command:

	  `cpan[2]> m XML::LibXML`

	Yields:

	{{{
	Going to write /home/mportnoi/.cpan/Metadata
	Module id = XML::LibXML
		DESCRIPTION  Interface to the libxml library
		CPAN_USERID  PHISH (Christian Glahn <phish@cpan.org>)
		CPAN_VERSION 1.69
		CPAN_FILE    P/PA/PAJAS/XML-LibXML-1.69.tar.gz
		DSLIP_STATUS RmhOp (released,mailing-list,hybrid,object-oriented,Standard-Perl)
		MANPAGE      XML::LibXML - Perl Binding for libxml2
		INST_FILE    /usr/local/lib/perl5/site_perl/5.8.8/i686-linux/XML/LibXML.pm
		INST_VERSION 1.66
	}}}

	The installed version of LibXML is 1.66, which is new enough for the current purposes.</font></strong>
 


The next installation command, `sudo ./prepare_environment.sh`, does not report anything, which is suspicious and
corroborates that the environment must not be healthy.

Trying to start the Lookup Service (`sudo /etc/init.d/lookup_service start`) yields the following error.

{{{
/opt/perfsonar_ps/lookup_service/bin/daemon.pl --config=/opt/perfsonar_ps/lookup_service/etc/daemon.conf 
 --pidfile=lookup_service.pid --piddir=/var/run --logger=/opt/perfsonar_ps/lookup_service/etc/daemon_logger.conf --user=
 perfsonar --group=perfsonar
Can't locate Data/UUID.pm in @INC (@INC contains: /opt/perfsonar_ps/lookup_service/bin/../lib  ./lib ../lib
 /usr/lib/perl5/site_perl/5.8.6/i386-linux-thread-multi /usr/lib/perl5/site_perl/5.8.5/i386-linux-thread-multi
 /usr/lib/perl5/site_perl/5.8.4/i386-linux-thread-multi /usr/lib/perl5/site_perl/5.8.3/i386-linux-thread-multi
 /usr/lib/perl5/site_perl/5.8.6 /usr/lib/perl5/site_perl/5.8.5 /usr/lib/perl5/site_perl/5.8.4
 /usr/lib/perl5/site_perl/5.8.3 /usr/lib/perl5/site_perl /usr/lib/perl5/vendor_perl/5.8.6/i386-linux-thread-multi
 /usr/lib/perl5/vendor_perl/5.8.5/i386-linux-thread-multi /usr/lib/perl5/vendor_perl/5.8.4/i386-linux-thread-multi
 /usr/lib/perl5/vendor_perl/5.8.3/i386-linux-thread-multi /usr/lib/perl5/vendor_perl/5.8.6
 /usr/lib/perl5/vendor_perl/5.8.5 /usr/lib/perl5/vendor_perl/5.8.4 /usr/lib/perl5/vendor_perl/5.8.3
 /usr/lib/perl5/vendor_perl /usr/lib/perl5/5.8.6/i386-linux-thread-multi /usr/lib/perl5/5.8.6 . ./lib
 ../lib/5.8.6/i386-linux-thread-multi ./lib ../lib/5.8.6 ./lib ../lib/i386-linux-thread-multi ./lib
 ../lib/5.8.5 ./lib ../lib/5.8.4 ./lib ../lib/5.8.3 ./lib ../lib) at /opt/perfsonar_ps/lookup_service/bin/..
 /lib/perfSONAR_PS/Utils/NetLogger.pm line 28.
BEGIN failed--compilation aborted at /opt/perfsonar_ps/lookup_service/bin/../lib/perfSONAR_PS/Utils/NetLogger.pm
 line 28.
Compilation failed in require at /opt/perfsonar_ps/lookup_service/bin/../lib/perfSONAR_PS/Request.pm line 28.
BEGIN failed--compilation aborted at /opt/perfsonar_ps/lookup_service/bin/../lib/perfSONAR_PS/Request.pm line 28.
Compilation failed in require at /opt/perfsonar_ps/lookup_service/bin/daemon.pl line 84.
BEGIN failed--compilation aborted at /opt/perfsonar_ps/lookup_service/bin/daemon.pl line 84.
./lookup_service start: perfSONAR Lookup Service could not be started
}}}

Clearly, `libxml2` must be updated on _ale_ prior to installing the LS service.  <i><strong><font color="red">
(This assumption is actually inaccurate.  As pointed out by Jason Zurawski, the error message states
</font><font color="purple">Can't locate Data/UUID.pm</font><font color="red">, a Perl problem.  The misplaced
attempt to solve libxml2 will be maintained here as reference, but the correct solution can be followed through
the next section [LSScalabilityInvestigation#Attempt_2].</font></strong></i>

Trying now to update libxml2 using the _yum_ tool for Fedora:

 `sudo yum update libxml2`

Here's the new error.

{{{
Setting up Update Process
Setting up repositories
updates-released          100% |=========================|  951 B    00:00     
vlc                       100% |=========================|  951 B    00:00     
vlc-contrib               100% |=========================|  951 B    00:00     
http://192.168.0.1/yum/4/extras/i386/repodata/repomd.xml: [Errno 4] IOError: HTTP Error 404: Date: Thu, 20 Aug 2009
 23:59:02 GMT
Server: Apache/2.0.54 (Fedora)
Content-Length: 312
Connection: close
Content-Type: text/html; charset=iso-8859-1
Trying other mirror.
Cannot open/read repomd.xml file for repository: extras
failure: repodata/repomd.xml from extras: [Errno 256] No more mirrors to try.
Error: failure: repodata/repomd.xml from extras: [Errno 256] No more mirrors to try.
}}}

The _yum_ tool failed, probably due to a missing `repomd.xml` file (as hinted by the error message), or because there
are insufficient mirror sites listed somewhere.  Now, we need to find out how to fix this by surveying _yum_ sites.

From the error message, the URL used to access the file `repomd.xml` seems weird (192.168.0.1, which is a local address).

The directory `/etc/yum.repos.d` contains the configuration files _yum_ uses to access mirror sites for repositories.
The listing is:

{{{
fedora-devel.repo         fedora.repo                  vlc-contrib.repo
fedora-extras-devel.repo  fedora-updates.repo          vlc.repo
fedora-extras.repo        fedora-updates-testing.repo
}}}

Several of these files contain a reference to the address 192.168.0.1, such as the file `fedora-extras.repo`:

{{{
[extras]
name=Fedora Extras $releasever - $basearch
baseurl=http://192.168.0.1/yum/$releasever/extras/$basearch/
#mirrorlist=http://fedora.redhat.com/download/mirrors/fedora-extras-$releasever
enabled=1
gpgkey=file:///etc/pki/rpm-gpg/RPM-GPG-KEY-fedora-extras
gpgcheck=1
}}}

Searching for information on https://fedoraproject.org/wiki/Yum, as of August 20, 2009, at 20:29h EDT (8:29pm EDT),
we are welcomed with an empty page with *Yum* written as title.

Searching a bit more aggressively yields the page https://fedoraproject.org/wiki/Extras/Mirrors, where several mirror
sites are listed for the _extras_ files.  Now, we need to find mirrors for the other files.

More research produces the URL http://download.fedora.redhat.com/pub/fedora/linux/extras/.  But the subdirectory for
Fedora 4 is no longer available under this address.  A README file in this location states that this Fedora version is
not maintained (since the current version is Fedora 11).  `libxml2` has to be updated manually.  Turned to 
http://xmlsoft.org/ for more details on how to do this.

Downloaded the following files in attempt to update libxml2:

 `libxml2-2.7.3-1.x86_64.rpm`

 `libxml2-devel-2.7.3-1.x86_64.rpm`
 
Running a check before attempting any update:

 `rpm -F --test libxml2-2.7.3-1.x86_64.rpm`
 
We get the dependency errors:

{{{
warning: libxml2-2.7.3-1.x86_64.rpm: Header V3 DSA signature: NOKEY, key ID de95bc1f
error: Failed dependencies:
        libc.so.6()(64bit) is needed by libxml2-2.7.3-1.x86_64
        libc.so.6(GLIBC_2.2.5)(64bit) is needed by libxml2-2.7.3-1.x86_64
        libc.so.6(GLIBC_2.3)(64bit) is needed by libxml2-2.7.3-1.x86_64
        libc.so.6(GLIBC_2.3.2)(64bit) is needed by libxml2-2.7.3-1.x86_64
        libc.so.6(GLIBC_2.3.4)(64bit) is needed by libxml2-2.7.3-1.x86_64
        libc.so.6(GLIBC_2.4)(64bit) is needed by libxml2-2.7.3-1.x86_64
        libdl.so.2()(64bit) is needed by libxml2-2.7.3-1.x86_64
        libdl.so.2(GLIBC_2.2.5)(64bit) is needed by libxml2-2.7.3-1.x86_64
        libm.so.6()(64bit) is needed by libxml2-2.7.3-1.x86_64
        libm.so.6(GLIBC_2.2.5)(64bit) is needed by libxml2-2.7.3-1.x86_64
        libz.so.1()(64bit) is needed by libxml2-2.7.3-1.x86_64
        rtld(GNU_HASH) is needed by libxml2-2.7.3-1.x86_64
        libxml2.so.2 is needed by (installed) perl-XML-LibXML-Common-0.13-8.i386
        libxml2.so.2 is needed by (installed) perl-XML-LibXML-1.58-2.i386
        libxml2.so.2 is needed by (installed) libxml2-python-2.6.20-1.FC4.i386
        libxml2.so.2 is needed by (installed) shared-mime-info-0.16-3.i386
        libxml2.so.2 is needed by (installed) GConf2-2.10.0-4.i386
        libxml2.so.2 is needed by (installed) libbonobo-2.8.1-1.i386
        libxml2.so.2 is needed by (installed) gnome-vfs2-2.10.0-5.i386
        libxml2.so.2 is needed by (installed) libglade2-2.5.1-2.i386
        libxml2.so.2 is needed by (installed) libgnomecanvas-2.10.0-1.i386
        libxml2.so.2 is needed by (installed) libxslt-1.1.14-2.i386
        libxml2.so.2 is needed by (installed) libbonoboui-2.8.1-4.i386
        libxml2.so.2 is needed by (installed) libgnomeui-2.10.0-1.i386
        libxml2.so.2 is needed by (installed) firefox-1.0.8-1.1.fc4.i386
        libxml2.so.2 is needed by (installed) apt-0.5.15lorg3.2-9.fc4.i386
        libxml2.so.2 is needed by (installed) libcroco-0.6.0-5.i386
        libxml2.so.2 is needed by (installed) libgsf-1.11.1-2.i386
        libxml2.so.2 is needed by (installed) libgnomeprint22-2.10.3-1.i386
        libxml2.so.2 is needed by (installed) libgnomeprintui22-2.10.1-1.i386
        libxml2.so.2 is needed by (installed) librsvg2-2.9.5-2.i386
        libxml2.so.2 is needed by (installed) vlc-0.8.5-1.i386
        libxml2 = 2.6.20 is needed by (installed) libxml2-python-2.6.20-1.FC4.i386
        libxml2 = 2.6.20 is needed by (installed) libxml2-devel-2.6.20-1.FC4.i386
}}}

Stuck at this point.  Too many dependencies to resolve in a system.  Let's continue through another venue below, since
it was pointed by Jason Zurawski that the installation problem does not reside specifically in libxml2, but in Perl's
Data/UUID.pm.

==== Attempt 2 ====

Detected that Perl's Data/UUID.pm is generating the installation problem.  Let us try a different install approach, per
instructed by Jason.

First, checkout or update the SVN repository.

 `svn co https://svn.internet2.edu/svn/perfSONAR-PS/`
 
The Makefile at `perfSONAR-PS/branches/RELEASE_3.1/perfSONAR_PS-LookupService`, as well as the installation scripts
(`install_dependencies.sh` and `prepare_environment.sh`) and `lookup_service` start/stop scripts at directory `scripts`
all consider that the Lookup Service will be installed at `/opt/perfsonar_ps`.  If this is not desirable, these files
can be altered to reflect the new install directory.  But, in this attempt, we will not run the install scripts, also
considering that there is already a Lookup Service running on _ale_.  We will run the LS directly from the checked out
repository directory.

To facilitate starting and stopping the service, let us edit the `lookup_service` start/stop script at `scripts`.
Basically, we need to change the variable `PREFIX` to reflect the correct directory.  Thus, we edit as follows:

{{{
#!/bin/bash
#
# Init file for perfSONAR Lookup Service
#
# chkconfig: 2345 60 20
# description: perfSONAR Lookup Service
#

PREFIX=/home/mportnoi/perfSONAR-PS/branches/RELEASE_3.1/perfSONAR_PS-LookupService
#PREFIX=/opt/perfsonar_ps/lookup_service
BINDIR=${PREFIX}/bin
...
}}}

Before running the service, let us edit the `etc/daemon.conf` file.  The resulting file is as follows:

{{{
[mportnoi@ale etc]$ cat daemon.conf 
<port 7000>
    <endpoint /perfSONAR_PS/services/hLS>
        <gls>
                                                                # just an hLS ... (ORG, CITY, STATE, COUNTRY)
                        root                            1
                                                                # data TTL = 4 days
                        ls_ttl                          5760
                                                                # 180 minute (3hr) registaration window
                        ls_registration_interval        180
                                                                # 120 miute cleaning/summary window
                        maintenance_interval            120
                                                                # Database options (only change path)
                        metadata_db_file                    glsstore.dbxml
                        metadata_summary_db_file            glsstore-summary.dbxml
                        metadata_db_name                    /var/lib/perfsonar/lookup_service/xmldb
                                                                # Service options (please customize)
                        service_accesspoint                 http://localhost:7000/perfSONAR_PS/services/gLS
                        service_description             ORG Global Lookup Service (CITY, STATE, COUNTRY)
                        service_name                    ORG GlobaL Lookup Service
                        service_type                    gLS
                </gls>
                disable                             0
                module                              perfSONAR_PS::Services::LS::gLS
        </endpoint>
</port>
                                                    # 180 minute (3hr) registaration window
ls_registration_interval                        180
disable_echo                                0
                                                    # Root hints info, url + local copy location
root_hints_url                              http://damsl.cis.udel.edu/gls.root.hints
root_hints_file                             /var/lib/perfsonar/lookup_service/hls.root.hints
                                                    # Daemon management, shouldn't need changing
reaper_interval                             20
max_worker_lifetime                             300
max_worker_processes                        30
pid_dir                                     /var/run
pid_file                                        lookup_service.pid
}}}

Now running `lookup_service start` under `scripts`, we get:

{{{
[mportnoi@ale perfSONAR_PS-LookupService]$ sudo scripts/lookup_service start
/home/mportnoi/perfSONAR-PS/branches/RELEASE_3.1/perfSONAR_PS-LookupService/bin/daemon.pl --config=/home/mportnoi/
 perfSONAR-PS/branches/RELEASE_3.1/perfSONAR_PS-LookupService/etc/daemon.conf --pidfile=lookup_service.pid --piddir=
 /var/run --logger=/home/mportnoi/perfSONAR-PS/branches/RELEASE_3.1/perfSONAR_PS-LookupService/etc/daemon_logger.conf
 --user=perfsonar --group=perfsonar
Can't locate Data/UUID.pm in @INC (@INC contains: /home/mportnoi/perfSONAR-PS/branches/RELEASE_3.1/perfSONAR_PS-Lookup
 Service/bin/../lib  ./lib ../lib /usr/lib/perl5/site_perl/5.8.6/i386-linux-thread-multi /usr/lib/perl5/site_perl/5.8.5/
 i386
 ...
}}}

The error message states that Data/UUID.pm was not found, a Perl problem.  Using CPAN to download and install this
package:

 `sudo perl -MCPAN -e 'install Data::UUID' (to enter CPAN and run the command `install Data::UUID`)
 
We get:

 `Data::UUID is up to date (1.202).`
 
Running the `sudo lookup_service start`, we get the same Data/UUID missing error again.  Let us try to force install
Data::UUID under CPAN.

 {{{
 sudo perl -MCPAN -e shell`
 cpan[1]> force install Data::UUID
 }}}
 
We try to run the `sudo lookup_service start` and we get the same error.  So, Data::UUID must be being installed
in some place where the LS scripts cannot find.

