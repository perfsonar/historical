= perfSONAR Lookup Service (LS) Scalability Tests =

<wiki:toc max_depth="6">
      
== Current Issues to Investigate in gLS/hLS Services ==

 *  Unknown scalability limits
 *  Unknown data consistency
 *  Failure modes are obscure and hard to debug
 *  Sometimes hLS registers empty summary data
 *  Possible XMLDB locking issues
 *  Behavior when using different values in configuration key "`ls_registration_interval`"
 *  Behavior when using different values in configuration key "`maintenance_interval`"


== Suggested tests ==

 *  Use `ls_registration_daemon` to temporarily register 'fake services'.  Jason has a service emulator [http://anonsvn.internet2.edu/svn/perfSONAR-PS/trunk/client/fakeService/ FakeService] that should help.
 *  Set up a test gLS and hLS, and then play with Jason's "!FakeService" tool to see when and how things break.
 *  Query the gLS and verify that everything what was registered is returned in the query. 
 *  Deploy the !FakeService on 50 ESnet hosts and see what happens.


== Testbed ==

 *  University of Delaware's Distributed and Meta-Systems Lab (DAMSL) will participate with 3 servers:
  *  _ale_.damsl.cis.udel.edu
  *  _moonshine_.damsl.cis.udel.edu
  *  _stout_.damsl.cis.udel.edu

 *  Create a new gLS 'cloud', i.e., a new hints file.  The current hints file is located at http://dc211.internet2.edu/gls.root.hints .  Make a new hints file like this that includes the gLS instances created for this testing, and place it on _stout_'s web server (/var/www/external).  The contents of the file will be:

{{{
  http://ale.damsl.cis.udel.edu:9990/perfSONAR_PS/services/gLS
}}}

 *  Install the !LookupService package:
  *  one gLS in _ale_, port 9990:  in the daemon.conf set '`root 1`'.
  *  one hLS in _moonshine_, standard port:  in the daemon.conf set '`root 0`'.

 *  After initial setup and testing:
  *  Install a total of 2 - 3 gLSs:  one at UDel, one at LBL, one somewhere else (could be UDel/LBL, or one in Ann Arbor).
  *  Install at least 3 hLS and probably more.
  *  Coordinate deployment of !FakeService on ESnet hosts on additional LSs.
 

== Findings and Report ==

=== Preparing _ale_ ===

Checked out perfSONAR repository into home directory.

In perfSONAR-PS/branches/RELEASE_3.1/perfSONAR_PS-!LookupService, must now run
 
{{{
sudo make install
cd scripts
sudo ./install_dependencies.sh
sudo ./install_dependencies.sh
}}}

After `sudo ./install_dependencies.sh` command, got the following error message:

{{{
running xml2-config...failed
The installed version of libxml2 not compatible with XML::LibXML.

You may continue at your own risk, but:

  - don't expect XML::LibXML to build or work correctly!
  - don't report errors!
  - don't send patches!

Check the README file for more information on versions
that are tested with XML::LibXML

  PAJAS/XML-LibXML-1.69.tar.gz
  /usr/local/bin/perl Makefile.PL -- NO Makefile created
Running make test
  Make had some problems, won't test
Running make install
  Make had some problems, won't install
}}}

The next installation command, `sudo ./install_dependencies.sh`, does not report anything, which is suspicious and corroborates that the environment must not be healthy.

Trying to start the Lookup Service (`sudo /etc/init.d/lookup_service start`) yields the following error.

{{{
/opt/perfsonar_ps/lookup_service/bin/daemon.pl --config=/opt/perfsonar_ps/lookup_service/etc/daemon.conf --pidfile=lookup_service.pid --piddir=/var/run --logger=/opt/perfsonar_ps/lookup_service/etc/daemon_logger.conf --user=perfsonar --group=perfsonar
Can't locate Data/UUID.pm in @INC (@INC contains: /opt/perfsonar_ps/lookup_service/bin/../lib  ./lib ../lib /usr/lib/perl5/site_perl/5.8.6/i386-linux-thread-multi /usr/lib/perl5/site_perl/5.8.5/i386-linux-thread-multi /usr/lib/perl5/site_perl/5.8.4/i386-linux-thread-multi /usr/lib/perl5/site_perl/5.8.3/i386-linux-thread-multi /usr/lib/perl5/site_perl/5.8.6 /usr/lib/perl5/site_perl/5.8.5 /usr/lib/perl5/site_perl/5.8.4 /usr/lib/perl5/site_perl/5.8.3 /usr/lib/perl5/site_perl /usr/lib/perl5/vendor_perl/5.8.6/i386-linux-thread-multi /usr/lib/perl5/vendor_perl/5.8.5/i386-linux-thread-multi /usr/lib/perl5/vendor_perl/5.8.4/i386-linux-thread-multi /usr/lib/perl5/vendor_perl/5.8.3/i386-linux-thread-multi /usr/lib/perl5/vendor_perl/5.8.6 /usr/lib/perl5/vendor_perl/5.8.5 /usr/lib/perl5/vendor_perl/5.8.4 /usr/lib/perl5/vendor_perl/5.8.3 /usr/lib/perl5/vendor_perl /usr/lib/perl5/5.8.6/i386-linux-thread-multi /usr/lib/perl5/5.8.6 . ./lib ../lib/5.8.6/i386-linux-thread-multi ./lib ../lib/5.8.6 ./lib ../lib/i386-linux-thread-multi ./lib ../lib/5.8.5 ./lib ../lib/5.8.4 ./lib ../lib/5.8.3 ./lib ../lib) at /opt/perfsonar_ps/lookup_service/bin/../lib/perfSONAR_PS/Utils/NetLogger.pm line 28.
BEGIN failed--compilation aborted at /opt/perfsonar_ps/lookup_service/bin/../lib/perfSONAR_PS/Utils/NetLogger.pm line 28.
Compilation failed in require at /opt/perfsonar_ps/lookup_service/bin/../lib/perfSONAR_PS/Request.pm line 28.
BEGIN failed--compilation aborted at /opt/perfsonar_ps/lookup_service/bin/../lib/perfSONAR_PS/Request.pm line 28.
Compilation failed in require at /opt/perfsonar_ps/lookup_service/bin/daemon.pl line 84.
BEGIN failed--compilation aborted at /opt/perfsonar_ps/lookup_service/bin/daemon.pl line 84.
./lookup_service start: perfSONAR Lookup Service could not be started
}}}

Clearly, `libxml2` must be updated on _ale_ prior to installing the LS service.