#summary perfSONAR-PS 3.1 Release<wiki:toc max_depth="6" />

== Introduction ==

This page outlines details regarding the perfSONAR-PS release that began the week of February 23, 2008 and ended on March 27 2009 in the release of v3.1 of perfSONAR-PS.

== Release Team ==

 * Jason - Lead
 * Aaron
 * Maxim
 * Jeff
 * Brian
 * Joe
 * Guilherme
 * Marcos
 * ...

== Release Schedule ==

Release Start: Feb 23, 2009

Code Slush: March 6, 2009

Release: March 27, 2009

http://perfsonar-ps.googlecode.com/svn/wiki/pSPS20090327Release/schedule.png

== Services Released and Parties Involved ==

|| *Service* || *Developer* || *Code Reviewer* || *Documentation Reviewer* ||
|| Lookup Service || Jason || Jeff, Macros || Joe,Guilherme ||
|| SNMP Measurement Archive || Jason || Brian || Aaron ||
|| Status Measurement Archive || Aaron || Jason || Maxim ||
|| perfSONAR-BUOY || Jason || Maxim,Guilherme || Brian,Marcos ||
|| PingER || Maxim || Aaron || Jason ||
|| LS Registration Daemon || Aaron || Joe || Jason ||
|| Topology Service || Aaron || Jason || Jeff ||

== Specifics ==

The following outline some exceptions to the overall release process.  Also see [pSPSReleaseManagement] for overall recomendations on this process for the perfSONAR-PS group.

=== Open Bugs Related to This Release ===

 * [http://code.google.com/p/perfsonar-ps/issues/detail?id=19 19] - _*Aaron/Maxim*_ - ~~PingER GUI gLS pingable hosts~~
   * <font color=green>Resolved</font> (original issue addressed)
   * Opened [http://code.google.com/p/perfsonar-ps/issues/detail?id=107 107] to address other concerns (next release)
 * [http://code.google.com/p/perfsonar-ps/issues/detail?id=73 73] - _*Jason*_ - Client::LS Registration Logic Re-arrange    
 * [http://code.google.com/p/perfsonar-ps/issues/detail?id=79 79] - _*Jason*_ - Empty gLS/hLS Messages
 * [http://code.google.com/p/perfsonar-ps/issues/detail?id=84 84] - _*Jason*_ - Exit MA service if no data is present    
 * [http://code.google.com/p/perfsonar-ps/issues/detail?id=85 85] - _*Jason*_ - add verbose logging on errors for ma/ls
 * [http://code.google.com/p/perfsonar-ps/issues/detail?id=105 105] - _*Jason*_ - hLS Summarization of DCN Data 
 * [http://code.google.com/p/perfsonar-ps/issues/detail?id=62 62] - _*Maxim*_ - pingER-MA requires 'hostname" type attribute in endPointPair    
 * [http://code.google.com/p/perfsonar-ps/issues/detail?id=66 66] - _*Maxim*_ - ~~PingER Collection Errors~~
   * <font color=green>Resolved</font>
 * [http://code.google.com/p/perfsonar-ps/issues/detail?id=81 81] - _*Maxim*_ - PingER Resolution of IPaddress/Hostnames 

=== Code Reviews ===

The code _review_ can be a lot more in depth than just reading in suggesting.  Most corrections can be done directly to the code base to save time in the process.  Reviewers are encouraged to run [http://perltidy.sourceforge.net/ perltidy] and [http://search.cpan.org/dist/Perl-Critic/bin/perlcritic perlcritic] at the end of the review.  

Things to think about as you review:

 * Perldoc:
   * Is there a footer on each script/module?
     * License info
     * Contact Info
     * Related libraries
     * API use (where applicable)
   * Is there a header on each script/module?
     * Are the names and information correct?
   * Does each method have a function header
     * Does it describe inputs and outputs as well as expected behaviour
 * Library Use - Examine each external library dependency
   * Is it necessary to use the library (e.g. does the use justify including the dependency)
   * Could the library be ommited (provide suggestions how)
 * Code Structure
   * See the [CodeRules rules of the code]
 * Design decisions
   * Question why things are organized/designed they way they are in a constructive fashion.  Developers will be happy to hear the commentary
 * Function/Module Size
   * Make constructive comments regarding excessively large or small modules and functions.  Note that ware trying to make a sound object oriented piece of software.
 * Test Cases
   * Ensure test cases for unit testing are appropriate in both structure and quantity
   * Ensure test cases for test harness are appropriate in both structure and quantity

See the [pSPSReleaseManagement#Code_Review Code Review] section from the other document for more information.  The reviews should be shared with the entire group (use the mailing list).  

=== Documentation Reviews ===

Documentation review is a review of included and posted documentation for errors and omissions.  It may help to physically install the software when following installation instructions, etc.

Thinks to think about as you review:

 * Is the documentation complete:
   * Same in the package as on the web
   * Contains references to legitimate sources. 
   * Does not contain blank sections
   * Addresses all functionality
 * Is it Understandable
 * Free of spelling/grammar errors
 * Up to date versus previous releases
 * Appropriate to the audience that will be the primary reader

=== Testing ===

Developers are responsible for testing their code:

 * Designing and running unit tests
   * Address all modules
   * Address all methods
   * Test methods for multiple inputs (good and bad)
   * Generate supporting materials (databases, etc.)
   * Frequently run these tests after bugfixes and development
 * Designing and running the test harness to simulate black box activity
   * Design and provide numerous messages and expected responses
   * Frequently run these tests after bugfixes and development

== Open Tasks ==

 * Jason
   * Release Tasks
     * Prepare [YumRepository YUM] repo - <font color=red>_*IN PROGRESS - 2/17*_</font>
     * Update Release Documentation - <font color=green>_*DONE - 3/9*_</font>
     * Update Issue Tracker - <font color=green>_*DONE - 3/3*_</font>
     * Review Code Reviews - <font color=red>_*IN PROGRESS - 3/9*_</font>
     * Review Doc Reviews - _*PENDING*_
   * Development
     * LS - <font color=red>_*IN PROGRESS - 3/2*_</font>
     * SNMP - <font color=red>_*IN PROGRESS - 3/2*_</font>
     * pSB - <font color=purple>_*PUSHED OFF - 3/9*_</font>
   * Documentation
     * LS - _*PENDING*_
     * SNMP - _*PENDING*_
     * PSB - _*PENDING*_
   * Code Review
     * Status  - _*PENDING*_
     * Topology - _*PENDING*_
   * Documentation Review
     * PingER - _*PENDING*_
     * LS Registartion Daemon - _*PENDING*_
 * Aaron
   * Release Tasks
     * Branch SVN - <font color=green>_*Done - 3/2*_</font>
     * Re-organize and SVN (see [SubversionStructure]) - <font color=red>_*IN PROGRESS - 3/10*_</font>
   * Development
     * Status - _*PENDING*_
     * Topology - _*PENDING*_
     * LS Registration Daemon - _*PENDING*_
   * Documentation
     * Status - _*PENDING*_
     * Topology - _*PENDING*_
     * LS Registration Daemon - _*PENDING*_
   * Code Review
     * PingER - _*PENDING*_
   * Documentation Review
     * SNMP - _*PENDING*_
 * Jeff
   * Release Tasks
     * Contract a new CD image for NPToolkit, dated image [http://perfsonar-ps.googlecode.com/svn/wiki/NPToolkit/perfnodelabel.png here] - _*PENDING*_
     * Alert Techwriter/Publication Crew of pending release - _*PENDING*_
   * Development
     * pSB - <font color=red>_*IN PROGRESS*_</font>
   * Documentation
     * pSB - _*PENDING*_
   * Code Review
     * LS - _*PENDING*_
   * Documentation Review
     * Topology - _*PENDING*_
 * Maxim
   * Development
     * PingER - _*PENDING*_
   * Documentation
     * PingER - _*PENDING*_
   * Code Review
     * pSB - <font color=red>_*IN PROGRESS - 3/9*_</font>
   * Documentation Review
     * Status - _*PENDING*_
 * Joe
   * Code Review
     * LS Registration Daemon - _*PENDING*_
   * Documentation Review
     * LS - _*PENDING*_
 * Brian
   * Code Review
     * SNMP - _*PENDING*_
   * Documentation Review
     * pSB - _*PENDING*_
 * Guilherme
   * Code Review
     * perfSONAR-BUOY - _*PENDING*_
   * Documentation Review
     * LS - _*PENDING*_
 * Marcos
   * Code Review
     * LS - _*PENDING*_
   * Documentation Review
     * perfSONAR-BUOY - _*PENDING*_
   
== Lessons Learned ==
   
_*Pending*_
   
== Last Updated ==

$Id$
