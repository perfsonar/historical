=  April 23 2008 Meeting =

== Where ==

Internet2 Spring Member Meeting, Arlington VA

== When ==

 April 23 2008 - 2:30 EDT

== Agenda/Minutes ==

 # Attending: Jason, Aaron, Martin, Joe, Matt, Maxim, Jeff, Brian (via video)
 # project hosting: https://wiki.internet2.edu/confluence/display/PSPS/Code_Hosting_Comparison
   * Jason will test and determine how it works and make a further recommendation
 # module hierarchy cleanup
   * expressive names for modules
     * remove unused code
     * refactor for 'intuitive' growth and understanding. (Logical structure understandable by NEW developers)
     * Maxim will propose 'structure' of modules with wiki/ Aaron will work with him and actually do svn moving.
   * code review
     * log4perl - make sure 'initialization' is consistent. (any other init stuff as well)
     * Is other library construct use consistent?
     * Jeff/Jason/Aaron/Martin will do a walk-through
   * accessors/mutators
     * Leave to individual object developers
 # collaboration with european perl developers?
   * no response from stephan yet.
 # licensing
   * Internet2 wants: use at your own risk
   * SLAC wants: public domain
   * FNAL wants: DOE credit
   * proposed:
     * Each developer copyrights as they want but MUST use an "apache or bsd" license. Pick one - I don't care. (but we should all use the exact same one)
     * Jeff will propose something in the june time-frame in an attempt to have this done for jt techs releases
 # MA: how to communicate what data is available (sample sizes, statistics etc...)
    * Need protocol for:
      # What is available? (req/resp - semantics)
      # If don't have specific res requested, ERROR!!!
      # Report back what is returned in metadata.
      # How big would a response be? (how much data would be returned?)
    * Discussed solution:
      * for req/resp data sampling information should be in parameters of metadata (the one with the eventType=utilization)
      * How are storage parameters discovered?
        * Can register md to the LS.
          * can explode md descriptions by having a md per parameter permutation
        * can specify individual parameters more than once inside as well.
          * Only completely equivalent event types can live in a single md
    * configuration for utilization/errors (really any eventType):
        store config needs to have this information (rrdinfo)
 # Service 'watcher' functionality
   * cron/syslog thing (DID NOT DISCUSS)
 # pS-Performance Testing:
   * black-box performance of pingER service (try using test_harness)
   * Maxim will give it a try:
     * Jason's examples are at http://anonsvn.internet2.edu/svn/perfSONAR-PS/trunk/test_harness/
     * Bundle a set of test data?
   * Jason will make error conditions for LS/SNMP/pS-B
   * Jason will look test harness data generation for SQL PingER data
 # instrumentation of pS-PS
   * profiling
     * Service authors: instrument code
     * aaron/jason/jeff will split up 'base'
     * jason will start wiki page for profiler BCP
 # Architecture:
   * mod_perl?
     * 1st step: try creating something simple (say EchoService inside mod_perl)
   * AAA tie-in?
 # Deployment/Installation Issues:
   * packaging, deployment options ( knoppix, rpms, executables - pro/cons)
   * standalone webserver for webadmin and visualization
   * pluggable visualization layer

== Last Updated ==

$Id$

