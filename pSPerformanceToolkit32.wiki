#summary pS Performance Toolkit 3.2

<wiki:toc max_depth="6" />

== Introduction ==

The following guide describes in detail the steps required to set up version 3.2 of the perfSONAR performance Toolkit ([http://psps.perfsonar.net/toolkit/ pS Performance Toolkit 3.2]).  It is important to follow each step in order.  Upon getting stuck, consult the [http://psps.perfsonar.net/toolkit/FAQs.html FAQ] or join the [https://lists.internet2.edu/sympa/info/performance-node-users mailing list].

For installation instructions specific to version 3.1 of the pS Performance Toolkit, please visit [http://code.google.com/p/perfsonar-ps/wiki/pSPerformanceToolkit31].

== System Requirements ==

The system recommendations for the pS Performance toolkit are now located [http://psps.perfsonar.net/toolkit/hardware.html here].

== Installation ==

Version 3.2 of the pS Performance Toolkit consists of two primary installation mediums:

 * [pSPerformanceToolkit32#NetInstall_CD NetInstall CD]
   * Allows the entire OS image to be installed directly to a host's hard disk
   * Requires network connectivity to download necessary packages
   * Does not support _upgrade_ functions from prior versions of the pS Performance Toolkit
   * Allows an upgrade path directly from the host via _*yum*_ - no physical access to the machine will be required.  
 * [pSPerformanceToolkit32#Live_CD Live CD]
   * Classic use case.  
     * Can run without harming host's hard disk contents
     * Can run and store measurements on host's hard disk
   * Ability to upgrade from prior versions of the pS Performance Toolkit
 
The following sections describe the installation procedure for each of the products.

=== !NetInstall CD ===

The pS Performance Toolkit [http://software.internet2.edu/pS-Performance_Toolkit/pS-Performance_Toolkit-NetInstall-3.2.iso iso] and [http://software.internet2.edu/pS-Performance_Toolkit/pS-Performance_Toolkit-NetInstall-3.2.iso.md5 md5 checksum] are available for download to all interested parties.  Once downloaded please verify the MD5 sum:

{{{
user@host:~$ md5sum pS-Performance_Toolkit-NetInstall-3.2.iso;cat pS-Performance_Toolkit-NetInstall-3.2.iso.md5
e1b30070021121398966e770b5dd2143  pS-Performance_Toolkit-NetInstall-3.2.iso
e1b30070021121398966e770b5dd2143  pS-Performance_Toolkit-NetInstall-3.2.iso
}}}

If the calculated value matches the downloaded value, the ISO image is complete and should be burned to a CD.  If the value _*DOES NOT*_ match, consider re-downloading the file.  After burning, please insert the CD into the target machine to boot.  Some items to consider:

 * The target machine should have some way to access the console.  This can be via an attached monitor and keyboard or via remote access through serial ports or KVMs.
 * The target machine's BIOS must allow the machine to boot from CD.  If the CD does not boot, adjust the BIOS (normally access via *_F12_*, *_F2_*, *_Del_*, etc.) and try again.  
 * The target hardware should match what is described in [pSPerformanceToolkit32#System_Requirements System Requirements].

After booting the following screen will appear:

http://perfsonar-ps.googlecode.com/svn/wiki/pSPerformanceToolkit32/netinstall-1.png

Options can be presented at this time (e.g. going into single user mode) but if nothing is required, simply press enter.  The boot process will commence after this:

http://perfsonar-ps.googlecode.com/svn/wiki/pSPerformanceToolkit32/netinstall-2.png

The CentOS installer will start automatically, and load several drivers.  

http://perfsonar-ps.googlecode.com/svn/wiki/pSPerformanceToolkit32/netinstall-3.png

Since this installer relies on access to the network to download operating system files, setting up network access is required.  This screen enables both IPv4 and IPv6 in either DHCP or Static modes.  Select what works best before proceeding:

http://perfsonar-ps.googlecode.com/svn/wiki/pSPerformanceToolkit32/netinstall-4.png

The system will apply the settings to interfaces it can find on the system:

http://perfsonar-ps.googlecode.com/svn/wiki/pSPerformanceToolkit32/netinstall-5.png

After establishing network connectivity, some files will be downloaded to continue the process:

http://perfsonar-ps.googlecode.com/svn/wiki/pSPerformanceToolkit32/netinstall-6.png

The installer will proceed into the next stage:

http://perfsonar-ps.googlecode.com/svn/wiki/pSPerformanceToolkit32/netinstall-7.png

The installer will now ask a series of questions before setting up the system:

http://perfsonar-ps.googlecode.com/svn/wiki/pSPerformanceToolkit32/netinstall-8.png

The first step is to select the target hard disk.  The user will have the option to use existing disks and partitions (if they can be read) or deleting the partitions and starting over.  Do what works best for the target host:

http://perfsonar-ps.googlecode.com/svn/wiki/pSPerformanceToolkit32/netinstall-9.png

The system may display warnings if the disk is targeted to be altered from an existing state:

http://perfsonar-ps.googlecode.com/svn/wiki/pSPerformanceToolkit32/netinstall-10.png

The next step will allow the user the option to modify and review the partition choices:

http://perfsonar-ps.googlecode.com/svn/wiki/pSPerformanceToolkit32/netinstall-11.png

Even though the network interface was initially set up before to download the initial install files, the user must still configure it for _regular_ use.  This screen allows the user to make changes to the networking configuration:

http://perfsonar-ps.googlecode.com/svn/wiki/pSPerformanceToolkit32/netinstall-12.png

There are some options to select:

 * Activate on boot will enable this interface to start when the computer starts
 * Enable IPv4 support is the most common situation, and enables the user to use IPv4 addressing
 * Enable IPv6 support enables the user to use IPv4 addressing

http://perfsonar-ps.googlecode.com/svn/wiki/pSPerformanceToolkit32/netinstall-13.png

This screen allows a choice between DHCP and static configurations for the IPv4 address:

http://perfsonar-ps.googlecode.com/svn/wiki/pSPerformanceToolkit32/netinstall-14.png

This screen allows a choice between DHCP and static configurations for the IPv6 address:

http://perfsonar-ps.googlecode.com/svn/wiki/pSPerformanceToolkit32/netinstall-15.png

The last networking option is the manual setting of the hostname.  If the host is being statically configured, this step can be used to set the hostname.

http://perfsonar-ps.googlecode.com/svn/wiki/pSPerformanceToolkit32/netinstall-16.png

The next screen sets the clock (_*N.B.*_ most systems are set to UTC) and the timezone.

http://perfsonar-ps.googlecode.com/svn/wiki/pSPerformanceToolkit32/netinstall-17.png

The root password must be set next, be sure to remember the password:

http://perfsonar-ps.googlecode.com/svn/wiki/pSPerformanceToolkit32/netinstall-18.png

The system is mostly configured - the listing of available packages will be retrieved from the CentOS mirror:

http://perfsonar-ps.googlecode.com/svn/wiki/pSPerformanceToolkit32/netinstall-19.png

This screen allows the user to choose which _package groups_ can be installed.  For more information on what is inside of each group, please consult the [http://www.centos.org/docs/5/html/Installation_Guide-en-US/s1-pkgselection-s390.html CentOS Documentation].  In general the following groups are available:

 * Administration Tools
 * Authoring and Publishing
 * Base
 * Beagle
 * Clustering
 * Cluster Storage
 * Development Libraries
 * Development Tools
 * Dialup Networking Support
 * DNS Name Server
 * Editors
 * Educational Software
 * Emacs
 * Engineering and Scientific
 * Fedora Packager
 * FreeNX and NX
 * FTP Server
 * Games and Entertainment
 * GNOME Desktop Environment
 * GNOME Software Development
 * Graphical Internet
 * Graphics
 * Hardware Support
 * Horde
 * Java
 * Java Development
 * KDE (K Desktop Environment)
 * KDE Software Development
 * KVM
 * Legacy Network Server
 * Legacy Software Development
 * Legacy Software Support
 * Mail Server
 * Mono
 * MySQL Database
 * Network Servers
 * News Server
 * Office/Productivity
 * OpenFabrics Enterprise Distribution
 * PostgreSQL Database
 * Printing Support
 * Ruby
 * Server Configuration Tools
 * Sound and Video
 * System Tools
 * Text-based Internet
 * Tomboy
 * Virtualization
 * Web Development
 * Web Server
 * Window Managers
 * Windows File Server
 * XFCE-4.4
 * X Software Development
 * X Window System
 * Yum Utilities

Select the groups that make the most sense for the installation (e.g. if this is a standalone server, XWindows may not be necessary).  Also note that if a package is not selected that may be useful in the future, it may be installed after the server is complete by using the _*yum*_ tool:

{{{
sudo yum install PACKAGENAME
}}}

or

{{{
sudo yum groupinstall GROUPNAME
}}}

After completing, press _*OK*_.

http://perfsonar-ps.googlecode.com/svn/wiki/pSPerformanceToolkit32/netinstall-20.png

The system will now calculate the packages to install:

http://perfsonar-ps.googlecode.com/svn/wiki/pSPerformanceToolkit32/netinstall-21.png

The system will keep an install log in _*/root*_.  This is am important file to save in case there are problems with the install, *do not* delete this file.  

http://perfsonar-ps.googlecode.com/svn/wiki/pSPerformanceToolkit32/netinstall-22.png

The filesystem will be formatted:

http://perfsonar-ps.googlecode.com/svn/wiki/pSPerformanceToolkit32/netinstall-23.png

The packages and times to install will be calculated:

http://perfsonar-ps.googlecode.com/svn/wiki/pSPerformanceToolkit32/netinstall-24.png

Depending on the amount of packages to install, and the speed of the network connection, the following may take minutes or hours:

http://perfsonar-ps.googlecode.com/svn/wiki/pSPerformanceToolkit32/netinstall-25.png

The following is a common, but recoverable, error.  The CentOS mirror network experiences connectivity and validity problems from time to time.  The installer is structured to always check the files it downloads and verify the MD5 fingerprint to be sure that the file is complete.  If a file is not complete, it should be deleted and re-downloaded.  When the following screen appears, press the _*RETRY*_ button.  Note that sometimes this may need to be pressed a couple of times.  

http://perfsonar-ps.googlecode.com/svn/wiki/pSPerformanceToolkit32/netinstall-26.png

The process will complete and finish by installing the bootloader (to allow the user in to the new operating system):

http://perfsonar-ps.googlecode.com/svn/wiki/pSPerformanceToolkit32/netinstall-27.png

The pS Performance Toolkit has several post install scripts to set up the measurement structure.  This step may take several minutes:

http://perfsonar-ps.googlecode.com/svn/wiki/pSPerformanceToolkit32/netinstall-28.png

Finally, the process completes:

http://perfsonar-ps.googlecode.com/svn/wiki/pSPerformanceToolkit32/netinstall-29.png

The system will reboot.  If the CD does not eject automatically, be sure not boot from the CD when the system comes back up:

http://perfsonar-ps.googlecode.com/svn/wiki/pSPerformanceToolkit32/netinstall-30.png

There will be only one kernel available on the system when it starts.  This may change over time.  Note that this is a Web100 kernel.  If for some reason it is _*not*_ a Web100 kernel there may have been a problem with the install.  Possible reasons include:

 * The Web100 kernel in the pS Performance Toolkit repository was older than a kernel in the CentOS repository.  This may occur if a recent CVE was announced and the pS Performance Toolkit developers have not released a new version yet
 * The Web100 kernel did not install cleanly due to problems with other packages
 
It there are questions on this particular issue, feel free to mail the [https://lists.internet2.edu/sympa/info/performance-node-users mailing list]

http://perfsonar-ps.googlecode.com/svn/wiki/pSPerformanceToolkit32/netinstall-31.png

The system will start up like any other Linux distribution.

http://perfsonar-ps.googlecode.com/svn/wiki/pSPerformanceToolkit32/netinstall-32.png

Finally the user will see a typical login screen.  

http://perfsonar-ps.googlecode.com/svn/wiki/pSPerformanceToolkit32/netinstall-33.png

To log in to the new system, use the _*root*_ user, and a blank password:

http://perfsonar-ps.googlecode.com/svn/wiki/pSPerformanceToolkit32/login-centos.png

Note that while the _*root*_ user starts with a blank password, SSH is disabled by default.  The only way to log on to the new system is via the console.  

After logging in for the first time, the root user is *required* to set a new non-blank password.  Note that CentOS requires this to be a password of moderate strength, and will prompt the user to pick something it feels is strong.  After finishing this step, login is complete.  See the image below:

http://perfsonar-ps.googlecode.com/svn/wiki/pSPerformanceToolkit32/login-changepw.png


The message at login describes the two main forms of [pSPerformanceToolkit32#Configuration Configuration]:

{{{
To start configuration, run:

sudo /opt/perfsonar_ps/toolkit/scripts/nptoolkit-configure.py

Once the passwords are set, login to the web interface and finish configuration. The web interface should be available at: 

https://[host address]/toolkit
}}}

An important thing to note is that in the description above, there is no IP address or hostname found for this host currently.  This will need to be rectified in the [pSPerformanceToolkit32#Console console configuration] step. 

=== Live CD ===

The pS Performance Toolkit [http://software.internet2.edu/pS-Performance_Toolkit/pS-Performance_Toolkit-LiveCD-3.2.iso iso] and [http://software.internet2.edu/pS-Performance_Toolkit/pS-Performance_Toolkit-LiveCD-3.2.iso.md5 md5 checksum] are available for download to all interested parties.  Once downloaded please verify the MD5 sum:

{{{
user@host:~$ md5sum pS-Performance_Toolkit-LiveCD-3.2.iso;cat pS-Performance_Toolkit-LiveCD-3.2.iso.md5 
e0f8338433802695a9f3ce6d68c25df4  pS-Performance_Toolkit-LiveCD-3.2.iso
e0f8338433802695a9f3ce6d68c25df4  pS-Performance_Toolkit-LiveCD-3.2.iso
}}}

If the calculated value matches the downloaded value, the ISO image is complete and should be burned to a CD.  If the value _*DOES NOT*_ match, consider re-downloading the file.  After burning, please insert the CD into the target machine to boot.  Some items to consider:

 * The target machine should have some way to access the console.  This can be via an attached monitor and keyboard or via remote access through serial ports or KVMs.
 * The target machine's BIOS must allow the machine to boot from CD.  If the CD does not boot, adjust the BIOS (normally access via *_F12_*, *_F2_*, *_Del_*, etc.) and try again.  
 * The target hardware should match what is described in [pSPerformanceToolkit32#System_Requirements System Requirements].

After booting the following screen will appear:

http://perfsonar-ps.googlecode.com/svn/wiki/pSPerformanceToolkit32/boot.png

Options can be presented at this time (e.g. going into single user mode) but if nothing is required, simply press enter.  The boot process will commence after this:

http://perfsonar-ps.googlecode.com/svn/wiki/pSPerformanceToolkit32/boot-msg.png

Some services will not start on first load, and as such there may be red <font color="red">FAILED</font> warnings on the screen.  This is normal.  In particular, NTP (the time service) will not be active when the server starts.  This will cause some tools like BWCTL to fail as well.  Over time (usually around an hour) NTP will stabilize and the pSPT will automatically re-start failed services.  For a picture of NTP failing on boot, see below:

http://perfsonar-ps.googlecode.com/svn/wiki/pSPerformanceToolkit32/boot-ntp.png

The system is configured to search for addresses via DHCP by default.  This may cause the system to pause for a short amount of time if there is no DHCP server on the target network.  Note that in the [pSPerformanceToolkit32#Console Console Configuration] phase a static IP can be specified.  The following shows the messages that will appear when the host searches for available network interfaces.  Note that we get a successful DHCP address on *eth0*:

http://perfsonar-ps.googlecode.com/svn/wiki/pSPerformanceToolkit32/dhcp.png

Also note that the pS Performance Toolkit searches for connectivity on several interfaces, possibly more than are available on the target system.  This is also normal, the added interfaces will not alter the behavior or operation of the host.  

The system will configure and start up services next.  It is normal to see some of these services fail (they will be configured in the [pSPerformanceToolkit32#Console Console] and [pSPerformanceToolkit32#Web Web] portions so they do start up properly).  The final step is to present the console to the user:

http://perfsonar-ps.googlecode.com/svn/wiki/pSPerformanceToolkit32/login.png

If upgrading from an existing LiveCD deployment (3.1.x or 3.2.x) there may be existing users on the system already, possibly _*knoppix*_ and _*root*_.  The existing passwords for these users will still be on the system after the upgrade.  If starting with a fresh install, to log in to the new system, use the _*root*_ user, and a blank password:

http://perfsonar-ps.googlecode.com/svn/wiki/pSPerformanceToolkit32/login-centos.png

Note that while the _*root*_ user starts with a blank password, SSH is disabled by default.  The only way to log on to the new system is via the console.  

After logging in for the first time, the root user is *required* to set a new non-blank password.  Note that CentOS requires this to be a password of moderate strength, and will prompt the user to pick something it feels is strong.  After finishing this step, login is complete.  See the image below:

http://perfsonar-ps.googlecode.com/svn/wiki/pSPerformanceToolkit32/login-changepw.png


The message at login describes the two main forms of [pSPerformanceToolkit32#Configuration Configuration]:

{{{
To start configuration, run:

sudo /opt/perfsonar_ps/toolkit/scripts/nptoolkit-configure.py

Once the passwords are set, login to the web interface and finish configuration. The web interface should be available at: 

https://[host address]/toolkit
}}}

An important thing to note is that in the description above, there is no IP address or hostname found for this host currently.  This will need to be rectified in the [pSPerformanceToolkit32#Console console configuration] step.  

== Configuration ==

Configuration of the pS Performance Toolkit is split into two parts:

 * [pSPerformanceToolkit32#Console Console] - Configured on the target computer
   * _*Caveat*_: The console can be reached via a serial line or tool that may redirect this over a working network connection. 
 * [pSPerformanceToolkit32#Web Web] - Can be configured remotely

In general the [pSPerformanceToolkit32#Console console] configuration contains essential options that should be reviewed and set before the system can operate as a measurement framework.  Note that certain functionality, including the basic measurement tools, will function without any configuration.  The [pSPerformanceToolkit32#Web web based] configuration steps can be performed remotely and should be used to personalize and customize the measurement experience.  

=== Console ===

At the console screen, type the following command:

{{{
sudo /opt/perfsonar_ps/toolkit/scripts/nptoolkit-configure.py
}}}

The following menu will appear:

http://perfsonar-ps.googlecode.com/svn/wiki/pSPerformanceToolkit32/menu.png

There are 5 options that may be configured through this menu:

 * [pSPerformanceToolkit32#Storage Storage] - Configure drive to hold data/customizations
 * [pSPerformanceToolkit32#Passwords Passwords] - Set the _*root*_ password, or those of other users.
 * [pSPerformanceToolkit32#Networking Networking] - Set networking to be _DHCP_ or _Static_
 * [pSPerformanceToolkit32#User_Management User Management] - Add additional users to the system
 * [pSPerformanceToolkit32#Exit Exit] - After exiting the menu

The following sections detail the actions available under each option.  Note that as a menu item is addressed, they will change color.  Options in <font color="magenta">magenta</font> have yet to be configured, and options in <font color="green">green</font> have already been configured.  It is possible to re-configure green items as required.  

==== Storage ====

After choosing _*Option 1*_ from the menu, the following prompt will appear listing what drives were available on the system (experience may vary):

http://perfsonar-ps.googlecode.com/svn/wiki/pSPerformanceToolkit32/drive-1.png

After choosing a drive, this message may appear:

http://perfsonar-ps.googlecode.com/svn/wiki/pSPerformanceToolkit32/drive-2.png

An internal check requests that the disk have the minimum 10GB of capacity.  It is possible to proceed with a smaller disk, but not recommended.  Note that any partition combination is acceptable, as long as the minimum size is respected.  Note that for simplicity a single partition will give the pSPT the most access to storage.

If the drive is unformatted or is not formatted with the ext3 filesystem, there will be an option for format the drive in question. While Linux can natively read and write many filesystems, some (specifically NTFS and FAT) do not contain support for features required by the toolkit. _*N.B.*_: formatting a hard drive will render any existing old data un-readable.  Please be sure to select the proper target hard drive before proceeding:

http://perfsonar-ps.googlecode.com/svn/wiki/pSPerformanceToolkit32/drive-3.png

The screen will display the results of the formatting step.  Note that a machine reboot is required before the system will be completely usable.  It is _*strongly recommended*_ that the host be rebooted immediately, particularly before [pSPerformanceToolkit32#User_Management adding users] or [pSPerformanceToolkit32#Networking altering networking].  There is a strong possibility that the changes made will not be saved to the disk.

The remainder of the menu can be navigated before the reboot will be requested:

http://perfsonar-ps.googlecode.com/svn/wiki/pSPerformanceToolkit32/drive-4.png

If the user chooses to reboot later, the menu will re-appear and mark that this step has been visited:

http://perfsonar-ps.googlecode.com/svn/wiki/pSPerformanceToolkit32/drive-5.png

==== Passwords ====

After choosing _*Option 2*_ from the menu, the system will attempt to change the _*system*_ passwords.  There are two options as to which passwords may be available:

 * _*root*_ and _*knoppix*_ users.  This would be the case of existing pS Performance Toolkit v3.1.x installs that were upgraded.
 * _*root*_ user only.  This would be the case of new pS Performance Toolkit v3.2.x installs.  

The following message may appear if the passwords were already set.

http://perfsonar-ps.googlecode.com/svn/wiki/pSPerformanceToolkit32/pass-1.png

Answering _*no*_ will exit to the menu, answering _*yes*_ will bring up the following dialog.

http://perfsonar-ps.googlecode.com/svn/wiki/pSPerformanceToolkit32/pass-2.png

The system is designed to sense weak passwords, and the following warning may appear if a password with little strength is selected.  Note that it will not prevent the user from using a weak password, the system will just warn the password is weak.  

http://perfsonar-ps.googlecode.com/svn/wiki/pSPerformanceToolkit32/pass-3.png

Systems that feature a _*knoppix*_ user will ask to change this password at the same time as _*root*_.  After completing this step, the system will drop back to the menu.  Note that this step will now appear in <font color="green">green</font>.

http://perfsonar-ps.googlecode.com/svn/wiki/pSPerformanceToolkit32/pass-4.png

==== Networking ====

After choosing _*Option 3*_ from the menu, the following menu will appear:

http://perfsonar-ps.googlecode.com/svn/wiki/pSPerformanceToolkit32/networking-1.png


Note that if the user has experience with older versions of the pS Performance Toolkit this new network configuration screen will seem different.  It is based on the RHEL configuration tools.  There are two options:

 * _*Edit Devices*_: Use this to change between Static and DHCP on the network interfaces
 * _*Edit DNS Configuration*_: Use this to change DNS settings for the host

We will select the top option first:

http://perfsonar-ps.googlecode.com/svn/wiki/pSPerformanceToolkit32/networking-2.png

On this screen the user will see many network devices that can be configured.  Note: due to complications in the menu system, the pS Performance Toolkit developers have _pre-loaded_ the settings for up to to 5 devices.  Not all of these devices will be active on a given machine.  In general eth0 or eth1 may be used (and will have a descriptive name as discovered in the boot process).  Highlight one of the devices to configure it, and press _enter_.  The following shows configuration that utilizes DHCP, after making changes press _OK_:

http://perfsonar-ps.googlecode.com/svn/wiki/pSPerformanceToolkit32/networking-3.png

The following shows configuration that utilizes a static address, after making changes press _OK_:

http://perfsonar-ps.googlecode.com/svn/wiki/pSPerformanceToolkit32/networking-4.png

To exit the interface configuration press _Save_ when finished.  The _*Edit DNS Configuration*_ screen allows the user to make changes to the DNS settings on the host, when finished press _OK_:

http://perfsonar-ps.googlecode.com/svn/wiki/pSPerformanceToolkit32/networking-5.png

After making any changes, please press _Save & Quit_ to exit.  The system will drop back to the configuration menu:

http://perfsonar-ps.googlecode.com/svn/wiki/pSPerformanceToolkit32/networking-6.png

Note that there will not be any notable change to the color in the _*Configure Networking*_ menu since this is an optional step.  

===== MTU Changes =====

There is currently no option to set the MTU size via the _Networking_ dialog.  To manually set the MTU:

 * cd into _*/etc/sysconfig/network-scripts*_
 * Edit the ifcfg-eth file for the interface in question.  Commonly the file will look like this:
{{{
DEVICE=eth0
BOOTPROTO=dhcp
ONBOOT=yes
HWADDR=00:0c:29:98:5a:12
TYPE=Ethernet
}}}
 * Add the following line (Assuming _*Jumbo*_ frames):
{{{
MTU=9000
}}} 
 * Save the file, and restart networking:
{{{
sudo /etc/init.d/network restart
}}}

==== User Management ====

After choosing _*Option 4*_ from the menu, the following menu will appear with options:

 * _*Add a new user*_
 * _*Delete a user*_
 * _*Change a user's password*_

http://perfsonar-ps.googlecode.com/svn/wiki/pSPerformanceToolkit32/user-1.png

_*Option 1*_ allows a new user to be added to the system. Simply enter the name of the user (or enter nothing and press _enter_ to exit):

http://perfsonar-ps.googlecode.com/svn/wiki/pSPerformanceToolkit32/user-2.png

There will be some options for the new user.  First, is the user allowed to log in via SSH:

http://perfsonar-ps.googlecode.com/svn/wiki/pSPerformanceToolkit32/user-3.png

Note that for the user to be able to log in via SSH, SSH must be enabled on the machine.  See section [] for more details.  Also, it is possible to put the user in the administrative group (e.g. allowing the user to use sudo to run commands):

http://perfsonar-ps.googlecode.com/svn/wiki/pSPerformanceToolkit32/user-4.png

Enter the password for the user:

http://perfsonar-ps.googlecode.com/svn/wiki/pSPerformanceToolkit32/user-5.png

Verify the password again.  Note that the system will check for weak passwords, although it will not stop the user from using a weak password:

http://perfsonar-ps.googlecode.com/svn/wiki/pSPerformanceToolkit32/user-6.png

After finishing, the system will drop back into the user management menu:

http://perfsonar-ps.googlecode.com/svn/wiki/pSPerformanceToolkit32/user-7.png

Selecting _*Option 2*_ will remove a user's account, simply type in a username:

http://perfsonar-ps.googlecode.com/svn/wiki/pSPerformanceToolkit32/user-8.png

After typing in a _valid_ account, there is an option to remove the home directory:

http://perfsonar-ps.googlecode.com/svn/wiki/pSPerformanceToolkit32/user-9.png

After finishing, the system will drop back into the user management menu:

http://perfsonar-ps.googlecode.com/svn/wiki/pSPerformanceToolkit32/user-10.png

Note that entering an _invalid_ username will simply exit, and return to the user management menu:

http://perfsonar-ps.googlecode.com/svn/wiki/pSPerformanceToolkit32/user-11.png

Selecting _*Option 3*_ will change the password for a user's account, simply type in a username:

http://perfsonar-ps.googlecode.com/svn/wiki/pSPerformanceToolkit32/user-12.png

Enter the password for the user:

http://perfsonar-ps.googlecode.com/svn/wiki/pSPerformanceToolkit32/user-13.png

Verify the password again.  Note that the system will check for weak passwords, although it will not stop the user from using a weak password:

http://perfsonar-ps.googlecode.com/svn/wiki/pSPerformanceToolkit32/user-14.png

After finishing, the system will drop back into the user management menu:

http://perfsonar-ps.googlecode.com/svn/wiki/pSPerformanceToolkit32/user-15.png

Note that entering an _invalid_ username will simply exit, and return to the user management menu:

http://perfsonar-ps.googlecode.com/svn/wiki/pSPerformanceToolkit32/user-16.png

Upon hitting exit, the system will drop back into the user management menu:

http://perfsonar-ps.googlecode.com/svn/wiki/pSPerformanceToolkit32/user-17.png

==== Exit ====

If the [pSPerformanceToolkit32#Storage Storage] or [pSPerformanceToolkit32#Networking Networking] settings were changed (e.g. even if a change was not requested) the system will request a reboot:

http://perfsonar-ps.googlecode.com/svn/wiki/pSPerformanceToolkit32/reboot.png

Note that if neither were entered, the system will return to the console.   

=== Web ===

Configuration over the web is available after the machine has come online.  First, determine the URL to go to for configuration.

In most cases, the message seen during login will contain the URL:

http://perfsonar-ps.googlecode.com/svn/wiki/pSPerformanceToolkit32/getaddress.png

In some cases, the message will have a URL like _https://`[`host address`]`/_:

http://perfsonar-ps.googlecode.com/svn/wiki/pSPerformanceToolkit32/getaddress-1.png

If this is the case, login and run _ifconfig_. The URL will be the IP address after _inet addr_. In the following example, the URL will be _https://192.168.69.137/_:

http://perfsonar-ps.googlecode.com/svn/wiki/pSPerformanceToolkit32/getaddress-2.png

Enter this address in a web browser, and the following screen will appear:

http://perfsonar-ps.googlecode.com/svn/wiki/pSPerformanceToolkit32/web-home-1.png

http://perfsonar-ps.googlecode.com/svn/wiki/pSPerformanceToolkit32/web-home-2.png

The menu on the left side of the screen has the following areas that can be viewed and configured, this guide will examine each:

 * User Tools
   * [pSPerformanceToolkit32#Local_Performance_Services Local Performance Services]
   * [pSPerformanceToolkit32#Global_Performance_Services Global Performance Services]
   * [pSPerformanceToolkit32#Java_OWAMP_Client Java OWAMP Client]
   * [pSPerformanceToolkit32#Reverse_Traceroute Reverse Traceroute]
   * [pSPerformanceToolkit32#Reverse_Ping Reverse Ping]
 * Service Graphs
   * [pSPerformanceToolkit32#perfAdmin_BWCTL Throughput (BWCTL)]
   * [pSPerformanceToolkit32#perfAdmin_OWAMP One-Way Latency (OWAMP)]
   * [pSPerformanceToolkit32#perfAdmin_PingER Ping Latency (PingER)]
   * [pSPerformanceToolkit32#perfAdmin_SNMP SNMP Utilization]
   * [pSPerformanceToolkit32#Cacti_Graphs Cacti Graphs]
 * Toolkit Administration
   * [pSPerformanceToolkit32#Administrative_Information Administrative Information]
   * [pSPerformanceToolkit32#External_BWCTL_Limits External BWCTL Limits]
   * [pSPerformanceToolkit32#External_OWAMP_Limits External OWAMP Limits]
   * [pSPerformanceToolkit32#Enabled_Services Enabled Services]
   * [pSPerformanceToolkit32#NTP NTP]
   * [pSPerformanceToolkit32#Scheduled_Testing Scheduled Tests]
     * [pSPerformanceToolkit32#Scheduled_BWCTL BWCTL Tests]
     * [pSPerformanceToolkit32#Scheduled_PingER PingER Tests]
     * [pSPerformanceToolkit32#Scheduled_OWAMP OWAMP Tests]
   * [pSPerformanceToolkit32#Cacti_Administration Cacti SNMP Monitoring]
 * Toolkit Information
   * [pSPerformanceToolkit32#Configuration_Help Configuration Help]
   * [pSPerformanceToolkit32#Frequently_Asked_Question Frequently Asked Questions]
   * [pSPerformanceToolkit32#About About]   
   * [pSPerformanceToolkit32#Credits Credits]

==== Local Performance Services ====

The _*home*_ page, is linked via the _Local Performance Services_ button:

http://perfsonar-ps.googlecode.com/svn/wiki/pSPerformanceToolkit32/web-home-1.png

http://perfsonar-ps.googlecode.com/svn/wiki/pSPerformanceToolkit32/web-home-2.png

This page lists the measurement tools currently on this node as well as the versions of each piece of software.  There are 3 states for each tool:

 * _*Running*_ - The service is functioning normally
 * _*Not Running*_ - The service is stopped either accidentally or due to a problem. 
 * _*Disabled*_ - The service has been disabled via the [pSPerformanceToolkit32#Enabled_Services Enabled Services] dialog.  

A service may be in the _*Not Running*_ state for a number of reasons, initially it is likely that the service has not been configured. If when examining this list a service is in this state, and the operator feels it shouldn't be, please try to restart the service and check the logs.  

==== Global Performance Services ====

Using the _perfSONAR Lookup Service_, the pS Performance Toolkit is able to locate and display information on other perfSONAR services, world-wide.  The _Global Performance Services_ page displays the global set of perfSONAR services:

http://perfsonar-ps.googlecode.com/svn/wiki/pSPerformanceToolkit32/web-global.png

The time when the set of services was retrieved is displayed at the top of the page. The toolkit regularly runs a script to query the global services. This information is used by the _Global Performance Services_ page as well as other pages, including [pSPerformanceToolkit32#Scheduled_Testing Scheduled Tests] page. Note that if the date seems rather old the script could be experiencing an error - please consult the _*/var/log/perfsonar/ls_cache_daemon.log*_ log if this is the case.  

==== Java OWAMP Client ====

JOWAMP is a Java client of the OWAMP tool that executes an owamp test from the web browser to the server located on that particular node.  The code is still experimental, as such we have several warnings related to use of the code including this initial warning that will appear when the link is first clicked:

http://perfsonar-ps.googlecode.com/svn/wiki/pSPerformanceToolkit32/web-jowamp-0.png

Because JOWAMP is a Java applet, it must run in the browser and may trigger several warnings.  These warnings convey information about executing code that is not _signed_ within the browser.  The warnings will look similar to this (will vary by web browser):

http://perfsonar-ps.googlecode.com/svn/wiki/pSPerformanceToolkit32/web-jowamp-1.png

http://perfsonar-ps.googlecode.com/svn/wiki/pSPerformanceToolkit32/web-jowamp-2.png

http://perfsonar-ps.googlecode.com/svn/wiki/pSPerformanceToolkit32/web-jowamp-3.png

http://perfsonar-ps.googlecode.com/svn/wiki/pSPerformanceToolkit32/web-jowamp-4.png

After accepting this warnings, the JOWAMP main screen will start:

http://perfsonar-ps.googlecode.com/svn/wiki/pSPerformanceToolkit32/web-jowamp-5.png

Running a test between the machine with the web browser and the performance node will produce results similar to this:

http://perfsonar-ps.googlecode.com/svn/wiki/pSPerformanceToolkit32/web-jowamp-6.png

If for some reason an error was experienced, the following items should be checked:

 * _*Firewalls*_ - Check to be sure the performance node and the system with the web browser are either un-firewalled or have setting that would allow OWAMP traffic.  See the [http://www.internet2.edu/performance/owamp/ OWAMP] page for more details.
 * _*NTP*_ - Be sure the performance node has a stable NTP numbers.  The machine with the web browser does not need NTP, but should have synchronized time.  
 * _*Browser Security*_ - Check to be sure the browser allows web applets to be executed, and that all of the warnings were agreed too in the previous steps.  

==== Reverse Traceroute ====

The [http://www.slac.stanford.edu/comp/net/ Reverse Traceroute] tool was developed at [http://www.slac.stanford.edu SLAC] and allows a user to run a traceroute from the performance node to the web browser of the initializing machine.  The GUI appears as so:

http://perfsonar-ps.googlecode.com/svn/wiki/pSPerformanceToolkit32/web-traceroute-1.png

The results of the traceroute are displayed as they complete:

http://perfsonar-ps.googlecode.com/svn/wiki/pSPerformanceToolkit32/web-traceroute-2.png

Note that one of the intentions of this tool is to perform reverse traceroute tests to other hosts in the hopes of detecting asymmetric routing behaviour.  To traceroute to another host, enter the host address into the form, and press the _Enter_ key:

http://perfsonar-ps.googlecode.com/svn/wiki/pSPerformanceToolkit32/web-traceroute-3.png

==== Reverse Ping ====

The [http://www.slac.stanford.edu/comp/net/ Reverse Ping] tool was developed at [http://www.slac.stanford.edu SLAC] and is similar to the [pSPerformanceToolkit32#Reverse_Traceroute Reverse Traceroute].  It allows a user to run a ping from the performance node to the web browser of the initializing machine.  The GUI appears as so:

http://perfsonar-ps.googlecode.com/svn/wiki/pSPerformanceToolkit32/web-ping-1.png

Note that one of the intentions of this tool is to perform reverse ping tests to other hosts in the hopes of detecting asymmetric delay behaviour.  To ping to another host, enter the host address into the form, and press the _Enter_ key:

http://perfsonar-ps.googlecode.com/svn/wiki/pSPerformanceToolkit32/web-ping-2.png

==== perfAdmin BWCTL ====

_perfAdmin_ is a series of CGI scripts that display data from perfSONAR services.  Each pS Performance Toolkit contains a _perfSONAR-BUOY_ instance that is capable of making [pSPerformanceToolkit32#Scheduled_BWCTL regular BWCTL tests] to other hosts.  This GUI is used to show the results of these tests.  

The first capture is seen when the service does not have any information to display, or may be in the _Disabled_ or _Not Running_ state:

http://perfsonar-ps.googlecode.com/svn/wiki/pSPerformanceToolkit32/web-pa-throughput-1.png

Once the host is collecting data, a screen similar to the following will appear:

http://perfsonar-ps.googlecode.com/svn/wiki/pSPerformanceToolkit32/web-pa-throughput-2.png

There are three sections to the GUI:

 * _*Current Data*_ - Data that has been collected in the past week.  
 * _*Summary Graph*_ - Shows the aggregate average observed into and out of each host.  
 * _*Historical Data*_ - Data that is present in the system, but older than a week.  

Graphs can be produced for individual tests:

http://perfsonar-ps.googlecode.com/svn/wiki/pSPerformanceToolkit32/web-pa-throughput-3.png

==== perfAdmin OWAMP ====

_perfAdmin_ is a series of CGI scripts that display data from perfSONAR services.  Each pS Performance Toolkit contains a _perfSONAR-BUOY_ instance that is capable of making [pSPerformanceToolkit32#Scheduled_OWAMP regular OWAMP tests] to other hosts.  This GUI is used to show the results of these tests.  

The first capture is seen when the service does not have any information to display, or may be in the _Disabled_ or _Not Running_ state:

http://perfsonar-ps.googlecode.com/svn/wiki/pSPerformanceToolkit32/web-pa-owd-1.png

Once the host is collecting data, a screen similar to the following will appear:

http://perfsonar-ps.googlecode.com/svn/wiki/pSPerformanceToolkit32/web-pa-owd-2.png

There are three sections to the GUI:

 * _*Current Data*_ - Data that has been collected in the past week.  
 * _*Summary Table*_ - Shows the aggregate average observed into and out of each host.  
 * _*Historical Data*_ - Data that is present in the system, but older than a week.  

Graphs can be produced for individual tests:

http://perfsonar-ps.googlecode.com/svn/wiki/pSPerformanceToolkit32/web-pa-owd-3.png

==== perfAdmin PingER ====

_perfAdmin_ is a series of CGI scripts that display data from perfSONAR services.  Each pS Performance Toolkit contains a _PingER_ instance that is capable of making [pSPerformanceToolkit32#Scheduled_PingER regular Ping tests] to other hosts.  This GUI is used to show the results of these tests.  

The first capture is seen when the service does not have any information to display, or may be in the _Disabled_ or _Not Running_ state:

http://perfsonar-ps.googlecode.com/svn/wiki/pSPerformanceToolkit32/web-pa-pinger-1.png

Once the host is collecting data, a screen similar to the following will appear:

http://perfsonar-ps.googlecode.com/svn/wiki/pSPerformanceToolkit32/web-pa-pinger-2.png  

Graphs can be produced for individual tests:

http://perfsonar-ps.googlecode.com/svn/wiki/pSPerformanceToolkit32/web-pa-pinger-3.png

==== perfAdmin SNMP ====

_perfAdmin_ is a series of CGI scripts that display data from perfSONAR services.  Each pS Performance Toolkit contains a [pSPerformanceToolkit32#Cacti_Administration Cacti] instance that is capable of collecting regular SNMP tests and exposing these via the _SNMP MA_.  This GUI is used to show the results of these tests.  

The first capture is seen when the service does not have any information to display, or may be in the _Disabled_ or _Not Running_ state:

http://perfsonar-ps.googlecode.com/svn/wiki/pSPerformanceToolkit32/web-pa-snmp-1.png

Once the host is collecting data (after going through the [pSPerformanceToolkit32#Cacti_Administration Cacti Administration] step), a screen similar to the following will appear:

http://perfsonar-ps.googlecode.com/svn/wiki/pSPerformanceToolkit32/web-pa-snmp-2.png

Graphs can be produced for individual tests:

http://perfsonar-ps.googlecode.com/svn/wiki/pSPerformanceToolkit32/web-pa-snmp-3.png

==== Cacti Graphs ====

Cacti is used to poll SNMP on network devices, this particular interface to Cacti is _read-only_, and can be used to show cacti graphs to un-authenticated users:

http://perfsonar-ps.googlecode.com/svn/wiki/pSPerformanceToolkit32/web-cacti-1.png

[pSPerformanceToolkit32#Cacti_Administration Cacti Administration] describes how to configure Cacti.  

==== Administrative Information ====

This section requires authentication, and as such requires that the certificate be approved for the pS Performance Toolkit.  The following warning will appear.  Note that the pS Performance Toolkit uses a _self-generated_ and _self-signed_ certificate, this was done for simplicity in installation, and will cause this warning to appear in most browsers.  Adding an exception is normally required before viewing:

http://perfsonar-ps.googlecode.com/svn/wiki/pSPerformanceToolkit32/web-auth-0.png

The following box may appear before accessing any of the functionality:

http://perfsonar-ps.googlecode.com/svn/wiki/pSPerformanceToolkit32/web-auth.png

Authenticate with the _*knoppix*_ user or any other user that has _administrative_ privileges on this system (See [pSPerformanceToolkit32#User_Management User Management] for more information).  

The _administration_ screen will appear like this the first time:

http://perfsonar-ps.googlecode.com/svn/wiki/pSPerformanceToolkit32/web-admin-1.png

Upon clicking _edit_, the following dialog will appear:

http://perfsonar-ps.googlecode.com/svn/wiki/pSPerformanceToolkit32/web-admin-2.png

The information will appear in the web form after entry:

http://perfsonar-ps.googlecode.com/svn/wiki/pSPerformanceToolkit32/web-admin-3.png

Clicking on the communities will add them to the configuration:

http://perfsonar-ps.googlecode.com/svn/wiki/pSPerformanceToolkit32/web-admin-4.png

Clicking _Add New Community_ will display a dialog box:

http://perfsonar-ps.googlecode.com/svn/wiki/pSPerformanceToolkit32/web-admin-5.png

Adding new communities can be done in this manner:

http://perfsonar-ps.googlecode.com/svn/wiki/pSPerformanceToolkit32/web-admin-6.png

Lastly, hit _Save_ to be sure the changes are saved.  

http://perfsonar-ps.googlecode.com/svn/wiki/pSPerformanceToolkit32/web-admin-7.png

The following message will confirm that the changes were saved.

http://perfsonar-ps.googlecode.com/svn/wiki/pSPerformanceToolkit32/web-admin-8.png

Note that if the user chooses to leave this page before saving the following warning may appear (depending on the web browser used):

http://perfsonar-ps.googlecode.com/svn/wiki/pSPerformanceToolkit32/non-save.png

===== Communities =====

A community identification is a self organizing way to form affiliations within the perfSONAR world.  For instance, if a perfSONAR service is associated with a specific scientific project (e.g. LHC, eVLBI), or has access to a certain network (Internet2, NLR, ESnet), these values can be entered as "community" values and exported into the perfSONAR Information Services.  Participating in this procedure allows others in the community an easy way to identify specific instances throughout the world as being affiliated.  Adding a community value or values is recommended, but not required.  

Selecting which _*communities*_ identify this installation can be confusing to answer for new users.  This particular question is trying to associate some _loosely coupled_ labels to the data that the pS Performance Toolkit disk will be making available to the larger world.  Think of this step similar to assigning labels to photos or music (e.g. a photo of a dog might have labels: _Dog_, _Rover_, etc. but someone else may choose different labels).  In general there is no _wrong way_ to choose a keyword.  Choose keywords that best describe the circumstances that surround this installation.  

Some examples of valid answers are:

 * *Internet2* - The data made available somehow connects the Internet2 backbone
 * *LHC* (*CMS*, *ATLAS*, etc.) - The disk is part of the LHC deployment structure
 * *eVLBI* - The disk is a part of the larger telescope community
 * *MAX* - A connector of member of the MAX gigapop

We would recommend choosing keywords that:

 * Describe the location/installation (e.g. the name of the organization installing): *MCNC*, *UDel*
 * Network connections: *ESnet*, *GEANT*, *Internet2*, *NLR*, *RNP*
 * Virtual Organizations (VOs): *CMS*, *ATLAS*

Use as many community names as necessary to properly categorize the data from the installation.

==== External BWCTL Limits ====

This section requires authentication, and as such requires that the certificate be approved for the pS Performance Toolkit.  The following warning will appear.  Note that the pS Performance Toolkit uses a _self-generated_ and _self-signed_ certificate, this was done for simplicity in installation, and will cause this warning to appear in most browsers.  Adding an exception is normally required before viewing:

http://perfsonar-ps.googlecode.com/svn/wiki/pSPerformanceToolkit32/web-auth-0.png

The following box may appear before accessing any of the functionality:

http://perfsonar-ps.googlecode.com/svn/wiki/pSPerformanceToolkit32/web-auth.png

Authenticate with the _*root*_ user or any other user that has _administrative_ privileges on this system (See [pSPerformanceToolkit32#User_Management User Management] for more information).  

The _BWCTL Limits_ screen allows the operator to set limits on the resources that the BWCTL tool may consume on the target system.  For instance:

 * Protocols allowed: Whether the users can perform TCP or UDP bandwidth tests.
 * Test duration: The maximum duration of that a user can request for a bandwidth test.
 * UDP bandwidth allowed: The maximum bandwidth a user can request for a UDP bandwidth test.

Note a subtle nuance to the two classes of limitations:
 
 # _*Privileged*_ clients will take the highest precedence
 # _*Un-privileged*_ clients are derived from _*Privileged*_ client permissions
 
For example, if a bandwidth limit of _500 MB_ was set for the _*Privileged*_ clients, then the _*Un-privileged*_ clients will be able to use less than or equal to this amount - never more.  Take this into consideration when setting the limits.  

The screen defaults to these settings:

http://perfsonar-ps.googlecode.com/svn/wiki/pSPerformanceToolkit32/web-bwctllimits-1.png

Clicking an _edit_ link brings up a dialog:

http://perfsonar-ps.googlecode.com/svn/wiki/pSPerformanceToolkit32/web-bwctllimits-2.png

Note that if we click the _*UDP*_ check box, we get more items in the dialog.  When we are done, we can click _Save_.

http://perfsonar-ps.googlecode.com/svn/wiki/pSPerformanceToolkit32/web-bwctllimits-3.png

Note that after clicking _Save_ we have a some text in <font color="red">red</font>. 
 
http://perfsonar-ps.googlecode.com/svn/wiki/pSPerformanceToolkit32/web-bwctllimits-4.png

_*Maximum Test Length (seconds)*_ for the _*Unprivileged Clients*_ section is greater than the value that is set in the _*Privileged Clients*_ section.  This setting will need to be changed in one of two ways before saving:

 * Re-adjust _*Unprivileged Clients*_ to be less than what is in _*Privileged Clients*_
 * Adjust _*Privileged Clients*_ to be greater than what is in _*Unprivileged Clients*_ 

In the next image we will take the second approach, and edit the _*Privileged Clients*_ to be greater than or equal to the setting in _*Unprivileged Clients*_.  

http://perfsonar-ps.googlecode.com/svn/wiki/pSPerformanceToolkit32/web-bwctllimits-5.png

After making the edits, the screen no longer shows any <font color="red">red</font> text, indicating that the settings meet the rules of the limits file.  

http://perfsonar-ps.googlecode.com/svn/wiki/pSPerformanceToolkit32/web-bwctllimits-6.png

The next dialog allows us to add a user that can use the BWCTL tools.  Note that this functionality is normally used to add a person to a more privileged group than they would otherwise be able to access.

http://perfsonar-ps.googlecode.com/svn/wiki/pSPerformanceToolkit32/web-bwctllimits-7.png

This screen shows the results of adding the new user.  

http://perfsonar-ps.googlecode.com/svn/wiki/pSPerformanceToolkit32/web-bwctllimits-8.png

Networks can also be added into the hierarchy of resources, this screen shows us adding a subnet (a /24) into the _*Privileged Clients*_ permissions.  

http://perfsonar-ps.googlecode.com/svn/wiki/pSPerformanceToolkit32/web-bwctllimits-9.png

This screen shows the results of adding the network.  

http://perfsonar-ps.googlecode.com/svn/wiki/pSPerformanceToolkit32/web-bwctllimits-10.png

When done, press the _Save_ button to commit the changes to disk, and restart the affected services.

http://perfsonar-ps.googlecode.com/svn/wiki/pSPerformanceToolkit32/web-bwctllimits-11.png

Note that if the user chooses to leave this page before saving the following warning may appear (depending on the web browser used):

http://perfsonar-ps.googlecode.com/svn/wiki/pSPerformanceToolkit32/non-save.png

After saving the following screen is seen.  

http://perfsonar-ps.googlecode.com/svn/wiki/pSPerformanceToolkit32/web-bwctllimits-12.png

==== External OWAMP Limits ====

This section requires authentication, and as such requires that the certificate be approved for the pS Performance Toolkit.  The following warning will appear.  Note that the pS Performance Toolkit uses a _self-generated_ and _self-signed_ certificate, this was done for simplicity in installation, and will cause this warning to appear in most browsers.  Adding an exception is normally required before viewing:

http://perfsonar-ps.googlecode.com/svn/wiki/pSPerformanceToolkit32/web-auth-0.png

The following box may appear before accessing any of the functionality:

http://perfsonar-ps.googlecode.com/svn/wiki/pSPerformanceToolkit32/web-auth.png

Authenticate with the _*knoppix*_ user or any other user that has _administrative_ privileges on this system (See [pSPerformanceToolkit32#User_Management User Management] for more information).  

The _OWAMP Limits_ screen allows the operator to set limits on the resources that the OWAMP tool may consume on the target system.  For instance:

 * Bandwidth allowed: The amount of network bandwidth that users can request for their OWAMP tests.
 * Disk usage: OWAMP tests record information about all packets received which are stored on disk. The disk usage allows administrators to configure the amount of disk space that users can request for their OWAMP tests. 
 * Saving vs deleting test results: The OWAMP records stored on disk can be deleted when they are fetched or stored for later retrieval. Administrators can configure when the test results are deleted.

Note a subtle nuance to the two classes of limitations:
 
 # _*Privileged*_ clients will take the highest precedence
 # _*Un-privileged*_ clients are derived from _*Privileged*_ client permissions
 
For example, if a maximum bandwidth of _10 MB_ was set for the _*Privileged*_ clients, then the _*Un-privileged*_ clients will be able to use less than or equal to this amount - never more.  Take this into consideration when setting the limits. 

The screen defaults to these settings:

http://perfsonar-ps.googlecode.com/svn/wiki/pSPerformanceToolkit32/web-owamplimits-1.png

Clicking an _edit_ link brings up a dialog:

http://perfsonar-ps.googlecode.com/svn/wiki/pSPerformanceToolkit32/web-owamplimits-2.png

Note there are protections in place to prevent the _*Privileged Clients*_ section from being more restrictive than the _*Unprivileged Clients*_ section.  The picture below has made a change to _*Privileged Clients*_, the message indicates that to be consistent, a change to _*Unprivileged Clients*_ has been made as well.  

http://perfsonar-ps.googlecode.com/svn/wiki/pSPerformanceToolkit32/web-owamplimits-3.png

Note that if _*Unprivileged Clients*_ was changed to be a less restrictive value than _*Privileged Clients*_, there will be a warning in <font color="red">red</font>.  

http://perfsonar-ps.googlecode.com/svn/wiki/pSPerformanceToolkit32/web-owamplimits-5.png

The next dialog allows us to add a user that can use the OWAMP tools.  Note that this functionality is normally used to add a person to a more privileged group than they would otherwise be able to access.

http://perfsonar-ps.googlecode.com/svn/wiki/pSPerformanceToolkit32/web-owamplimits-6.png

This screen shows the results of adding the new user.  

http://perfsonar-ps.googlecode.com/svn/wiki/pSPerformanceToolkit32/web-owamplimits-7.png

Networks can also be added into the hierarchy of resources, this screen shows us adding a subbet (a /24) into the _*Privileged Clients*_ permissions.  

http://perfsonar-ps.googlecode.com/svn/wiki/pSPerformanceToolkit32/web-owamplimits-8.png

This screen shows the results of adding the network. 

http://perfsonar-ps.googlecode.com/svn/wiki/pSPerformanceToolkit32/web-owamplimits-9.png

When done, press the _Save_ button to commit the changes to disk, and restart the affected services.

http://perfsonar-ps.googlecode.com/svn/wiki/pSPerformanceToolkit32/web-owamplimits-10.png

Note that if the user chooses to leave this page before saving the following warning may appear (depending on the web browser used):

http://perfsonar-ps.googlecode.com/svn/wiki/pSPerformanceToolkit32/non-save.png

After saving the following screen is seen.  

http://perfsonar-ps.googlecode.com/svn/wiki/pSPerformanceToolkit32/web-owamplimits-11.png

==== Enabled Services ====

This section requires authentication, and as such requires that the certificate be approved for the pS Performance Toolkit.  The following warning will appear.  Note that the pS Performance Toolkit uses a _self-generated_ and _self-signed_ certificate, this was done for simplicity in installation, and will cause this warning to appear in most browsers.  Adding an exception is normally required before viewing:

http://perfsonar-ps.googlecode.com/svn/wiki/pSPerformanceToolkit32/web-auth-0.png

The following box may appear before accessing any of the functionality:

http://perfsonar-ps.googlecode.com/svn/wiki/pSPerformanceToolkit32/web-auth.png

Authenticate with the _*knoppix*_ user or any other user that has _administrative_ privileges on this system (See [pSPerformanceToolkit32#User_Management User Management] for more information).  

The _enabled services_ screen lists the services that will start and stop when the machine does.  The screen looks similar to this:

http://perfsonar-ps.googlecode.com/svn/wiki/pSPerformanceToolkit32/web-enabled.png

A breakdown of each service:

 * _*PingER*_ - Enables this host to perform scheduled ping tests. These tests will periodically ping configured hosts giving administrators a view of the latency from their site over time.
 * _*perfSONAR-BUOY Throughput Testing*_ - Enables this host to perform scheduled throughput tests. These tests will run periodically giving administrators a view of the throughput to and from their site over time. _*N.B.*_: Enabling this will disable _*OWAMP*_, _*PingER*_ and _*perfSONAR-BUOY Latency Testing*_.  These can be manually re-selected if desired.  
 * _*perfSONAR-BUOY Latency Testing*_ - Enables this host to perform scheduled one-way latency tests. These tests will run periodically giving administrators a view of the latency from their site over time.  _*N.B.*_: Enabling this will disable _*perfSONAR-BUOY Throughput Testing*_, _*BWCTL*_, _*NDT*_, and _*NPAD*_. These can be manually re-selected if desired. 
 * _*perfSONAR-BUOY Measurement Archive*_ - Makes available the data collected by the perfSONAR-BUOY Latency and Throughput tests.
 * _*NDT*_ - Allows clients at other sites to run NDT tests to this host.
 * _*NPAD*_ - Allows clients at other sites to run NPAD tests to this host.
 * _*BWCTL*_ - Allows clients at other sites to run Throughput tests to this host
 * _*OWAMP*_ - Allows clients at other sites to run One-Way Latency tests to this host
 * _*SSH*_ - Allows administrators to remotely connect to this host using SSH
 * _*SNMP MA*_ - Makes available SNMP statistics collected by Cacti (Note: Cacti must be configured for this to work)

To ease the decision process of selecting the _appropriate_ services for a given deployment (e.g. deploying only _bandwidth-centric_ services) there are two buttons at the bottom of the page:

 * _*Only Enable Bandwidth Services*_ - Turns on bandwidth testing applications, and turns off other services
 * _*Only Enable Latency Services*_ - Turns on latency testing applications, and turns off other services

After selecting which services to enable, press _Save_ to save the changes:

http://perfsonar-ps.googlecode.com/svn/wiki/pSPerformanceToolkit32/web-enabled-save.png

Note that if the user chooses to leave this page before saving the following warning may appear (depending on the web browser used):

http://perfsonar-ps.googlecode.com/svn/wiki/pSPerformanceToolkit32/non-save.png

==== NTP ====

This section requires authentication, and as such requires that the certificate be approved for the pS Performance Toolkit.  The following warning will appear.  Note that the pS Performance Toolkit uses a _self-generated_ and _self-signed_ certificate, this was done for simplicity in installation, and will cause this warning to appear in most browsers.  Adding an exception is normally required before viewing:

http://perfsonar-ps.googlecode.com/svn/wiki/pSPerformanceToolkit32/web-auth-0.png

The following box may appear before accessing any of the functionality:

http://perfsonar-ps.googlecode.com/svn/wiki/pSPerformanceToolkit32/web-auth.png

Authenticate with the _*knoppix*_ user or any other user that has _administrative_ privileges on this system (See [pSPerformanceToolkit32#User_Management User Management] for more information).  

[http://www.ntp.org/ NTP] is a protocol for keeping accurate time on networked machines.  NTP access is very important to measurement tools (e.g. OWAMP and BWCTL) and the pS Performance Toolkit will require a working NTP configuration to use these tools.  NTP configuration should consist of:

 * 4-5 Servers (for redudency and to help the NTP algorithms make _good_ choices)
 * Of a similar _stratum_ (e.g. all Stratum 1, or all Stratum 2)
 * Geographically _close_ (within the same timezone is a safe assumption)
 * On divergent network paths (prevents problems with failed network paths or asymetric congestion)

The following screen shows a default NTP configuration:

http://perfsonar-ps.googlecode.com/svn/wiki/pSPerformanceToolkit32/web-ntp-1.png

The following NTP clocks have been identified as being valuable to use, note that many of these are available via R&E connectivity and may not be available via non R&E peerings:

 * United States - Eastern Timezone
   * chronos.es.net	ESnet - New York, NY USA
   * owamp.atla.net.internet2.edu	Internet2 - Atlanta, GA USA
   * owamp.newy.net.internet2.edu	Internet2 - New York, NY USA
   * time-a.nist.gov	NIST - Gaithersburg, MD USA
   * navobs1.oar.net	Naval Observatory - Columbus, OH USA
   * ntp0.usno.navy.mil	Naval Observatory - Washington, DC USA
 * United States - Central Timezone
   * owamp.chic.net.internet2.edu	Internet2 - Chicago, IL USA
   * owamp.hous.net.internet2.edu	Internet2 - Houston, TX USA
 * United States - Mountain Timezone	 	 	 	 	 	 	 
   * owamp.salt.net.internet2.edu	Internet2 - Salt Lake City, UT USA	 	 	 	 	 	 	 
   * tick.usnogps.navy.mil	Naval Observatory - Colorado Springs, CO USA
 * United States - Pacific Timezone	 	 	 	 	 	 	 	 
   * saturn.es.net	ESnet - Sunnyvale, CA USA
   * owamp.losa.net.internet2.edu	Internet2 - Los Angeles, CA USA
   * ntp-ucla.usno.navy.mil	Naval Observatory - Los Angeles, CA USA
   * ntp-uw.usno.navy.mil	Naval Observatory - Seattle, WA USA
 * United States - Alaskan Timezone
   * ntp-ua.usno.navy.mil	Naval Observatory - Fairbanks, AK USA
 * United States - Hawaiian Timezone
   * tick.mhpcc.hpc.mil	Maui HPC Center - Maui, HI USA
 * South America (Brazil)
   * a.ntp.monipe.rnp.br	RNP Time Server #1 - Brazil
   * b.ntp.monipe.rnp.br	RNP Time Server #2 - Brazil
   * c.ntp.monipe.rnp.br	RNP Time Server #3 - Brazil
   * d.ntp.monipe.rnp.br	RNP Time Server #4 - Brazil
   * e.ntp.monipe.rnp.br	RNP Time Server #5 - Brazil

If the user happens to know of a closer or better time source, the _Add New NTP Server_ button can be pressed.  The image below shows the process of adding a new server.  

http://perfsonar-ps.googlecode.com/svn/wiki/pSPerformanceToolkit32/web-ntp-2.png

After adding a new server, it will show up in the list.  Note that it will be selected automatically.  

http://perfsonar-ps.googlecode.com/svn/wiki/pSPerformanceToolkit32/web-ntp-3.png

_*N.B.*_: Routing has a large impact on if an NTP time source is _reachable_ and _close_ from a particular instance.  It is recommended that the _Select Closest Servers_ option be used:

http://perfsonar-ps.googlecode.com/svn/wiki/pSPerformanceToolkit32/web-ntp-4.png

After running the closest servers will be selected, and servers that were unreachable will be marked in red:

http://perfsonar-ps.googlecode.com/svn/wiki/pSPerformanceToolkit32/web-ntp-5.png

When done, press the _Save_ button to commit the changes to disk, and restart the affected services.

http://perfsonar-ps.googlecode.com/svn/wiki/pSPerformanceToolkit32/web-ntp-6.png

Note that if the user chooses to leave this page before saving the following warning may appear (depending on the web browser used):

http://perfsonar-ps.googlecode.com/svn/wiki/pSPerformanceToolkit32/non-save.png

The results of saving are seen below:

http://perfsonar-ps.googlecode.com/svn/wiki/pSPerformanceToolkit32/web-ntp-7.png

==== Scheduled Testing ====

This section requires authentication, and as such requires that the certificate be approved for the pS Performance Toolkit.  The following warning will appear.  Note that the pS Performance Toolkit uses a _self-generated_ and _self-signed_ certificate, this was done for simplicity in installation, and will cause this warning to appear in most browsers.  Adding an exception is normally required before viewing:

http://perfsonar-ps.googlecode.com/svn/wiki/pSPerformanceToolkit32/web-auth-0.png

The following box may appear before accessing any of the functionality:

http://perfsonar-ps.googlecode.com/svn/wiki/pSPerformanceToolkit32/web-auth.png

Authenticate with the _*knoppix*_ user or any other user that has _administrative_ privileges on this system (See [pSPerformanceToolkit32#User_Management User Management] for more information).  

The _Scheduled Testing_ screen allows the user to schedule several types of regular test:

 * [pSPerformanceToolkit32#Scheduled_BWCTL BWCTL] - Bandwidth Testing
 * [pSPerformanceToolkit32#Scheduled_PingER PingER] - Two-way Latency Testing
 * [pSPerformanceToolkit32#Scheduled_OWAMP OWAMP] - One-way Latency Testing

The screen will look similar to this initially:

http://perfsonar-ps.googlecode.com/svn/wiki/pSPerformanceToolkit32/web-scheduled-bwctl-1.png

The following sections detail setting up tests for each of these measurement types.

===== Scheduled BWCTL =====

The screen will look similar to this initially:

http://perfsonar-ps.googlecode.com/svn/wiki/pSPerformanceToolkit32/web-scheduled-bwctl-1.png

Upon adding a BWCTL test via the _Add New Throughput Test_ button, the following dialog will appear:

http://perfsonar-ps.googlecode.com/svn/wiki/pSPerformanceToolkit32/web-scheduled-bwctl-2.png

Enter the following information:

 * _*Description*_ - Enter a name for this test, e.g. _10 Second BWCTL Tests, every 4 Hours_.  _*N.B.*_ that this will be used to reference the test on the GUI.  
 * _*Time Between Tests*_ - How often to run the BWCTL tests.  _*N.B.*_ that this number, along with _Test Duration_, will dictate how _busy_ the system, and the local network will be.  
 * _*Test Duration*_ - How long of a BWCTL test to run.  The general rule of thumb is that if the round-trip times to all hosts being tested to are less than 50ms, the test duration should be at least 10 seconds. If the round-trip times to all hosts being tested to are less than 100ms, the test duration should be at least 20 seconds. If the round-trip times for any host being tested to is more than 100ms, the test duration should be at least 30 seconds. _*N.B.*_ that this number, along with _Time Between Tests_, will dictate how _busy_ the system, and the local network will be.  
 * _*Bandwidth Tester*_ - Currently only _iperf_ is allowed here. 
 * _*Protocol*_ - TCP or UDP testing.  
 * _*UDP Bandwidth*_ - Seen only when UDP testing is selected, allows the user to specify the requested bandwidth for UDP testing.
 * _*Use Auto-tuning*_ - Allow the linux kernel to tune the buffers or set different own buffer sizes.
 * _*Window Size*_ - Seen only when _*Use Auto-tuning*_ is not checked, allows the user to specify a send window size.  

After saving, the test is setup but there are hosts associated with the test.  These can be added either by:

 * Manually entering hostnames/IP addresses
 * Searching the perfSONAR information services for [pSPerformanceToolkit32#Communities communities]

http://perfsonar-ps.googlecode.com/svn/wiki/pSPerformanceToolkit32/web-scheduled-bwctl-3.png

The user can manually enter a test host as seen in this example:

http://perfsonar-ps.googlecode.com/svn/wiki/pSPerformanceToolkit32/web-scheduled-bwctl-4.png

The host will be added to the list of tests hosts. 

http://perfsonar-ps.googlecode.com/svn/wiki/pSPerformanceToolkit32/web-scheduled-bwctl-5.png

Use of the [pSPerformanceToolkit32#Communities Communities] keywords will also reveal hosts that are in the same community as the host.  Below shows the search for hosts in the _*Internet2*_ community:

http://perfsonar-ps.googlecode.com/svn/wiki/pSPerformanceToolkit32/web-scheduled-bwctl-6.png

When the list returns, they will display on the page.  The user can then click and add new hosts to the test that are already in the same community.  Below is what happens after adding a host from this list:

http://perfsonar-ps.googlecode.com/svn/wiki/pSPerformanceToolkit32/web-scheduled-bwctl-7.png

When done, press the _Save_ button to commit the changes to disk, and restart the affected services.

http://perfsonar-ps.googlecode.com/svn/wiki/pSPerformanceToolkit32/web-scheduled-bwctl-8.png

Note that if the user chooses to leave this page before saving the following warning may appear (depending on the web browser used):

http://perfsonar-ps.googlecode.com/svn/wiki/pSPerformanceToolkit32/non-save.png

After saving, the screen will look similar to this:

http://perfsonar-ps.googlecode.com/svn/wiki/pSPerformanceToolkit32/web-scheduled-bwctl-9.png

Finally, if there is an attempt to schedule tests that conflict, e.g.:

 * Schedule BWCTL tests when there are OWAMP or PingER tests already scheduled
 * Schedule Latency tests such as OWAMP or PingER when there are already BWCTL tests scheduled

The system will warn of conflicting measurement goals.  The warning is shown below.   

http://perfsonar-ps.googlecode.com/svn/wiki/pSPerformanceToolkit32/web-scheduled-error.png

===== Scheduled PingER =====

The screen will look similar to this initially:

http://perfsonar-ps.googlecode.com/svn/wiki/pSPerformanceToolkit32/web-scheduled-pinger-1.png

Enter the following information when the dialog appears:

 * _*Description*_ - Enter a name for this test, e.g. _10 Packet PingER Tests, every 1 Hour_.  _*N.B.*_ that this will be used to reference the test on the GUI.  
 * _*Time Between Tests*_ - How often to run the tests.
 * _*Packets Sent Per Test*_ - How many Ping Packets per test.  Note that sending more will increase the total length of a test.
 * _*Time Between Packets*_ - The interval between Ping Packets.  Setting this higher will increase the total length of a test
 * _*Size Of Test Packets*_ - How large of a Ping packet to use in testing.  
 
http://perfsonar-ps.googlecode.com/svn/wiki/pSPerformanceToolkit32/web-scheduled-pinger-2.png

After saving, the test is setup but there are hosts associated with the test.  These can be added either by:

 * Manually entering hostnames/IP addresses
 * Searching the perfSONAR information services for [pSPerformanceToolkit32#Communities communities]

http://perfsonar-ps.googlecode.com/svn/wiki/pSPerformanceToolkit32/web-scheduled-pinger-3.png

The user can manually enter a test host as seen in this example:

http://perfsonar-ps.googlecode.com/svn/wiki/pSPerformanceToolkit32/web-scheduled-pinger-4.png

The host will be added to the list of tests hosts. 

http://perfsonar-ps.googlecode.com/svn/wiki/pSPerformanceToolkit32/web-scheduled-pinger-5.png

Use of the [pSPerformanceToolkit32#Communities Communities] keywords will also reveal hosts that are in the same community as the host.  Below shows the search for hosts in the _*Internet2*_ community:

http://perfsonar-ps.googlecode.com/svn/wiki/pSPerformanceToolkit32/web-scheduled-pinger-6.png

When the list returns, they will display on the page.  The user can then click and add new hosts to the test that are already in the same community.  Below is what happens after adding a host from this list:

http://perfsonar-ps.googlecode.com/svn/wiki/pSPerformanceToolkit32/web-scheduled-pinger-7.png

When done, press the _Save_ button to commit the changes to disk, and restart the affected services.

http://perfsonar-ps.googlecode.com/svn/wiki/pSPerformanceToolkit32/web-scheduled-pinger-8.png

Note that if the user chooses to leave this page before saving the following warning may appear (depending on the web browser used):

http://perfsonar-ps.googlecode.com/svn/wiki/pSPerformanceToolkit32/non-save.png

After saving, the screen will look similar to this:

http://perfsonar-ps.googlecode.com/svn/wiki/pSPerformanceToolkit32/web-scheduled-pinger-9.png

Finally, if there is an attempt to schedule tests that conflict, e.g.:

 * Schedule BWCTL tests when there are OWAMP or PingER tests already scheduled
 * Schedule Latency tests such as OWAMP or PingER when there are already BWCTL tests scheduled

The system will warn of conflicting measurement goals.  The warning is shown below.   

http://perfsonar-ps.googlecode.com/svn/wiki/pSPerformanceToolkit32/web-scheduled-error.png

===== Scheduled OWAMP =====

The screen will look similar to this initially:

http://perfsonar-ps.googlecode.com/svn/wiki/pSPerformanceToolkit32/web-scheduled-owamp-1.png

Unlike PingER and BWCTL tests, OWAMP tests run constantly. Enter the following information when the dialog appears:

 * _*Description*_ - Enter a name for this test, e.g. _25 PPS OWAMP Test_.  _*N.B.*_ that this will be used to reference the test on the GUI.  
 * _*Packet Rate*_ - How many packets per second to send.  
 * _*Packet Size*_ - Size of each packet
 
http://perfsonar-ps.googlecode.com/svn/wiki/pSPerformanceToolkit32/web-scheduled-owamp-2.png

After saving, the test is setup but there are hosts associated with the test.  These can be added either by:

 * Manually entering hostnames/IP addresses
 * Searching the perfSONAR information services for [pSPerformanceToolkit32#Communities communities]

http://perfsonar-ps.googlecode.com/svn/wiki/pSPerformanceToolkit32/web-scheduled-owamp-3.png

The user can manually enter a test host as seen in this example:

http://perfsonar-ps.googlecode.com/svn/wiki/pSPerformanceToolkit32/web-scheduled-owamp-4.png

The host will be added to the list of tests hosts. 

http://perfsonar-ps.googlecode.com/svn/wiki/pSPerformanceToolkit32/web-scheduled-owamp-5.png

Use of the [pSPerformanceToolkit32#Communities Communities] keywords will also reveal hosts that are in the same community as the host.  Below shows the search for hosts in the _*Internet2*_ community:

http://perfsonar-ps.googlecode.com/svn/wiki/pSPerformanceToolkit32/web-scheduled-owamp-6.png

When the list returns, they will display on the page.  The user can then click and add new hosts to the test that are already in the same community.  Below is what happens after adding a host from this list:

http://perfsonar-ps.googlecode.com/svn/wiki/pSPerformanceToolkit32/web-scheduled-owamp-7.png

It is also possible to configure the port range for OWAMP tests via the administrative GUI. The button _Configure OWAMP Test Port Range_ appears after setting up a regular OWAMP test.  Enter a range to limit OWAMP testing for firewall reasons:

http://perfsonar-ps.googlecode.com/svn/wiki/pSPerformanceToolkit32/web-scheduled-owamp-10.png

When done, press the _Save_ button to commit the changes to disk, and restart the affected services.

http://perfsonar-ps.googlecode.com/svn/wiki/pSPerformanceToolkit32/web-scheduled-owamp-8.png

Note that if the user chooses to leave this page before saving the following warning may appear (depending on the web browser used):

http://perfsonar-ps.googlecode.com/svn/wiki/pSPerformanceToolkit32/non-save.png

After saving, the screen will look similar to this:

http://perfsonar-ps.googlecode.com/svn/wiki/pSPerformanceToolkit32/web-scheduled-owamp-9.png

Finally, if there is an attempt to schedule tests that conflict, e.g.:

 * Schedule BWCTL tests when there are OWAMP or PingER tests already scheduled
 * Schedule Latency tests such as OWAMP or PingER when there are already BWCTL tests scheduled

The system will warn of conflicting measurement goals.  The warning is shown below.   

http://perfsonar-ps.googlecode.com/svn/wiki/pSPerformanceToolkit32/web-scheduled-error.png

==== Cacti Administration ====

This section requires authentication, and as such requires that the certificate be approved for the pS Performance Toolkit.  The following warning will appear.  Note that the pS Performance Toolkit uses a _self-generated_ and _self-signed_ certificate, this was done for simplicity in installation, and will cause this warning to appear in most browsers.  Adding an exception is normally required before viewing:

http://perfsonar-ps.googlecode.com/svn/wiki/pSPerformanceToolkit32/web-auth-0.png

The following box may appear before accessing any of the functionality:

http://perfsonar-ps.googlecode.com/svn/wiki/pSPerformanceToolkit32/web-auth.png

Authenticate with the _*knoppix*_ user or any other user that has _administrative_ privileges on this system (See [pSPerformanceToolkit32#User_Management User Management] for more information).  

The following steps will explain the basic setup of Cacti (e.g. to poll a network device).  A user wishing to do more with the software should consult the documentation.  

===== Cacti Config Step 1 =====

Visit the Cacti instance by clicking the link on the main page.  

===== Cacti Config Step 2 =====

After logging in, the _home_ screen is visible.  In the middle there
will be an option to *Create devices*.  This is where we will begin.

http://perfsonar-ps.googlecode.com/svn/wiki/pSPerformanceToolkit32/Cacti_2.png

===== Cacti Config Step 3 =====

The next screen shows the currently known devices.  The basic setup will
*always* include _localhost_.  The example below shows a previously
configured switch.  On the right side there is an *Add* _button_ (although
it doesn't appear to be so).  Click this to add a new device.

http://perfsonar-ps.googlecode.com/svn/wiki/pSPerformanceToolkit32/Cacti_3.png

===== Cacti Config Step 4 =====

The next screen features many places to add information about the new
network device.  Note that the red circles are representative of the most
common places to make changes.  When finished press *Create*.

http://perfsonar-ps.googlecode.com/svn/wiki/pSPerformanceToolkit32/Cacti_4.png
http://perfsonar-ps.googlecode.com/svn/wiki/pSPerformanceToolkit32/Cacti_5.png

===== Cacti Config Step 5 =====

By default Cacti will only poll the *System* information of the SNMP enabled
host at this stage, just to see if it is alive.  To poll information such
as network statistics it is necessary to create *Graphs*.  We will proceed
by clicking on *Create graphs for this Host*.

http://perfsonar-ps.googlecode.com/svn/wiki/pSPerformanceToolkit32/Cacti_6.png

===== Cacti Config Step 6 =====

The next screen displays the possible interfaces that are available for 
data display.  Note that this may be a *large* number.  In general it is
efficient to simply click the *all* checkbox at the top unless there are 
certain interfaces to poll, or not poll.  After checking this, scroll to
the bottom.

http://perfsonar-ps.googlecode.com/svn/wiki/pSPerformanceToolkit32/Cacti_7.png

===== Cacti Config Step 7 =====

At the bottom of the page is a drop down for the *format* of the data.  It is
common to use the 64 bit counters (especially for backbone networks) and 
display the information as bytes as shown here.  Other options are of course
available.  When done click *Create*.

http://perfsonar-ps.googlecode.com/svn/wiki/pSPerformanceToolkit32/Cacti_8.png

===== Cacti Config Step 8 =====

The resulting page should show the success or failure of each interface.  At
this point the following actions have happened:

 * RRD Files have been created for the interfaces in question
 * A Poller has been notified that these are values of interest (polling will occur by default every 5 minutes) 
 * Graph templates have been established
 
We now can organize this *set* into a graph tree for later display.  Select
*Graph Trees* on the left hand side.  

http://perfsonar-ps.googlecode.com/svn/wiki/pSPerformanceToolkit32/Cacti_9.png

===== Cacti Config Step 9 =====

Select *Default Tree*.  It is also possible to create a new tree at this
stage if desired.

http://perfsonar-ps.googlecode.com/svn/wiki/pSPerformanceToolkit32/Cacti_10.png

===== Cacti Config Step 10 =====

As in _Step 3_ there is another *Add* button to click because we wish to add
a new host to the tree.

http://perfsonar-ps.googlecode.com/svn/wiki/pSPerformanceToolkit32/Cacti_11.png

===== Cacti Config Step 11 =====

Select *Host* from the drop down.  This will automatically populate the
next drop down with the network device.  When done, click *Create*.

http://perfsonar-ps.googlecode.com/svn/wiki/pSPerformanceToolkit32/Cacti_12.png

===== Cacti Config Step 12 =====

The next menu shows that the device has been added.  To see the graphs
click on *Graphs* on the top.

http://perfsonar-ps.googlecode.com/svn/wiki/pSPerformanceToolkit32/Cacti_13.png


===== Cacti Config Step 13 =====

By default the user can view the _localhost_ statistics, but below this the new
network device is present.

http://perfsonar-ps.googlecode.com/svn/wiki/pSPerformanceToolkit32/Cacti_14.png
http://perfsonar-ps.googlecode.com/svn/wiki/pSPerformanceToolkit32/Cacti_15.png

==== Configuration Help ==== 

This link will re-direct to the current installation instructions for the pS Performance Toolkit.

==== Frequently Asked Question ==== 

This link will re-direct to the [http://psps.perfsonar.net/toolkit/FAQs.html FAQ] page.

==== About ==== 

This link will re-direct to the [http://psps.perfsonar.net/toolkit/ pS Performance Toolkit Home Page].

==== Credits ==== 

This link honors organizations that have [http://psps.perfsonar.net/toolkit/credits.html helped] to develop, integrate, and test the pS Performance Toolkit.  

== Last Updated ==

$Id$
