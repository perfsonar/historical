= Echo API ==

 * [APIEcho#Introduction Introduction]
 * [APIEcho#Availability Availability]
 * [APIEcho#Functions Functions]
   * [APIEcho#new new]   
   * [APIEcho#setEventType setEventType]
   * [APIEcho#setURIString setURIString]
   * [APIEcho#ping ping]
 * [APIEcho#Example_Use Example Use]
 
== Introduction ==

The Echo API is a very simple wrapping around the perfSONAR-PS echo message: a message with the only purpose of checking the liveness of perfSONAR-enabled services.  The echo message itself is simple XML:

{{{
<?xml version='1.0' encoding='UTF-8'?>
<nmwg:message xmlns:nmwg="http://ggf.org/ns/nmwg/base/2.0/"
              type="EchoRequest"
              id="er1">

    <nmwg:metadata xmlns:nmwg="http://ggf.org/ns/nmwg/base/2.0/"
                   id="meta1">

        <nmwg:eventType>INSERT EVENT TYPE HERE</nmwg:eventType>

    </nmwg:metadata>
 
    <nmwg:data xmlns:nmwg="http://ggf.org/ns/nmwg/base/2.0/" id="data1" metadataIdRef="meta1" />

</nmwg:message>
}}}

The only change available in this message is the _eventType_ which _*may*_ vary from service to service, but in practice remains a default value that the API is aware of.  

This API is regularly used inside of other APIs (e.g. the [APIgLS gLS API]) to check the liveness of services before proceeding to query further.  It should be used in client applications as a sanity check before spending time and compute cycles to retrieve information on a potentially non-responsive service. 

== Availability ==

This API is available in perfSONAR-PS releases, and can be included as such:

{{{
use perfSONAR_PS::Client::Echo;
}}}

== Functions ==

The following functions may be used from this library.  Please see the perldoc internal to the library for a complete listing of functionality.  Unlisted functions should be viewed as internal to the module.  

=== new === 

Creates a new instance of the _perfSONAR_PS::Client::Echo_ object.  There are two parameters that may be passed on creation (in order):

 * _*URI*_ - Service URI to contact
 * _*!EventType*_ - !EventType, if omitted, a default will be used.

Example use:

{{{
my $echo_service = perfSONAR_PS::Client::Echo->new( "http://localhost:8080/perfSONAR_PS/services/snmpMA", "http://schemas.perfsonar.net/tools/admin/echo/2.0" );
}}}

=== setEventType === 

Sets (or re-sets) the !eventType for an already created object.  This can be used instead of passing the value to [APIEcho#new new].  One variable is required:

 * _*!EventType*_ - !EventType, if omitted, the default will be used.

Example use:

{{{
my $echo_service = perfSONAR_PS::Client::Echo->new();
$echo_service->setEventType( "http://schemas.perfsonar.net/tools/admin/echo/2.0" );
}}}

=== setURIString === 

Sets (or re-sets) the URI for an already created object.  This can be used instead of passing the value to [APIEcho#new new].  One variable is required:

 * _*URI*_ - Service URI to contact

Example use:

{{{
my $echo_service = perfSONAR_PS::Client::Echo->new();
$echo_service->setURIString( "http://localhost:8080/perfSONAR_PS/services/snmpMA" );
}}}

=== ping === 

Performs the _EchoRequest_ operation to a given service, and returns status information:

 * Status:
   * _*-1*_ = Failure 
   * _*0*_ = Success
 * Result: A string that describes the success or failure.  The success message is taken from the !EchoResponse message directly.  
 
This method does not take any input variables.  Example use:

{{{
my $echo_service = perfSONAR_PS::Client::Echo->new( "http://localhost:8080/perfSONAR_PS/services/snmpMA", "http://schemas.perfsonar.net/tools/admin/echo/2.0" );
my ( $status, $res ) = $echo_service->ping;
if ( $status == 0 ) {
    print "success\n";
}
else {
    print "failure\n";
}
}}}

== Example Use ==

A simple example of use in a web context is checking the status of a particular service.  The following CGI script will take a input from the URL string, and display an HTML output describing the service status.

{{{
#!/usr/bin/perl

use CGI;
use CGI::Carp qw(fatalsToBrowser);
use perfSONAR_PS::Client::Echo;

my $cgi = CGI->new();
print $cgi->header();

if ( $cgi->param('service') ) {
    my $echo_service = perfSONAR_PS::Client::Echo->new( $cgi->param('service') );
    print "<h3>Service \"" , $cgi->param('service') , "\" is ";
    my ( $status, $res ) = $echo_service->ping;
    if ( $status == 0 ) {
        print "<font color=green>alive</font></h3><br>";
    }
    else {
        print "<font color=red>not alive</font></h3><br>";
    }
}
else {
    die "Service name not provided, aborting\n";
}
}}}

== Last Updated ==

$Id$
