#summary pS Performance Toolkit 3.1

<wiki:toc max_depth="6" />

== Introduction ==

The following guide describes in detail the steps required to set up version 3.1 of the perfSONAR performance Toolkit ([http://internet2.edu/performance/pS-PerformanceToolkit/ pS Performance Toolkit 3.1]).  It is important to follow each step in order.  Upon getting stuck, consult the [pSPerformanceToolkit31#FAQ FAQ] at the end of this document or join the [https://mail.internet2.edu/wws/info/performance-node-users mailing list].

== System Requirements ==

The pS Performance Toolkit requires modern hardware to function properly.  The following are basic guidelines to selecting hardware to power the measurement tools.

 * _*CPU*_
   * x86 or x86_64 Architecture
   * _*Single Core*_
     * 2.4Ghz or better
   * _*Dual Core*_
     * 1.6Ghz or better
 * _*Main Memory*_
   * 2G or better
 * _*Disk Size*_
   * 250G or better
 * _*Network Card*_
   * External NIC preferred to NIC located on the Motherboard
   * Speed depends on intended use
   * NIC choice is dependent on Linux driver availability, suggestions:
     * Intel Chipset (uses the e1000 driver)
       * PRO/1000 PT PCI-Express
       * PRO/1000 MT PCI-X.
       * PRO/1000 GT
     * Linksys/Netgear (uses the ns83820 driver)
       * 1GE PCI-X card
     * Myricom 10G Cards
       * Up to date drivers with each pS Performance Toolkit Release

Further recommendations for specific test situations and environments are available below.  These should be used to supplement the basic information.  

=== Virtual Machines ===

Use of the pS Performance Toolkit as a virtual machine is not recommended.  Due to the emulation of virtual hardware, measurement tools may not feature a completely accurate result.  Observations have shown the following tools and services behave in unexpected ways when used in a VM environment:

 * _*NTP*_: Virtual Machines (depending on software implementation) may receive a clock signal from the host they are running upon.  This may be delayed and is never as accurate as a true hardware clock; because of this NTP can suffer high jitter and delay characteristics.
 * _*OWAMP*_: OWAMP depends on accurate NTP results to properly measure the packets used in testing.  
 * _*BWCTL*_: BWCTL depends on accurate NTP results to properly measure the packets used in testing.  Additionally, virtual NIC support does not deliver the maximum available bandwidth as the guest machine often must fight with the host for access to the physical network.  

=== Latency Recommendations === 

Long term storage of latency data will require more disk space than recommended in the base.  We recommend upping the size of the primary disk to greater than or equal to 500G.  

Minimization of _*Jitter*_ is a common goal when performing latency tests.  In general most CPU and Motherboard combinations work well on modern hardware.   It is also *highly recommended* that combination Motherboard and NIC be avoided.

=== Bandwidth Recommendations === 

Bandwidth testing often requires that the CPU, Motherboard, and Network card work in harmony to achieve promised speeds.  Testing has shown that using a CPU (Single or Dual Core) with a higher clock speed will work better when managing the needs of the rest of the machine during bandwidth testing.  It is also *highly recommended* that combination Motherboard and NIC be avoided. 

== Installation ==

The pS Performance Toolkit [http://software.internet2.edu/pS-Performance_Toolkit/current.iso iso] and [http://software.internet2.edu/pS-Performance_Toolkit/current.md5 md5] are available for download to all interested parties.  Once downloaded please verify the MD5 sum:

{{{
user@host:~$ md5sum current.iso;cat current.md5 
9564ed9ac3b31c2fae361bcfdf894472  current.iso
9564ed9ac3b31c2fae361bcfdf894472  pS-Performance_Toolkit-3.1rc3.iso
}}}

If the calculated value matches the downloaded value, the ISO image is complete and should be burned to a CD.  After burning, please insert the CD into your target machine to boot.  Some items to consider:

 * The target machine should have some way to access the console.  This can be via an attached monitor and keyboard or remote.
 * The target machine's BIOS must allow the machine to boot from CD.  If the CD does not boot, adjust the BIOS (normally access via *_F12_* or similar) and try again.  
 * The target hardware should match what is described in [pSPT31#System_Requirements System Requirements].

After booting the following screen will appear:

http://perfsonar-ps.googlecode.com/svn/wiki/pSPT31/boot.png

Options are not normally required, simply press enter.  The boot process will commence after this:

http://perfsonar-ps.googlecode.com/svn/wiki/pSPT31/boot-msg.png

The pS Performance Toolkit features a system check to be sure some *_very_* minimal system requirements are met.  The following warning is used when the system memory is too low:

http://perfsonar-ps.googlecode.com/svn/wiki/pSPT31/disk-warn.png

The system is configured to search for addresses via DHCP by default.  This may cause the system to pause for a short amount of time if there is no DHCP server on the target network.  Note that in the [pSPT31#Console Console Configuration] phase a static IP can be specified.  The following shows the DHCP client getting an address:

http://perfsonar-ps.googlecode.com/svn/wiki/pSPT31/dhcp.png

The system will configure and start up services next.  It is normal to see some of these services fail (they will be configured in the [pSPT31#Console Console] and [pSPT31#Web Web] portions so they do start up properly).  The final step is to present the console to the user:

http://perfsonar-ps.googlecode.com/svn/wiki/pSPT31/login.png

To log in to your new system, use the _*knoppix*_ user, and a blank password:

http://perfsonar-ps.googlecode.com/svn/wiki/pSPT31/login-knoppix.png

The message at login motivates the two main forms of [pSPT31#Configuration Configuration]:

{{{
To start configuration, login as user knoppix and run 'sudo nptoolkit-configure.py'.
Once you set passwords, you can login to the web interface and finish configuration.
The web interface should be available at: https://lab246.internet2.edu/
}}}

== Configuration ==

Configuration of the pS Performance Toolkit is split into two parts:

 * [pSPT31#Console Console] - Configured on the target computer
   * _*Caveat*_: The console can be reached via a serial line or tool that may redirect this over a working network connection. 
 * [pSPT31#Web Web] - Can be configured remotely

In general the [pSPT31#Console console] configuration contains essential options that should be reviewed and set before the system can operate as a measurement framework.  Note that certain functionality, including the basic measurement tools, will function without any configuration.  The [pSPT31#Web web based] configuration steps can be performed remotely and should be used to personalize and customize the measurement experience.  

=== Console ===

At the console screen, type the following command:

{{{
sudo nptoolkit-configure.py
}}}

The following menu will appear:

http://perfsonar-ps.googlecode.com/svn/wiki/pSPT31/menu.png

There are 6 options that may be configured through this menu:

 * [pSPT31#Storage Storage] - Configure a drive to hold measurements and customizations
 * [pSPT31#Passwords Passwords] - Set the _*root*_ and _*knoppix*_ user passwords
 * [pSPT31#Networking Networking] - Set networking to be _DHCP_ or _Static_
 * [pSPT31#Timezone Timezone] - Set the timezone in which the host is deployed
 * [pSPT31#User_Management User Management] - Add additional users to the system
 * [pSPT31#Exit Exit] - After exiting the menu

The following sections detail the actions available in each section.  Note that as a menu item is addressed, they will change color.  

==== Storage ====

After choosing _*Option 1*_ from the menu, the following prompt will appear listing what drives were available on the system (experience may vary):

http://perfsonar-ps.googlecode.com/svn/wiki/pSPT31/drive-1.png

At the time of configuration, the user chose the first option.  In this particular case an internal check requests that the disk have at least 10GB of capacity.  This message will appear as such:

http://perfsonar-ps.googlecode.com/svn/wiki/pSPT31/drive-2.png

If the drive is unformatted, or formatted with a foreign filesystem (e.g. Linux can natively read several, but not not FAT or NTFS) there will be an option for format the drive in question.  _*N.B.*_: formatting a hard drive will render any existing old data un-readable.  Please be sure you wish to use the target hard drive before proceeding:

http://perfsonar-ps.googlecode.com/svn/wiki/pSPT31/drive-3.png

The screen will display the results of the formatting step.  Note that a machine reboot is required before the system will be completely usable.  The remainder of the menu can be navigated before the reboot will be requested:

http://perfsonar-ps.googlecode.com/svn/wiki/pSPT31/drive-4.png

After completing this series of questions, the menu will re-appear and mark that this step has been visited:

http://perfsonar-ps.googlecode.com/svn/wiki/pSPT31/menu-2.png

==== Passwords ====

After choosing _*Option 2*_ from the menu, the system will prompt for 2 new passwords:

 * _*root*_ user
 * _*knoppix*_ user

Note that each time this menu option is used, both users will be promoted for.  To set the password of either user individually please see [pSPT31#User_Management User Management].  The screen will look similar to this:

http://perfsonar-ps.googlecode.com/svn/wiki/pSPT31/pass.png
 
After completing this series of questions, the menu will re-appear and mark that this step has been visited:

http://perfsonar-ps.googlecode.com/svn/wiki/pSPT31/menu-3.png 

==== Networking ====

After choosing _*Option 3*_ from the menu, the following menu will appear:

http://perfsonar-ps.googlecode.com/svn/wiki/pSPT31/networking-1.png

Note that the particular host used in this guide was equipped with only one interface.  If there are multiple interfaces present they will show up in the menu.  To alter the DNS server, choose option 1:

http://perfsonar-ps.googlecode.com/svn/wiki/pSPT31/networking-2.png

In this case the DNS list may be empty, so the option to _add_ a server is all that is available.  To add a server to the list of DNS servers, choose option 1:

http://perfsonar-ps.googlecode.com/svn/wiki/pSPT31/networking-3.png

After this step we could _add_ another server, or delete an existing server.  We will choose to exit.  The second option allows configuration of the interfaces:

http://perfsonar-ps.googlecode.com/svn/wiki/pSPT31/networking-4.png

This option allows the operator to set the networking options (e.g. _*DHCP*_ vs _*Static IP*_, _*MTU*_ size).  The final option, _*Advertised Interface*_, is an option that relates to _perfSONAR_ services.  Each service will _advertise_ existence in a global directory.  If for some reason the target system is dual homed, for perfSONAR to work correctly the _*externally facing*_ interface should be advertised instead of something internal.

finally, the changes must be saved:

http://perfsonar-ps.googlecode.com/svn/wiki/pSPT31/networking-5.png

After completing this series of questions, the menu will re-appear and mark that this step has been visited:

http://perfsonar-ps.googlecode.com/svn/wiki/pSPT31/menu-4.png 

==== Timezone ====

After choosing _*Option 4*_ from the menu, the following warning will appear:

http://perfsonar-ps.googlecode.com/svn/wiki/pSPT31/tz-1.png

If you do choose to change the timezone, the following menu will help to narrow down the choices:

http://perfsonar-ps.googlecode.com/svn/wiki/pSPT31/tz-2.png

Finally, the name of the specified timezone should be entered:

http://perfsonar-ps.googlecode.com/svn/wiki/pSPT31/tz-3.png

After completing this series of questions, the menu will re-appear and mark that this step has been visited:

http://perfsonar-ps.googlecode.com/svn/wiki/pSPT31/menu-5.png 

==== User Management ====

After choosing _*Option 5*_ from the menu, the following menu will appear with options:

 * Add a user
 * Delete a user
 * Change a user's password

http://perfsonar-ps.googlecode.com/svn/wiki/pSPT31/user-1.png

_*Option 1*_ allows a new user to be added to the system:

http://perfsonar-ps.googlecode.com/svn/wiki/pSPT31/user-2.png

_*Option 2*_ will delete a user.  Note the user must be on the system first or the delete will fail:

http://perfsonar-ps.googlecode.com/svn/wiki/pSPT31/user-3.png

To delete the user properly:

http://perfsonar-ps.googlecode.com/svn/wiki/pSPT31/user-4.png

_*Option 3*_ will change the password of a user.  Note the user must be on the system first or the change will fail:

http://perfsonar-ps.googlecode.com/svn/wiki/pSPT31/user-5.png

To properly change the user's password:

http://perfsonar-ps.googlecode.com/svn/wiki/pSPT31/user-6.png

After completing this series of questions, the menu will re-appear and mark that this step has been visited:

http://perfsonar-ps.googlecode.com/svn/wiki/pSPT31/menu-6.png 

==== Exit ====

If the [pSPT31#Storage Storage] was entered (e.g. even if a change was not requested) the system will request a reboot:

http://perfsonar-ps.googlecode.com/svn/wiki/pSPT31/reboot.png

The screen may appear similar to the following and the system will enter the boot phase again:

http://perfsonar-ps.googlecode.com/svn/wiki/pSPT31/reboot-2.png

Note that if [pSPT31#Storage Storage] was not entered, you will be returned to the console.  

=== Web ===

Configuration over the web is available after the machine has come online.  First determine the address of the machine:

http://perfsonar-ps.googlecode.com/svn/wiki/pSPT31/getaddress.png

Enter this address in a web browser, and the following screen will appear:

http://perfsonar-ps.googlecode.com/svn/wiki/pSPT31/web-home.png

The menu on the left side of the screen has the following areas that can be viewed and configured, this guide will examine each:

 * User Tools
   * [pSPT31#Services_On_This_Node Services On This Node]
   * [pSPT31#Global_Set_Of_Services Global Set Of Services]
   * [pSPT31#JOWAMP JOWAMP]
   * [pSPT31#Reverse_Traceroute Reverse Traceroute]
   * [pSPT31#Reverse_Ping Reverse Ping]
   * [pSPT31#PingER_UI PingER UI]
 * Service Graphs
   * [pSPT31#perfAdmin_BWCTL BWCTL]
   * [pSPT31#perfAdmin_OWAMP OWAMP]
   * [pSPT31#perfAdmin_PingER PingER]
   * [pSPT31#perfAdmin_SNMP SNMP]
   * [pSPT31#Cacti_Graphs Cacti Graphs]
 * Toolkit Administration
   * [pSPT31#Administrative_Info Administrative Info]
   * [pSPT31#BWCTL_Limits BWCTL Limits]
   * [pSPT31#OWAMP_Limits OWAMP Limits]
   * [pSPT31#Enabled_Services Enabled Services]
   * [pSPT31#NTP NTP]
   * [pSPT31#Scheduled_Testing Scheduled Testing]
     * [pSPT31#Scheduled_BWCTL BWCTL]
     * [pSPT31#Scheduled_PingER PingER]
     * [pSPT31#Scheduled_OWAMP OWAMP]
   * [pSPT31#Cacti_Administration Cacti Administration]

==== Services On This Node ====

The _*home*_ page, is linked via the _Services On This Node_ button:

http://perfsonar-ps.googlecode.com/svn/wiki/pSPT31/web-home.png

This page lists the measurement tools currently on this node as well as the versions of each piece of software.  There are 3 states for each tool:

 * _*Running*_ - The service is functioning normally
 * _*Not Running*_ - The service is stopped
 * _*Disabled*_ - The service has been disabled via the [pSPT31#Enabled_Services Enabled Services] dialog.  

A service may be in the _*Not Running*_ state for a number of reasons, particularly if there was a problem at startup time.  If when examining this list a service is in this state, and the operator feels it shouldn't be, please try to restart the service and check the logs.  

==== Global Set Of Services ====

Using the power of the _perfSONAR Lookup Service_, the pS Performance Toolkit is able to locate and display information on other perfSONAR services, world-wide.  The following image displays the set of global services:

http://perfsonar-ps.googlecode.com/svn/wiki/pSPT31/web-global.png

This functionality is two fold:

 * A script, run via _*cron*_, queries the global services on a regular interval
 * All services that depend on this information, including [pSPT31#Scheduled_Testing Scheduled Testing], will get this information locally
 
The last time the script was executed is listed at the top of this page.  Note that if the date seems rather old the script could be experiencing an error - please consult the logs if this is the case.  

==== JOWAMP ====

JOWAMP is a Java client of the OWAMP tool that executes an owamp test from the web browser to the server located on that particular node.  Because JOWAMP is a Java applet, it must run in the browser and may trigger several warnings.  These warnings convey information about executing code that is not _signed_ within the browser.  The warnings will look similar to this (will vary by web browser):

http://perfsonar-ps.googlecode.com/svn/wiki/pSPT31/web-jowamp-1.png

http://perfsonar-ps.googlecode.com/svn/wiki/pSPT31/web-jowamp-2.png

http://perfsonar-ps.googlecode.com/svn/wiki/pSPT31/web-jowamp-3.png

http://perfsonar-ps.googlecode.com/svn/wiki/pSPT31/web-jowamp-4.png

After accepting this warnings, the JOWAMP main screen will start:

http://perfsonar-ps.googlecode.com/svn/wiki/pSPT31/web-jowamp-5.png

Running a test between the machine with the web browser and the performance node will produce results similar to this:

http://perfsonar-ps.googlecode.com/svn/wiki/pSPT31/web-jowamp-6.png

If for some reason an error was experienced, the following items should be checked:

 * _*Firewalls*_ - Check to be sure the performance node and the system with the web browser are either un-firewalled or have setting that would allow OWAMP traffic.  See the [http://www.internet2.edu/performance/owamp/ OWAMP] page for more details.
 * _*NTP*_ - Be sure the performance node has a stable NTP numbers.  The machine with the web browser does not need NTP, but should have synchronized time.  
 * _*Browser Security*_ - Check to be sure your browser allows web applets to be executed, and that all of the warnings were agreed too in the previous steps.  

==== Reverse Traceroute ====

The [http://www.slac.stanford.edu/comp/net/ Reverse Traceroute] tool was developed at [http://www.slac.stanford.edu SLAC] and allows a user to run a traceroute from the performance node to the web browser of the initializing machine.  The GUI appears as so:

http://perfsonar-ps.googlecode.com/svn/wiki/pSPT31/web-traceroute-1.png

The results of the traceroute are displayed as they complete:

http://perfsonar-ps.googlecode.com/svn/wiki/pSPT31/web-traceroute-2.png

==== Reverse Ping ====

The [http://www.slac.stanford.edu/comp/net/ Reverse Ping] tool was developed at [http://www.slac.stanford.edu SLAC] and is similar to the [pSPT31#Reverse_Traceroute Reverse Traceroute].  It allows a user to run a ping from the performance node to the web browser of the initializing machine.  The GUI appears as so:

http://perfsonar-ps.googlecode.com/svn/wiki/pSPT31/web-traceroute-3.png

==== PingER UI ====

The PingER UI is a tool designed to display and analyse data from the PingER tool:

http://perfsonar-ps.googlecode.com/svn/wiki/pSPT31/web-pinger-1.png

This GUI can be used to display the results of any PingER instance, in this case we select an instance that is different from the performance node itself:

http://perfsonar-ps.googlecode.com/svn/wiki/pSPT31/web-pinger-2.png

==== perfAdmin BWCTL ====

_perfAdmin_ is a series of CGI scripts that display data from perfSONAR services.  Each pS Performance Toolkit contains a _perfSONAR-BUOY_ instance that is capable of making regular BWCTL tests to other hosts.  This GUI is used to show the results of these tests.  

The first capture is seen when the service does not have any information to display, or may be in the _Disabled_ or _Not Running_ state:

http://perfsonar-ps.googlecode.com/svn/wiki/pSPT31/web-pa-throughput-1.png

Once the host is collecting data, a screen similar to the following will appear:

http://perfsonar-ps.googlecode.com/svn/wiki/pSPT31/web-pa-throughput-2.png

There are three sections to the GUI:

 * _*Current Data*_ - Data that has been collected in the past week.  
 * _*Summary Graph*_ - Shows the aggregate average observed into and out of each host.  
 * _*Historical Data*_ - Data that is present in the system, but older than a week.  

Graphs can be produced for individual tests:

http://perfsonar-ps.googlecode.com/svn/wiki/pSPT31/web-pa-throughput-3.png

==== perfAdmin OWAMP ====

_perfAdmin_ is a series of CGI scripts that display data from perfSONAR services.  Each pS Performance Toolkit contains a _perfSONAR-BUOY_ instance that is capable of making regular OWAMP tests to other hosts.  This GUI is used to show the results of these tests.  

The first capture is seen when the service does not have any information to display, or may be in the _Disabled_ or _Not Running_ state:

http://perfsonar-ps.googlecode.com/svn/wiki/pSPT31/web-pa-owd-1.png

Once the host is collecting data, a screen similar to the following will appear:

http://perfsonar-ps.googlecode.com/svn/wiki/pSPT31/web-pa-owd-2.png

There are three sections to the GUI:

 * _*Current Data*_ - Data that has been collected in the past week.  
 * _*Summary Graph*_ - Shows the aggregate average observed into and out of each host.  
 * _*Historical Data*_ - Data that is present in the system, but older than a week.  

Graphs can be produced for individual tests:

http://perfsonar-ps.googlecode.com/svn/wiki/pSPT31/web-pa-owd-3.png

==== perfAdmin PingER ====

_perfAdmin_ is a series of CGI scripts that display data from perfSONAR services.  Each pS Performance Toolkit contains a _PingER_ instance that is capable of making regular Ping tests to other hosts.  This GUI is used to show the results of these tests.  

The first capture is seen when the service does not have any information to display, or may be in the _Disabled_ or _Not Running_ state:

http://perfsonar-ps.googlecode.com/svn/wiki/pSPT31/web-pa-pinger-1.png

Once the host is collecting data, a screen similar to the following will appear:

http://perfsonar-ps.googlecode.com/svn/wiki/pSPT31/web-pa-pinger-2.png  

Graphs can be produced for individual tests:

http://perfsonar-ps.googlecode.com/svn/wiki/pSPT31/web-pa-pinger-3.png

==== perfAdmin SNMP ====

_perfAdmin_ is a series of CGI scripts that display data from perfSONAR services.  Each pS Performance Toolkit contains a _Cacti_ instance that is capable of collecting regular SNMP tests and exposing these via the _SNMP MA_.  This GUI is used to show the results of these tests.  

The first capture is seen when the service does not have any information to display, or may be in the _Disabled_ or _Not Running_ state:

http://perfsonar-ps.googlecode.com/svn/wiki/pSPT31/web-pa-snmp-1.png

Once the host is collecting data (after going through the [pSPT31#Cacti_Administration Cacti Administration] step), a screen similar to the following will appear:

http://perfsonar-ps.googlecode.com/svn/wiki/pSPT31/web-pa-snmp-2.png

Graphs can be produced for individual tests:

http://perfsonar-ps.googlecode.com/svn/wiki/pSPT31/web-pa-snmp-3.png

==== Cacti Graphs ====

Cacti is used to poll SNMP on network devices, this particular interface to Cacti is _non-privileged_, and can be used to show the results of cacti to all un-authenticated users:

http://perfsonar-ps.googlecode.com/svn/wiki/pSPT31/web-cacti-1.png

[pSPT31#Cacti_Administration Cacti Administration] describes how to configure Cacti.  

==== Administrative Info ====

This section requires authentication, the following box will appear before you may access any of the functionality:

http://perfsonar-ps.googlecode.com/svn/wiki/pSPT31/web-auth.png

Authenticate with the _*knoppix*_ user or any other user that has _administrative_ privileges on this system (See [pSPT31#User_Management User Management] for more information).  

The _administration_ screen will appear like this the first time:

http://perfsonar-ps.googlecode.com/svn/wiki/pSPT31/web-admin-1.png

Upon clicking _edit_, the following dialog will appear:

http://perfsonar-ps.googlecode.com/svn/wiki/pSPT31/web-admin-2.png

The information will appear in the web form after entry:

http://perfsonar-ps.googlecode.com/svn/wiki/pSPT31/web-admin-3.png

Clicking on the communities will instantly add them to your configuration:

http://perfsonar-ps.googlecode.com/svn/wiki/pSPT31/web-admin-4.png

Clicking _Add New Community_ will force a dialog box:

http://perfsonar-ps.googlecode.com/svn/wiki/pSPT31/web-admin-5.png

Adding new communities can be done in this manner:

http://perfsonar-ps.googlecode.com/svn/wiki/pSPT31/web-admin-6.png

Lastly, hit _save_ to be sure your changes are saved.  

http://perfsonar-ps.googlecode.com/svn/wiki/pSPT31/web-admin-7.png

Note that if you choose to leave this page before saving the following warning may appear (depending on the web browser used):

http://perfsonar-ps.googlecode.com/svn/wiki/pSPT31/non-save.png

===== Communities =====

Selecting which _*communities*_ to identify this installation can be confusing to answer for new users.  This particular question is trying to associate some _loosely coupled_ labels to the data that the perfSONAR NPToolkit disk will be making available to the larger world.  Think of this step similar to assigning labels to photos or music (e.g. a photo of a dog might have labels: _Dog_, _Rover_, etc. but someone else may choose different labels).  In general there is no _wrong way_ to choose a keyword.  Choose keywords that best describe the circumstances that surround this installation.  

Some examples of valid answers are:

 * *Internet2* - The data made available somehow connects the Intesrnet2 backbone
 * *LHC* (*CMS*, *ATLAS*, etc.) - The disk is part of the LHC deployment structure
 * *eVLBI* - The disk is a part of the larger telescope community
 * *MAX* - A connector of member of the MAX gigapop

We would recommend choosing keywords that:

 * Describe the location/installation (e.g. the name of the organization installing): *MCNC*, *UDel*
 * Network connections: *ESnet*, *GEANT*, *Internet2*, *NLR*, *RNP*
 * Virtual Organizations (VOs): *CMS*, *ATLAS*

Use as many community names as necessary to properly categorize the data from the installation.

==== BWCTL Limits ====

This section requires authentication, the following box will appear before you may access any of the functionality:

http://perfsonar-ps.googlecode.com/svn/wiki/pSPT31/web-auth.png

Authenticate with the _*knoppix*_ user or any other user that has _administrative_ privileges on this system (See [pSPT31#User_Management User Management] for more information).  

The _BWCTL Limits_ screen allows the operator to set limits on the resources that the BWCTL tool may consume on the target system.  For instance:

 * Protocols allowed
 * Test duration
 * Bandwidth allowed

The screen defaults to these settings:

http://perfsonar-ps.googlecode.com/svn/wiki/pSPT31/web-bwctllimits-1.png

Clicking an _edit_ link brings up a dialog:

http://perfsonar-ps.googlecode.com/svn/wiki/pSPT31/web-bwctllimits-2.png

The changes to the settings can be seen after closing the dialog:

http://perfsonar-ps.googlecode.com/svn/wiki/pSPT31/web-bwctllimits-3.png

Users and networks can be added in a similar manner.  

http://perfsonar-ps.googlecode.com/svn/wiki/pSPT31/web-bwctllimits-4.png

When done, press the _save_ button to continue.  Note that if you choose to leave this page before saving the following warning may appear (depending on the web browser used):

http://perfsonar-ps.googlecode.com/svn/wiki/pSPT31/non-save.png

==== OWAMP Limits ====

This section requires authentication, the following box will appear before you may access any of the functionality:

http://perfsonar-ps.googlecode.com/svn/wiki/pSPT31/web-auth.png

Authenticate with the _*knoppix*_ user or any other user that has _administrative_ privileges on this system (See [pSPT31#User_Management User Management] for more information).  

The _OWAMP Limits_ screen allows the operator to set limits on the resources that the OWAMP tool may consume on the target system.  For instance:

 * Bandwidth allowed
 * Disk usage
 * Saving vs deleting test results

The screen defaults to these settings:

http://perfsonar-ps.googlecode.com/svn/wiki/pSPT31/web-owamplimits-1.png

Clicking an _edit_ link brings up a dialog:

http://perfsonar-ps.googlecode.com/svn/wiki/pSPT31/web-owamplimits-2.png

Users and networks can be added in a similar manner. 

http://perfsonar-ps.googlecode.com/svn/wiki/pSPT31/web-owamplimits-3.png

When done, press the _save_ button to continue.  Note that if you choose to leave this page before saving the following warning may appear (depending on the web browser used):

http://perfsonar-ps.googlecode.com/svn/wiki/pSPT31/non-save.png

==== Enabled Services ====

This section requires authentication, the following box will appear before you may access any of the functionality:

http://perfsonar-ps.googlecode.com/svn/wiki/pSPT31/web-auth.png

Authenticate with the _*knoppix*_ user or any other user that has _administrative_ privileges on this system (See [pSPT31#User_Management User Management] for more information).  

The _enabled services_ screen lists the services that will start and stop when the machine does.  The screen looks similar to this:

http://perfsonar-ps.googlecode.com/svn/wiki/pSPT31/web-enabled.png

A breakdown of each service:

 * _*SSH*_ - Allows administrators to remotely connect to this host using SSH
 * _*NDT*_ - Allows clients at other sites to run NDT tests to this host.
 * _*NPAD*_ - Allows clients at other sites to run NPAD tests to this host.
 * _*BWCTL*_ - Allows clients at other sites to run Throughput tests to this host
 * _*OWAMP*_ - Allows clients at other sites to run One-Way Latency tests to this host
 * _*PingER*_ - Enables this host to perform scheduled ping tests. These tests will periodically ping configured hosts giving administrators a view of the latency from their site over time.
 * _*perfSONAR-BUOY Measurement Archive*_ - Makes available the data collected by the perfSONAR-BUOY Latency and Throughput tests.
 * _*perfSONAR-BUOY Throughput Testing*_	Enables this host to perform scheduled throughput tests. These tests will run periodically giving administrators a view of the throughput to and from their site over time.  _*N.B.*_: Enabling this will disable _*OWAMP*_, _*PingER*_ and _*perfSONAR-BUOY Latency Testing*_.
 * _*perfSONAR-BUOY Latency Testing*_	Enables this host to perform scheduled one-way latency tests. These tests will run periodically giving administrators a view of the latency from their site over time.  _*N.B.*_: Enabling this will disable _*perfSONAR-BUOY Throughput Testing*_, _*BWCTL*_, _*NDT*_, and _*NPAD*_. 

After selecting which services to enable, press _save_ to save the changes:

http://perfsonar-ps.googlecode.com/svn/wiki/pSPT31/web-enabled-save.png

Note that if you choose to leave this page before saving the following warning may appear (depending on the web browser used):

http://perfsonar-ps.googlecode.com/svn/wiki/pSPT31/non-save.png

==== NTP ====

This section requires authentication, the following box will appear before you may access any of the functionality:

http://perfsonar-ps.googlecode.com/svn/wiki/pSPT31/web-auth.png

Authenticate with the _*knoppix*_ user or any other user that has _administrative_ privileges on this system (See [pSPT31#User_Management User Management] for more information).  

[http://www.ntp.org/ NTP] is a protocol for keeping accurate time on networked machines.  NTP access is very important to measurement tools (e.g. OWAMP and BWCTL) and the pS Performance Toolkit will require a working NTP configuration to use these tools.  NTP configuration should consist of:

 * 4-5 Servers (for redudency and to help the NTP algorithms make _good_ choices)
 * Of a similar _stratum_ (e.g. all Stratum 1, or all Stratum 2)
 * Geographically _close_ (within the same timezone is a safe assumption)
 * On divergent network paths (prevents problems with failed network paths or asymetric congestion)

The following screen shows a default NTP configuration:

http://perfsonar-ps.googlecode.com/svn/wiki/pSPT31/web-ntp-1.png

The following NTP clocks have been identified as being valuable to use:

 * United States - Eastern Timezone
   * chronos.es.net	ESnet - New York, NY USA
   * owamp.atla.net.internet2.edu	Internet2 - Atlanta, GA USA
   * owamp.newy.net.internet2.edu	Internet2 - New York, NY USA
   * time-a.nist.gov	NIST - Gaithersburg, MD USA
   * navobs1.oar.net	Naval Observatory - Columbus, OH USA
   * ntp0.usno.navy.mil	Naval Observatory - Washington, DC USA
 * United States - Central Timezone
   * owamp.chic.net.internet2.edu	Internet2 - Chicago, IL USA
   * owamp.hous.net.internet2.edu	Internet2 - Houston, TX USA
 * United States - Mountain Timezone	 	 	 	 	 	 	 
   * owamp.salt.net.internet2.edu	Internet2 - Salt Lake City, UT USA	 	 	 	 	 	 	 
   * tick.usnogps.navy.mil	Naval Observatory - Colorado Springs, CO USA
 * United States - Pacific Timezone	 	 	 	 	 	 	 	 
   * saturn.es.net	ESnet - Sunnyvale, CA USA
   * owamp.losa.net.internet2.edu	Internet2 - Los Angeles, CA USA
   * ntp-ucla.usno.navy.mil	Naval Observatory - Los Angeles, CA USA
   * ntp-uw.usno.navy.mil	Naval Observatory - Seattle, WA USA
 * United States - Alaskan Timezone
   * ntp-ua.usno.navy.mil	Naval Observatory - Fairbanks, AK USA
 * United States - Hawaiian Timezone
   * tick.mhpcc.hpc.mil	Maui HPC Center - Maui, HI USA
 * South America (Brazil)
   * a.ntp.monipe.rnp.br	RNP Time Server #1 - Brazil
   * b.ntp.monipe.rnp.br	RNP Time Server #2 - Brazil
   * c.ntp.monipe.rnp.br	RNP Time Server #3 - Brazil
   * d.ntp.monipe.rnp.br	RNP Time Server #4 - Brazil
   * e.ntp.monipe.rnp.br	RNP Time Server #5 - Brazil

_*N.B.*_: Routing has a large impact on if an NTP time source is _reachable_ and _close_ from your particular instance.  It is recommended that the _Select Closest Servers_ option be used:

http://perfsonar-ps.googlecode.com/svn/wiki/pSPT31/web-ntp-2.png

After running the closest servers will be selected, and servers that were unreachable will be marked in red:

http://perfsonar-ps.googlecode.com/svn/wiki/pSPT31/web-ntp-3.png

When done, press the _save_ button to continue.  Note that if you choose to leave this page before saving the following warning may appear (depending on the web browser used):

http://perfsonar-ps.googlecode.com/svn/wiki/pSPT31/non-save.png

==== Scheduled Testing ====

This section requires authentication, the following box will appear before you may access any of the functionality:

http://perfsonar-ps.googlecode.com/svn/wiki/pSPT31/web-auth.png

Authenticate with the _*knoppix*_ user or any other user that has _administrative_ privileges on this system (See [pSPT31#User_Management User Management] for more information).  

The _Scheduled Testing_ screen allows the user to schedule several types of regular test:

 * [pSPT31#Scheduled_BWCTL BWCTL] - Bandwidth Testing
 * [pSPT31#Scheduled_PingER PingER] - Two-way Latency Testing
 * [pSPT31#Scheduled_OWAMP OWAMP] - One-way Latency Testing

The screen will look similar to this initially:

http://perfsonar-ps.googlecode.com/svn/wiki/pSPT31/web-scheduled-1.png

The following sections detail setting up tests for each of these measurement types.

===== Scheduled BWCTL =====

Upon adding a BWCTL test via the _Add New Throughput Test_ button, the following dialog will appear:

http://perfsonar-ps.googlecode.com/svn/wiki/pSPT31/web-scheduled-bwctl-1.png

Enter the following information:

 * _*Description*_ - Enter a name for this test, e.g. _10 Second BWCTL Tests, every 4 Hours_.  _*N.B.*_ that this will be used to reference the test on the GUI.  
 * _*Time Between Tests*_ - How often to run the BWCTL tests.  _*N.B.*_ that this number, along with _Test Duration_, will dictate how _busy_ the system will be.  
 * _*Test Duration*_ - How long of a BWCTL test to run.  In general TCP may take several seconds (on average 20 to 30) to ramp up to full line speed, especially on WAN paths.  _*N.B.*_ that this number, along with _Time Between Tests_, will dictate how _busy_ the system will be.  
 * _*Tester*_ - Currently only _iperf_ is allowed here. 
 * _*Protocol*_ - TCP or UDP testing.  
 * _*Use Auto-tuning*_ - Allow the linux kernel to tune the buffers or set your own buffer sizes.

After entering these values, the test is saved, but it does not have test hosts (yet):

http://perfsonar-ps.googlecode.com/svn/wiki/pSPT31/web-scheduled-bwctl-2.png

Adding test hosts can be done by [pSPT31#Communities community], or _manually_.  If a community is clicked from the list, the following dialog will appear:

http://perfsonar-ps.googlecode.com/svn/wiki/pSPT31/web-scheduled-bwctl-3.png

A host can be selected from this list to add to the test:

http://perfsonar-ps.googlecode.com/svn/wiki/pSPT31/web-scheduled-bwctl-4.png

Once selected the host will show up in the testing dialog.  

http://perfsonar-ps.googlecode.com/svn/wiki/pSPT31/web-scheduled-bwctl-5.png

When done, press the _save_ button to continue.  Note that if you choose to leave this page before saving the following warning may appear (depending on the web browser used):

http://perfsonar-ps.googlecode.com/svn/wiki/pSPT31/non-save.png

===== Scheduled PingER =====

PingER functions in a similar manner to [pSPT31#Scheduled_BWCTL BWCTL].  Upon adding a PingER test via the _Add New Ping Test_ button, the following dialog may appear appear if the system is already configured to test with BWCTL (this will not appear if a BWCTL test was not scheduled):

http://perfsonar-ps.googlecode.com/svn/wiki/pSPT31/web-scheduled-pinger-1.png

Enter the following information when the dialog appears:

 * _*Description*_ - Enter a name for this test, e.g. _10 PPS PingER Tests, every 1 Hour_.  _*N.B.*_ that this will be used to reference the test on the GUI.  
 * _*Time Between Tests*_ - How often to run the tests.
 * _*Packets Sent Per Test*_ - How many Ping Packets per test.  Note that sending more will increase the total length of a test.
 * _*Time Between Packets*_ - The interval between Ping Packets.  Setting this higher will increase the total length of a test
 * _*Size Of Test Packets*_ - How large of a Ping packet to use in testing.  

http://perfsonar-ps.googlecode.com/svn/wiki/pSPT31/web-scheduled-pinger-2.png

After entering these values, the test is saved, but it does not have test hosts (yet):

http://perfsonar-ps.googlecode.com/svn/wiki/pSPT31/web-scheduled-pinger-3.png

Adding test hosts can be done by [pSPT31#Communities community], or _manually_.  If a community is clicked from the list, the following dialog will appear:

http://perfsonar-ps.googlecode.com/svn/wiki/pSPT31/web-scheduled-pinger-4.png

A host can be selected from this list to add to the test.  Once selected the host will show up in the testing dialog. 

http://perfsonar-ps.googlecode.com/svn/wiki/pSPT31/web-scheduled-pinger-5.png

When done, press the _save_ button to continue.  Note that if you choose to leave this page before saving the following warning may appear (depending on the web browser used):

http://perfsonar-ps.googlecode.com/svn/wiki/pSPT31/non-save.png

===== Scheduled OWAMP =====

OWAMP functions in a similar manner to [pSPT31#Scheduled_BWCTL BWCTL].  Upon adding a OWAMP test via the _Add New One-Way Delay Test_ button, the following dialog may appear appear if the system is already configured to test with BWCTL (this will not appear if a BWCTL test was not scheduled):

http://perfsonar-ps.googlecode.com/svn/wiki/pSPT31/web-scheduled-owamp-1.png

Enter the following information when the dialog appears:

 * _*Description*_ - Enter a name for this test, e.g. _25 PPS OWAMP Test_.  _*N.B.*_ that this will be used to reference the test on the GUI.  
 * _*Packet Rate*_ - How many PPS.  
 * _*Packet Size*_ - Size of each packet
 
http://perfsonar-ps.googlecode.com/svn/wiki/pSPT31/web-scheduled-owamp-2.png

After entering these values, the test is saved, but it does not have test hosts (yet):

http://perfsonar-ps.googlecode.com/svn/wiki/pSPT31/web-scheduled-owamp-3.png

Adding test hosts can be done by [pSPT31#Communities community], or _manually_.  If a community is clicked from the list, the following dialog will appear:

http://perfsonar-ps.googlecode.com/svn/wiki/pSPT31/web-scheduled-owamp-4.png

A host can be selected from this list to add to the test.  Once selected the host will show up in the testing dialog. 

http://perfsonar-ps.googlecode.com/svn/wiki/pSPT31/web-scheduled-owamp-5.png

Manually adding a host is also possible, simply fill in the fields with the name and port of a host to test against:

http://perfsonar-ps.googlecode.com/svn/wiki/pSPT31/web-scheduled-owamp-6.png

After completing, the host will show up in the testing dialog. 

http://perfsonar-ps.googlecode.com/svn/wiki/pSPT31/web-scheduled-owamp-7.png

When done, press the _save_ button to continue.  Note that if you choose to leave this page before saving the following warning may appear (depending on the web browser used):

http://perfsonar-ps.googlecode.com/svn/wiki/pSPT31/non-save.png

==== Cacti Administration ====

This section requires authentication, the following box will appear before you may access any of the functionality:

http://perfsonar-ps.googlecode.com/svn/wiki/pSPT31/web-auth.png

Authenticate with the _*knoppix*_ user or any other user that has _administrative_ privileges on this system (See [pSPT31#User_Management User Management] for more information).  

The following steps will explain the basic setup of Cacti (e.g. to poll a network device).  A user wishing to do more with the software should consult the documentation.  

===== Cacti Config Step 1 =====

Visit the Cacti instance:

http://perfsonar-ps.googlecode.com/svn/wiki/pSPT31/Cacti_1.png

===== Cacti Config Step 2 =====

After logging in you will see the _home_ screen.  In the middle there
will be an option to *Create devices*.  This is where we will begin.

http://perfsonar-ps.googlecode.com/svn/wiki/pSPT31/Cacti_2.png

===== Cacti Config Step 3 =====

The next screen shows the currently known devices.  The basic setup will
*always* include _localhost_.  The example below shows a previously
configured switch.  On the right side there is an *Add* _button_ (although
it doesn't appear to be so).  Click this to add a new device.

http://perfsonar-ps.googlecode.com/svn/wiki/pSPT31/Cacti_3.png

===== Cacti Config Step 4 =====

The next screen features many places to add information about your new
network device.  Note that the red circles are representative of the most
common places to make changes.  When you are finished press *Create*.

http://perfsonar-ps.googlecode.com/svn/wiki/pSPT31/Cacti_4.png
http://perfsonar-ps.googlecode.com/svn/wiki/pSPT31/Cacti_5.png

===== Cacti Config Step 5 =====

By default Cacti will only poll the *System* information of the SNMP enabled
host at this stage, just to see if it is alive.  To poll information such
as network statistics it is necessary to create *Graphs*.  We will proceed
by clicking on *Create graphs for this Host*.

http://perfsonar-ps.googlecode.com/svn/wiki/pSPT31/Cacti_6.png

===== Cacti Config Step 6 =====

The next screen displays the possible interfaces that are available for 
data display.  Note that this may be a *large* number.  In general it is
efficient to simply click the *all* checkbox at the top unless there are 
certain interfaces you wish you only poll or perhaps leave out.  After
checking this, scroll to the bottom.

http://perfsonar-ps.googlecode.com/svn/wiki/pSPT31/Cacti_7.png

===== Cacti Config Step 7 =====

At the bottom of the page is a drop down for the *format* of the data.  It is
common to use the 64 bit counters (especially for backbone networks) and 
display the information as bytes as shown here.  Other options are of course
available.  When done click *Create*.

http://perfsonar-ps.googlecode.com/svn/wiki/pSPT31/Cacti_8.png

===== Cacti Config Step 8 =====

The resulting page should show the success or failure of each interface.  At
this point the following actions have happened:

 * RRD Files have been created for the interfaces in question
 * A Poller has been notified that these are values of interest (polling will occur by default every 5 minutes) 
 * Graph templates have been established
 
We now can organize this *set* into a graph tree for later display.  Select
*Graph Trees* on the left hand side.  

http://perfsonar-ps.googlecode.com/svn/wiki/pSPT31/Cacti_9.png

===== Cacti Config Step 9 =====

Select *Default Tree*.  It is also possible to create your own tree at this
stage if desired.

http://perfsonar-ps.googlecode.com/svn/wiki/pSPT31/Cacti_10.png

===== Cacti Config Step 10 =====

As in _Step 3_ there is another *Add* button to click because we wish to add
a new host to the tree.

http://perfsonar-ps.googlecode.com/svn/wiki/pSPT31/Cacti_11.png

===== Cacti Config Step 11 =====

Select *Host* from the drop down.  This will automatically populate the
next drop down with the network device you have set up.  When you are
set click *Create*.

http://perfsonar-ps.googlecode.com/svn/wiki/pSPT31/Cacti_12.png

===== Cacti Config Step 12 =====

The next menu shows that the device has been added.  To see the graphs
click on *Graphs* on the top.

http://perfsonar-ps.googlecode.com/svn/wiki/pSPT31/Cacti_13.png


===== Cacti Config Step 13 =====

By default you can view the _localhost_ statistics, but below this the new
network device is present.

http://perfsonar-ps.googlecode.com/svn/wiki/pSPT31/Cacti_14.png
http://perfsonar-ps.googlecode.com/svn/wiki/pSPT31/Cacti_15.png

== Known Bugs ==

TBD

== FAQ ==

TBD

== Last Updated ==

$Id$
