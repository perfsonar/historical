#summary perfSONAR-PS Release Management

<wiki:toc max_depth="6" />

== Introduction ==

The perfSONAR-PS release process is based heavily on the [ReleaseManagement generic] process.  This page recommends actions for the perfSONAR-PS group only.  Content subject to change, so please review frequently.

== Roadmap ==

*LAST REVISED* <font color=red>March 31, 2009</font>

|| *Date* || *Milestone* ||
|| _8 April_ || [pSPSReleaseManagement#pSPS_Version_3.1 pSPS Version 3.1] ||
|| _May_ || [pSPSReleaseManagement#pSPS_Version_3.1+ pSPS Version 3.1+] ||
|| _May_ || [pSPSReleaseManagement#PN_Version_3.1 PN Version 3.1] ||
|| _June_ || [pSPSReleaseManagement#pSPS_Version_3.2 pSPS Version 3.2] ||
|| _July_ || [pSPSReleaseManagement#PN_Version_3.2 PN Version 3.2] ||
|| _Jan 10_ || [pSPSReleaseManagement#pSPS_Version_4.0 pSPS Version 4.0] ||
|| _Jan 10_ || [pSPSReleaseManagement#PN_Version_4.0 PN Version 4.0] ||

=== perfSONAR-PS ===

The following section details perfSONAR-PS specific enhancements for the future.  

==== pSPS Version 3.1 ====
  
  * RPM Packages for all current perfSONAR-PS services
  * gLS/hLS performance and stability updates
  * CGI based GUIs
    * gLS/hLS GUIs
    * Simple data GUIs for OWAMP/BWCTL/PingER/SNMP
  * Circuit monitoring (glif version, still E2EMon compatible)
  * Yum/APT repository

==== pSPS Version 3.1+ ====

  * OWAMP support in perfSONAR-BUOY
  * Nagios pluggins
    * Liveness
    * Threshold of performance data
  * Enhanced CGI script for OWAMP data (dash-board)
  * Modified pS-B OWAMP database back-end with support for history of delay-variation

==== pSPS Version 3.2 ====

  * Monitoring of DCN-created circuits
  * Programmatic APIs
    * gLS, MA, Specific MAs, MP, specific MPs
    * Well structured
    * Documented
    * Designed for Application Programmers
  * Limited AA integration

==== pSPS Version 4.0 ====

  * LS - Topology based service queries (nearest MP problem)
  * Centralized Configuration Service
  * GUI enhancements
    * User community centric - search for problems relating to X

==== pSPS Version Future ====

  * Integration into end applications
  * pS-Netflow - archive of netflow data
    * allow queries to search for specific patterns
    * allow queries for specific summary stats (what ports used, gross traffic flows, IPv4 vs IPv6 etc...)
  * BGP archive
    * What would the route have been for a packet at time X at location Y be?
  * Traceroute MA
  * More NOC integration
    * Tickets-MA - tag a ticket as relating to specific topology and correlate with performance data
    * Needs to include GUI work for both TT integration, and data usage. For example, correlating a reported maintenance window could flag performance data as suspect.
  * Global - state of the networks GUIs. Provide ways of seeing an overall picture of perfSONAR deployments and then allowing the user to drill down to specific regions (both geographically, as well as by data types or network technology types - or even application communities).
  * perfSONAR interfaces for sharing of ProtoGENI performance and management data. (LAMP)
  * DICE-AA integrated AAA supported

=== Performance Node ===

The following section details Performance Node specific enhancements for the future. 

==== PN Version 3.1 ====

  * Additions to pS-NPToolkit to enable Zero-Config mode
  * Use new versions of OWAMP/BWCTL and [pSPSReleaseManagement#pSPS_Version_3.1+ pSPS Version 3.1+]
  * Minimal-configuration start-up for diagnostic
  * All Administration via HTTP
  * Stability and performance enhancements
  * Community specific operations

==== PN Version 3.2 ====

  * Fedora-Live based to enable ISO building from rpms
  * Use [pSPSReleaseManagement#pSPS_Version_3.2 pSPS Version 3.2]

==== PN Version 4.0 ====

  * Allow an administrator to control a set of pS-performance nodes
  * Combination of yum repository and centralized configuration management tools

== Release Frequency ==

perfSONAR-PS will be released on a bi-yearly basis to coincide with major activities of group members.  We are currently aiming to release:

 * Late Winter - February/March
 * Late Summer - August/September

These suggestions were based on group feedback from the [20081211Video December 11th Call], dates may be shifted based on priorities of the released software or group members.

=== v3.1 Release ===

For more information regarding this release, please see the information [pSPS20090327Release page].

=== v3.1+ Release ===

TBD

== Release Process ==

The following are recommendations and deviations from the release process [ReleaseManagement#Release_Process recomendations].  These are not set in stone and may be relaxed depending on requirements for a given attempt.  Many are subject to availability of resources (time and manpower).  

=== Dependencies ===

perfSONAR-PS has dependencies on the following software components in Internet2 and related partners:

 * _*OWAMP*_
   * Used by the perfSONAR-BUOY product.  In the event perfSONAR-BUOY is not being released this restraint can be relaxed. 
 * _*BWCTL*_
   * Used by the perfSONAR-BUOY product.  In the event perfSONAR-BUOY is not being released this restraint can be relaxed. 
 * _*DCN*_
   * The OSCARS MA, TL1 Collection, and Status services may be effected by a DCN release.  Each of these can coordinate with the DCN development team prior to a release to ensure compatibility.
 * _*Phobeus*_
   * Phoebus will begin to use perfSONAR-based host monitoring as well as network measurements.  This is not a hard requirement, but prior to a release the Phoebus development team must be consulted.  
 * _*Performance Node*_
   * This software will normally be released *after* perfSONAR-PS to take full advantage of all new features and bugfixes

Prior to a release cycle each of these should be weighed to gauge the importance they may hold in a new product vs. a previously tested release.

=== Revision Control ===

perfSONAR-PS will continue to use subversion.  As [ReleaseManagement#Revision_Control recommended], the release manager will be in charge of SVN wrangling with regards to:

 * Creating the release branch
 * Creating tags for candidates
 * Deleting unused tags and branches when necessary
 
Developers are reminded to work in the appropriate area and merge changes back to trunk promptly.  

=== Schedule ===

See the original [ReleaseManagement#Schedule recommendations].  The schedule allows for a 3 week window, and may be relaxed or tightened on the discretion of the release team.

=== Documentation ===

Developers should focus on documentation for the perfSONAR-PS project in the following order:

 * Perldoc for all modules and scripts
 * Installation and configuration documentation (included in packaging)
 * User Documentation
   * This should be of a higher quality than what is prepared for developers
   * Would be _layered_ to include context regarding the bigger picture in network monitoring
   * Should be available in the package and on the web (see also: [http://e2epi.internet2.edu/npw/binder-docs/owamp-cookbook.pdf OWAMP Cookbook])
 * Wiki pages to describe Installation/configuration/developer details
   * wiki pages get out of date quickly, so this should _*only*_ be used for information that is too detailed to include in a release.
   * May also be the home of FAQ
 * Wiki pages for API use or other examples that may be helpful for users and other developers
 
The release team should be sure to:

 * Provide the technical writing and communications staff updates for the static web pages
 * Ensure the web pages are addressed within a week of the official release

All documentation will be reviewed prior to the release for completeness and correctness.  

==== Perldoc Format ====

The following are requirements for all perfSONAR-PS libraries and scripts:

Header Information, make the obvious changes for:

 * VERSION
 * NAME
 * DESCRIPTION
 * Used libraries

{{{
package NAME;

use strict;
use warnings;

our $VERSION = SOME_NUMBER;

=head1 NAME

BRIEF DESC.

=head1 DESCRIPTION

LONGER DESC.

=cut

use Log::Log4perl qw(get_logger);

use perfSONAR_PS::Common;
}}}

Method/Function Information:

{{{
=head2 NAME($self, { ARGUMENT => REQUIRED } )

DESCRIPTION

=head2 API

=cut
}}}

Footer Information, make the obvious changes for:

 * SEE ALSO
 * AUTHOR
 * COPYRIGHT

{{{
__END__

=head1 SEE ALSO

L<xxx::xxx>

To join the 'perfSONAR Users' mailing list, please visit:

  https://mail.internet2.edu/wws/info/perfsonar-user

The perfSONAR-PS subversion repository is located at:

  http://anonsvn.internet2.edu/svn/perfSONAR-PS/trunk

Questions and comments can be directed to the author, or the mailing list.
Bugs, feature requests, and improvements can be directed here:

  http://code.google.com/p/perfsonar-ps/issues/list

=head1 VERSION

$Id$

=head1 AUTHOR

xxx, xxx@xxx.xxx

=head1 LICENSE

You should have received a copy of the Internet2 Intellectual Property Framework
along with this software.  If not, see
<http://www.internet2.edu/membership/ip.html>

=head1 COPYRIGHT

Copyright (c) 2007-2009, Internet2

All rights reserved.

=cut
}}}

=== Testing ===

All perfSONAR-PS modules and applicable scripts must provide:

 * Perl tests at the *_unit_* level
   * These should be written in the typical language of perl tests
   * Test each method several times for a given module/script/api
   * Use automated means when possible to generate databases/files/external relationships
 * Request and Response messages for use in the perl testing framework
   * Each request/response pair should test for an external aspect of the service in question
   * The response should be treated as the _expected_ value, in the absence of a response please provide commentary on what the response should contain
   * Tests should attempt to test both the errors and expected behaviours of the system from the outside.  

=== Code Review ===

Before release each service must go through a code review from a developer or developers. This scope of this code review will be determined prior to each release, but general considerations are:

 * Soundness of design
 * Conformity to the [CodeRules rules of the code]
 * Documentation completeness/sensibility
 * Use of external modules/libraries
 * Construction of adequate test cases
 * Final [Perltidy] and [Perlcritic] evaluation

=== Issue Tracker ===

The release manager will:

 * Enter new tags to the issue tracker prior to a release
 * Re-classify all bugs as necessary
 * Annoy the developers to fix/close bugs before and after each release

==== Labels ====

perfSONAR-PS will respect the following _classes_ of label in the Google Issue tracker (in addition to several unclassified _tags_:

 * _*Type*_ - What sort of issue report is this?
 * _*Milestone*_ - Tentative classification for release target.  We reserve _Future_ for unknown status.
 * _*Priority*_ - Related to milestone designation.
 * _*OpSys*_ - Operating systems effected.  Normally not relevant to perfSONAR-PS, but available for related projects.
 * _*Component*_ - Specific component of the framework.  

A breakdown and explanation of each label follows:

 * Type
   * _*Defect*_ - Report of a software defect
   * _*Enhancement*_ - Request for enhancement
   * _*Task*_ - Constructive work item
   * _*Patch*_ - Source code patch for review
   * _*Other*_ - Some other kind of issue
 * Priority
   * _*Critical*_ - Must resolve in milestone
   * _*High*_ - Strongly want to resolve in milestone
   * _*Medium*_ - Normal priority
   * _*Low*_ - Might slip to later milestone
 * OpSys
   * _*All*_ - Affects all operating systems
   * _*Windows*_ - Affects Windows users
   * _*Linux*_ - Affects Linux users
   * _*OSX*_ - Affects Mac OS X users
 * Milestone
   * _*Release0.9Beta*_ - perfSONAR-PS September 2007 Release (<font color="red">depreciated</font>) 
   * _*Release0.9*_ - perfSONAR-PS January 2008 Release (<font color="red">depreciated</font>) 
   * _*Release1.0*_ - perfSONAR-PS July 2008 Release (<font color="red">depreciated</font>) 
   * _*Release3.1Beta*_ - perfSONAR-PS March 2009 Release - Special tag for beta testing
   * _*Release3.1*_ - perfSONAR-PS March 2009 Release
   * _*Release3.2Beta*_ - perfSONAR-PS Summer 2009 Release - Special tag for beta testing
   * _*Release3.2*_ - perfSONAR-PS Summer 2009 Release
   * _*Future*_ - perfSONAR-PS Future Plans
 * Component
   * _*Issues*_ - Issues Information Request
   * _*Wiki*_ - Wiki Information Request
   * _*Docs*_ - PerfSONAR-PS documentation
   * _*perfSONAR-PS*_ - General Framework - use when unsure of specific parts are unknown
   * _*PingER*_ - PingER Measurement Archive and Point
   * _*SNMP*_ - SNMP Measurement Archive
   * _*LookupService*_ - Class Lookup Service (<font color="red">depreciated</font>) 
   * _*HomeLookupService*_ - Home Lookup Service
   * _*GlobalLookupService*_ - Global Lookup Service
   * _*TopologyService*_ - Topology Service
   * _*CircuitStatus*_ - Circuit Status Measurement Archive (<font color="red">depreciated</font>) 
   * _*StatusService*_ - Status Measurement Archive
   * _*PerfSONARBUOY*_ - PerfSONAR-BOUY Measurement Archive (<font color="red">depreciated</font>) 
   * _*PerfSONARBUOYClient*_ - PerfSONAR-BOUY Client Package
   * _*PerfSONARBUOYServer*_ - PerfSONAR-BOUY Server Package
   * _*LSRegistrationDaemon*_ - LS Registration Daemon
   * _*TL1*_ - TL1 Tools
   * _*GUI*_ - PerfSONAR-PS GUI Tools
   * _*API*_ - Programmer Interfaces
   * _*NPToolkit*_ - Network Performance Toolkit (<font color="red">depreciated</font>) 
   * _*PerformanceNode*_ - Performance Node
   * _*PerformanceNodeKnoppix*_ - Performance Node - Knoppix Releases
   * _*PerformanceNodeFedora*_ - Performance Node - Fedora Releases
 * Misc
   * _*Security*_ - Security risk to users
   * _*Performance*_ - Performance issue
   * _*Usability*_ - Affects program usability
   * _*Maintainability*_ - Hinders future changes
   * _*Documentation*_ - Documentation issue
   * _*Packaging*_ - Issues package construction

== Released Product ==

perfSONAR-PS will be released as:

 * Source packages (e.g. similar to what CPAN requires using [http://perldoc.perl.org/ExtUtils/MakeMaker.html Make::Maker])
 * [CreatingPackages RPM Packages]

An associated [YumRepository Yum repository] will be available with all releases of perfSONAR-PS software in addition to the source packages. This tool will enable easier installation and usage within the performance monitoring community.

Special consideration to other types of released packages (FreeBSD ports, Debian packages) will be considered but rarely supported by the core perfSONAR-PS developers.  

== Last Updated ==

$Id$