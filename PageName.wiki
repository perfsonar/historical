== Deployment options ==

 #  As part of the perfSONAR-PS bundle packaged on Knoppix disk
 #  deploy PingER services as pre-built executable
 #  deploy as perl modules

The first method is not covered here but available [NPToolkit at].
The second method is the easiest one but its limiting your choice of target system to Linux 32 or 64 bits and may have some problems due potential incompatibilities between underlying system libraries.
The later method is more generic and in theory will allow to install and deploy pinger on any system with perl and supported external libraries but it will require a long list of pre-requisites to be installed and may lead to potential problems with unresolved or cyclical dependencies between numerous perl modules. This page will cover both methods in details.

== Deploy as pre-built Executable ==

=== Prereqs ===

This document is based on a fresh install of RHEL5 or 4.

In order to run pinger service you need to install  SQLite or MySQL DB server. That's could be easily done by utilizing yum or rpm.

*yum install mysql*

See [#Create_the_database below] how to configure MySQL or SQLite database.

Or download this [create_pingerMA_MySQL.sql] and replace 'CHANGE--------ME' 
to the pinger db account password and in case of MySQL run:
{{{
>mysql -u root -p'<root_pass>' < create_pingerMA_MySQL.sql
}}}

=== Service installation and Config ===

Download pinger [http://tukki.fnal.gov perfSONAR_PS-Services-PingER-0.09-bin.tgz].  

Run:
{{{
>tar -zxvf perfSONAR_PS-Services-PingER-0.09-bin.tgz

>cd perfSONAR_PS-Services-PingER-0.09-bin
}}}

{quote}
The *_sql_* directory contains database scripts required to create pinger MA database, it [#Configuration described] below how.

{{{
>rc.service configure

>./rc.service
}}}

----
 
==== rc.service options: =====
 
 * *start* - start  pinger 
 * *stop*  - stop  pinger 
 * *restart* - restart  pinger  if running by sending a SIGHUP or start if not running
 * *configure*  - configure service (and restart if it was running ) 
 * *help*  - this screen 
 

=== For manual start of the service daemon with lots of debugging info: ===

Run:
{{{

>./bin/ps-pinger-0.09 --config=etc/pinger.conf --verbose

}}}

== Deploy as perl modules distribution ==


=== Prereqs ===

This document is based on a fresh install of RHEL5.

=== rpms

May need:

*sudo yum install gcc*

*sudo rpm -Uhv zlib-devel-1.2.3-3.i386.rpm libxml2-devel-2.6.26-2.1.2.i386.rpm*

*sudo yum install mysql mysql-devel*

or

*sudo yum install sqlite*

=== perl dependencies ===

May need:

*sudo yum install perl-XML-LibXML*

*sudo yum install perl-DBD-MySQL*

or

*sudo yum install perl-DBD-SQLite*

=== Checkout code ===

*svn co* [http://anonsvn.internet2.edu/svn/perfSONAR-PS/trunk/] *trunk*

===perl dependencies etc ===

... are handled by the pinger makefile:

{{{

>cd trunk/modules/perfSONAR_PS-Services-PingER-v0.09

>perl Makefile.PL
}}}

Answer *yes*  on any questions about installing pre-requisites.

=== Compile ===

*>sudo make*

It may take a while. Some questions might be asked depending on your CPAN config, please answer yes to all of them.

See additional Installation Notes [Installation-notes] if you run in any problems. 

== Configuration ==

Two configuration files need to be customized. One is the service description, and the second is the landmarks list.

== Create the database ==


=== SQLite ===

Download this [create_pingerMA_SQLite.sql] and run:
{{{
>sqlite3 /tmp/pingerMA.db < util/create_pingerMA_SQLite.sql
}}}

=== MySQL ===

 

Download this [create_pingerMA_MySQL.sql], replace *CHANGE--------ME* with  pinger db account password and run:

{{{
>mysql -u root -p'<root_pass>' < create_pingerMA_MySQL.sql
}}}


= Service config ==

You need to modify pinger_pass, service_accesspoint and service_description. Also, make sure that database type is chosen properly.

In case of MySQL the db_name should be *pingerMA* and in case of SQLite it will be */tmp/pingerMA.sqlite3&nbsp;*
{quote}
max_worker_lifetime 300
pid_file pinger.pid
disable_echo 0
pid_dir /tmp/ max_worker_processes 30
ls_registration_interval 60
<port 8075>
<endpoint /perfSONAR_PS/services/pinger/mp>
service_type MP
module perfSONAR_PS::Services::MP::PingER
<pingermp>
db_name pingerMA
service_description FNAL Tier2 PingER MP
configuration_file pinger-landmarks.xml
db_host localhost
db_username pinger
service_accesspoint [http://localhost:8075/perfSONAR_PS/services/pinger/mp]
enable_registration 0
service_name PingER MP
query_size_limit 100000
db_type mysql
db_password pinger_pass
ls_registration_interval 60
</pingermp>
</endpoint>
<endpoint /perfSONAR_PS/services/pinger/ma>
service_type MA
<pingerma>
db_name pingerMA
service_description FNAL Tier2 PingER MA
db_host localhost
db_username pinger
service_accesspoint [http://localhost:8075/perfSONAR_PS/services/pinger/ma]
enable_registration 0
service_name PingER MA
query_size_limit 100000
db_type mysql
db_password pinger_pass
ls_registration_interval 60
</pingerma>
module perfSONAR_PS::Services::MA::PingER
</endpoint>
</port>
{quote}

h3. landmarks to ping

*_[*{_}pinger-landmarks.xml{_}*|^pinger-landmarks.xml]_* file is the XML representation of the list and montoring parameters of each monitored host. There is a webadmin interface to modify this file but it requires an extra deployment of the local CGI enabled webserver ( Apache, lighthttpd) and properly installed and configuired cgi script. For now the easiest way is to modify this file by hand.
For example in order to start pinger monitoring of the *{_}pinger.slac.stanford.edu host{_}* one has to insert this records:
{quote}
<pingertopo:domain id="urn:ogf:network:domain=slac.stanford.edu">

<pingertopo:node id="urn:ogf:network:domain=slac.stanford.edu:node=pinger">

<nmtb:name type="string">pinger</nmtb:name>

<nmtb:hostName>pinger.slac.stanford.edu</nmtb:hostName>

<nmtb:description></nmtb:description>

<nmwg:parameters id="1000B">

<nmwg:parameter name="packetSize">1000</nmwg:parameter>

<nmwg:parameter name="count">10</nmwg:parameter>

<nmwg:parameter name="packetInterval">1</nmwg:parameter>

<nmwg:parameter name="ttl">255</nmwg:parameter>

<nmwg:parameter name="measurementPeriod">60</nmwg:parameter>

<nmwg:parameter name="measurementOffset">0</nmwg:parameter>

</nmwg:parameters>

<nmtl3:port id="urn:ogf:network:domain=slac.stanford.edu:node=pinger:port=134.79.18.163">

<nmtl3:ipAddress type="IPv4">134.79.240.30</nmtl3:ipAddress>

</nmtl3:port>

</pingertopo:node>

</pingertopo:domain>
{quote}
Where there might be multiple pingertopo:node inserted later for the&nbsp; *_slac.stanford.edu_\*&nbsp; domain.
The most important parameter is the&nbsp; \_measurementPeriod_. It defines in seconds the period between pings.
The rest of parameters could be left untouched. Please make sure that node id is consistent with \_hostName\\\\\\\\\\\\\\\_ and port id.

h3. Start Service

sudo required due to port 80 and can be avoided with ports from higher numbers range ( 8080, 9090 etc)

*_$sudo perfsonar-daemon \--verbose \-c /etc/perfsonar/dae