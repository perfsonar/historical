# ##############################################################
# 
# File:     summary.rnc
#
# Version:  $Id: owdsummary.rnc 341 2008-04-24 21:52:11Z boote $ 
#
# Purpose:  Describes summary for one-way latency.
#                         
# ##############################################################


namespace nmwg = "http://ggf.org/ns/nmwg/base/2.0/"
namespace owd = "http://ggf.org/ns/nmwg/characteristic/delay/one-way/20070914/"
namespace nmwgr = "http://ggf.org/ns/nmwg/result/2.0/"
namespace summary = "http://ggf.org/ns/nmwg/characteristic/delay/summary/20070921/"


include "owd.rnc" {
        Metadata |= SummaryMetadata
        Data |= SummaryData        
} 


SummaryMetadata = 
        element nmwg:metadata {
                Identifier &
                MetadataIdentifierRef? &
                (
                        OWDMetadataContent |
                        SummaryMetadataContent
                ) 
        }
          
SummaryMetadataBlock = 
        SummarySubject? &
        (
                SummaryParameters |
                Parameters
        )?        
        
SummaryMetadataContent = 
        (
                SummaryMetadataBlock |
                FilterMetadataBlock                
        ) &        
        EventType* &
        Key?        


#
# EndpointPair has a 'role' attribute/element. It should be set
# to 'sender' in one endpoint and 'receiver' in the other endpoint.
SummarySubject =
        element summary:subject {
                Identifier &
                MetadataIdentifierRef? &        
                (                   
                        EndpointPair |
                        L4EndpointPair
                )
        }


SummaryParameters =
        element summary:parameters {
                Identifier &        
                SummaryParameter+
        }
        
# XXX: Add 'schedule' parameter
SummaryParameter =    
        element nmwg:parameter { 
            (
                attribute name { "bucket_width" } &
                (
                        attribute value { xsd:float } |
                        xsd:float
                )
            ) |
            (
                attribute name { "schedule" } &
                (
                	element interval {
                                attribute type {"fixed" | "exp"} &
                                xsd:string
                        } +
                )
            )
        } 

SummaryData =
        element nmwg:data {
                Identifier &
                MetadataIdentifierRef? &
                (
                        (
                                Metadata* |
                                SummaryMetadata*
                        ) |
                        (
                                SummaryDatum* |
                                ResultDatum*
                        ) |
                        Key*
                )
        }

SummaryDatum =
        element summary:datum {
# The synchronization attribute in the precision part of StartTime
# SHOULD be set to True only if the entire session consists of packet
# measurements made with synchronized clocks.
# If is is known that any of the packet measurements were made with
# unsynchrnonized clocks, then the synchronization attribute of the
# StartTime SHOULD be set to False.
                (
                    (
                        StartTime &
                        EndTime
                    ) |
                    (
                        attribute timeType { string } &
                        attribute startTime { string } &
                        attribute endTime { string }
                    )
                ) &
                (
                    attribute sent { xsd:unsignedInt } |
                    element summary:sent { xsd:unsignedInt }
                ) &
                (
                    attribute sync { xsd:boolean } |
                    element summary:sync { xsd:boolean }
                )? &
# Units is seconds
                (
                    attribute maxError { xsd:float } |
                    element summary:maxError { xsd:float }
                ) &
                (
                    attribute duplicates { xsd:unsignedInt } |
                    element summary:duplicates { xsd:unsignedInt }
                ) &
                (
                    attribute loss { xsd:unsignedInt } |
                    element summary:loss { xsd:unsignedInt }
                ) &
# Units is seconds
                (
                    attribute min_delay { xsd:float } |
                    element summary:min_delay { xsd:float }
                )? &
# Units is seconds
                (
                    attribute med_delay { xsd:float } |
                    element summary:med_delay { xsd:float }
                )? &
# Units is seconds
# This is the Max delay for any 'received' packets.
                (
                    attribute max_delay { xsd:float } |
                    element summary:max_delay { xsd:float }
                )? &
# Units is seconds
                (
                    attribute minTTL { xsd:unsignedInt } |
                    element summary:minTTL { xsd:unsignedInt }
                )? &
# Units is seconds
                (
                    attribute maxTTL { xsd:unsignedInt } |
                    element summary:maxTTL { xsd:unsignedInt }
                )? &
# Units is seconds
# *_ipdv_jitter definitions from RFC 3393 (Section 4.5)
# Basically, consecutive packets are selected for computing ipdv.
                (
                    attribute min_ipdv_jitter { xsd:float } |
                    element summary:min_ipdv_jitter { xsd:float }
                )? &
                (
                    attribute med_ipdv_jitter { xsd:float } |
                    element summary:med_ipdv_jitter { xsd:float }
                )? &
                (
                    attribute max_ipdv_jitter { xsd:float } |
                    element summary:max_ipdv_jitter { xsd:float }
                )? &
# value_buckets is a histogram of all packet delays in
# the sample.
# bucket_width (from metadata) is used as the divisor when bucketing the
# real delays to compute the 'value'. 'count' indicates
# the number of packet delays that fell in this range.
                element summary:value_buckets {
                    element summary:value_bucket {
                        attribute value { xsd:int } &
                        attribute count { xsd:unsignedInt}
                    } +
                }? &
                element summary:TTL_buckets {
                    element summary:TTL_bucket {
                        attribute ttl { xsd:unsignedInt } &
                        attribute count { xsd:unsignedInt }
                    } +
                }? &
                element summary:reordering_buckets {
                    element summary:reordering_bucket {
                        attribute order { xsd:unsignedInt } &
                        attribute count { xsd:unsignedInt }
                    } +
                }?


 
        }
