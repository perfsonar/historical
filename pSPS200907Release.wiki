#summary perfSONAR-PS 3.1+ Release

<wiki:toc max_depth="6" />

== Introduction ==

This page outlines details regarding the perfSONAR-PS release that began June 5, 2009 and ended on July 3 2009 in the release of v3.1+ of perfSONAR-PS.

== Release Team ==

 * Jason - Lead
 * Aaron
 * Maxim
 * Jeff
 * Brian
 * Joe
 * Marcos
 * Guilherme

== Release Schedule ==

Release Start: June 5, 2009

Code Slush: June 12, 2009

Code Freeze: June 19, 2009

Package Generation Phase, Beta Tests: June 26, 2009

First Release Candidates: July 3, 2009

http://perfsonar-ps.googlecode.com/svn/wiki/pSPS200907Release/schedule.png

== Services Released and Parties Involved ==

|| *Service* || *Developer* || *Code Reviewer* || *Documentation Reviewer* ||
|| perfSONAR-BUOY (Collection) || Jeff || Jason/Aaron || Brian ||
|| perfSONAR-BUOY (Web Service) || Jason || Marcos || Joe ||
|| perfAdmin CGIs/APIs || Jason || Maxim || Guilherme ||
|| PingER GUI || Maxim || Brian || Guilherme ||
|| gLS || Jason || Aaron/Guilherme/Marcos || Maxim ||
|| Nagios Plugis || Jason || Jeff || Marcos ||

== Specifics ==

The following outline some exceptions to the overall release process.  Also see [pSPSReleaseManagement] for overall recomendations on this process for the perfSONAR-PS group.

=== Bugs Related to This Release ===

 * _*LS Registration Daemon*_
   * [http://code.google.com/p/perfsonar-ps/issues/detail?id=182 182] - Defect - High - _*Aaron*_ - need better error checking on ls_instance string in ls_registration_daemon 
 * _*pSB*_
   * [http://code.google.com/p/perfsonar-ps/issues/detail?id=106 106] - Enhancement - Medium - _*Jeff*_ - bwmaster/bwcontroller: better logging support	 
   * [http://code.google.com/p/perfsonar-ps/issues/detail?id=115 115] - Defect - High - _*Jason*_ - pSB Metadata Generation 	 	 
   * [http://code.google.com/p/perfsonar-ps/issues/detail?id=125 125] - Task - High - _*Jeff*_ - testconf.pl: Print out description of exactly what tests are configured to run by an owmesh.conf file	 
   * [http://code.google.com/p/perfsonar-ps/issues/detail?id=127 127] - Enhancement - High - _*Jeff*_ - Refactor bwmaster.pl to fetch addresses from 'conf' before forking 	 
   * [http://code.google.com/p/perfsonar-ps/issues/detail?id=130 130] - Defect - Critical - _*Jason*_ - pSB Store File generation: Star vs Mesh 	 
   * [http://code.google.com/p/perfsonar-ps/issues/detail?id=131 131] - Defect - Low - _*Jason*_ - achievable bandwidth event type is mis-spelled achieveable 
   * [http://code.google.com/p/perfsonar-ps/issues/detail?id=152 152] - Defect - High - _*Jason*_ - pSB MA gLS ERRORS 	 
   * [http://code.google.com/p/perfsonar-ps/issues/detail?id=157 157] - Enhancement - High - _*Jeff*_ - bwcollector debugging support 	 
   * [http://code.google.com/p/perfsonar-ps/issues/detail?id=174 174] - Defect - High - _*Jason*_ - windowSize not reported correctly for pSB 	 
   * [http://code.google.com/p/perfsonar-ps/issues/detail?id=183 183] - Enhancement - High - _*Jason*_ - Address/Name Normalization in pSB 	
   * [http://code.google.com/p/perfsonar-ps/issues/detail?id=185 185] - Defect - Critical - _*Jeff*_ - pS-B backend database sometimes includes 'port' in the host portion - need to normalize.
 * _*PingER*_
   * [http://code.google.com/p/perfsonar-ps/issues/detail?id=181 181] - _*Maxim*_ - ~~PingER MA server errors~~
     * <font color=green>_*Fixed - 6/8*_</font>
 * _*PingER GUI*_
   * [http://code.google.com/p/perfsonar-ps/issues/detail?id=19 19] - Enhancement - High - _*Maxim*_ - PingER GUI gLS pingable hosts 	
     * <font color=green>_*Fixed - 7/2*_</font>
   * [http://code.google.com/p/perfsonar-ps/issues/detail?id=107 107] - _*Maxim*_ - ~~PingER LandMarks GUI Displays All Pingable Hosts - Selectable by Community~~
     * <font color=green>_*Merged into 19 - 6/8*_</font>
 * _*perfAdmin*_
   * [http://code.google.com/p/perfsonar-ps/issues/detail?id=136 136] - Defect - High - _*Jason*_ - Units displayed in perfAdmin should correspond with service definition 	
     * <font color=yellow>_*In Progress - 7/2*_</font>
   * [http://code.google.com/p/perfsonar-ps/issues/detail?id=141 141] - Enhancement - High - _*Jason*_ - bandwidthGraph.cgi plots are missleading for data is missing 	 
     * <font color=yellow>_*In Progress - 7/2*_</font>
   * [http://code.google.com/p/perfsonar-ps/issues/detail?id=143 143] - Defect - High - _*Jason*_ - graphs are not coming up under IE 	 
   * [http://code.google.com/p/perfsonar-ps/issues/detail?id=144 144] - Enhancement - Medium - _*Jason*_ - disable buttons on the stats grpahs page for empty graphs 

=== Code Reviews ===

The code _review_ can be a lot more in depth than just reading in suggesting.  Most corrections can be done directly to the code base to save time in the process.  Reviewers are encouraged to run [Perltidy] and [Perlcritic] at the end of the review.  

Things to think about as you review:

 * Perldoc:
   * Is there a footer on each script/module?
     * License info
     * Contact Info
     * Related libraries
     * API use (where applicable)
   * Is there a header on each script/module?
     * Are the names and information correct?
   * Does each method have a function header
     * Does it describe inputs and outputs as well as expected behaviour
 * Library Use - Examine each external library dependency
   * Is it necessary to use the library (e.g. does the use justify including the dependency)
   * Could the library be ommited (provide suggestions how)
 * Code Structure
   * See the [CodeRules rules of the code]
 * Design decisions
   * Question why things are organized/designed they way they are in a constructive fashion.  Developers will be happy to hear the commentary
 * Function/Module Size
   * Make constructive comments regarding excessively large or small modules and functions.  Note that ware trying to make a sound object oriented piece of software.
 * Test Cases
   * Ensure test cases for unit testing are appropriate in both structure and quantity
   * Ensure test cases for test harness are appropriate in both structure and quantity

See the [pSPSReleaseManagement#Code_Review Code Review] section from the other document for more information.  The reviews should be shared with the entire group (use the mailing list).  

=== Documentation Reviews ===

Documentation review is a review of included and posted documentation for errors and omissions.  It may help to physically install the software when following installation instructions, etc.

Thinks to think about as you review:

 # In the _*doc/*_ directory:
   * _*INSTALL*_ - Complete for all types of installs (svn, tar package, RPM).  Handles prerequisite information (e.g. yum repo maintenance) 
   * _*Changes*_ - List of changes since the last release where applicable
   * _*README*_ - Configuration and test information meant to supplement _*INSTALL*_.  Should also be complete and may point to other (web) resources
   * _*LICENSE*_ - Updated for this release (e.g. copyright dates, all parties are mentioned).  
   * Others?
 # _*perldoc*_ in each module/script
   * Does each module have the necessary header/footer?  Are they correct and up to date (including copyright dates, modules used, authors.
   * Does each function of a header?  Does it describe in basic terms what the function does?  Do not worry about parameters/return values for this release.
   * Is the doc readable when using _*perldoc*_?
   * Spelling/grammar errors
 # Other documentation (e.g. _*user guides*_)
   * Updated for the most recent release?
   * Spelling/grammar error free
   * Reads well - not too technical and should be useful for the most basic user
   * Complete (e.g. no blank sections, addresses all functionality)

=== Testing ===

Developers are responsible for testing their code:

 * Designing and running unit tests
   * Address all modules
   * Address all methods
   * Test methods for multiple inputs (good and bad)
   * Generate supporting materials (databases, etc.)
   * Frequently run these tests after bugfixes and development
 * Designing and running the test harness to simulate black box activity
   * Design and provide numerous messages and expected responses
   * Frequently run these tests after bugfixes and development

== Open Tasks ==

 * Jason
   * Development (pSB WS) - <font color=yellow>_*IN PROGRESS - 6/8*_</font>
   * Development (perfAdmin) - <font color=yellow>_*IN PROGRESS - 6/8*_</font>
   * Development (gLS) - <font color=yellow>_*IN PROGRESS - 6/8*_</font>
   * Development (Nagios Plugins) - <font color=yellow>_*IN PROGRESS - 6/8*_</font>
   * Code Review (pSB Coll.) - <font color=red>_*NOT STARTED - 6/8*_</font>
 * Aaron
   * Code Review (pSB Coll.) - <font color=red>_*NOT STARTED - 6/8*_</font>
   * Code Review (gLS) - <font color=red>_*NOT STARTED - 6/8*_</font>
 * Jeff
   * Development (pSB Coll.) - <font color=yellow>_*IN PROGRESS - 6/8*_</font>
   * Code Review (Nagios Plugin) - <font color=red>_*NOT STARTED - 6/8*_</font>
 * Maxim
   * Development (PingER GUI) - <font color=yellow>_*IN PROGRESS - 6/8*_</font>
   * Code Review (perfAdmin) - <font color=red>_*NOT STARTED - 6/8*_</font>
   * Doc Review (gLS) - <font color=red>_*NOT STARTED - 6/8*_</font>
 * Joe
   * Doc Review (pSB WS) - <font color=red>_*NOT STARTED - 6/8*_</font>
 * Brian
   * Code Review (PingER GUI) - <font color=red>_*NOT STARTED - 6/8*_</font>
   * Doc Review (pSB Coll.) - <font color=red>_*NOT STARTED - 6/8*_</font>
 * Guilherme
   * Doc Review (perfAdmin) - <font color=red>_*NOT STARTED - 6/8*_</font>
   * Doc Review (PingER GUI) - <font color=red>_*NOT STARTED - 6/8*_</font>
   * Code Review (gLS) - <font color=red>_*NOT STARTED - 6/8*_</font>
 * Marcos
   * Beta IP Summarization - <font color=yellow>_*IN PROGRESS - 6/8*_</font>   
   * Doc Review (Nagios) - <font color=red>_*NOT STARTED - 6/8*_</font>
   * Code Review (pSB WS) - <font color=red>_*NOT STARTED - 6/8*_</font>
   * Code Review (gLS) - <font color=red>_*NOT STARTED - 6/8*_</font>
   
== Lessons Learned ==

TBD
      
== Last Updated ==

$Id$
