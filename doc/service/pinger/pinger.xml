<?xml version="1.0" encoding="UTF-8"?>
<!DOCTYPE article PUBLIC "-//OASIS//DTD DocBook XML V4.2//EN" "http://docbook.org/xml/4.2/docbookx.dtd">
<article>

  <articleinfo>
	
    <title>perfSONAR-PS PingER - Complete Documentation</title>

    <author>
      <firstname>Maxim</firstname>
      <surname>Grigoriev </surname>
      <affiliation>
        <address><email>maxim@fnal.gov</email></address>
      </affiliation>
    </author>
    <author>
      <firstname>Yee-Ting</firstname>
      <surname>Li</surname>
      <affiliation>
        <address><email>ytl@slac.stanford.edu</email></address>
      </affiliation>
    </author>

    <copyright>
      <year>2007</year>
      <year>2008</year>
      <holder>Internet2</holder>
    </copyright>

  </articleinfo>

  <section id="changes" xreflabel="Document Change Log">
    <title>Document Changes</title>

    <table frame="all" align="center" halign="center" width="80%"  id="table.1">
      <title>Change Log</title>
      <tgroup cols="1" align="left" colsep="1" rowsep="1">
        <colspec colnum="1" colname="c1" width="10%"/>
        <colspec colnum="2" colname="c2" width="10%"/>
        <colspec colnum="3" colname="c3" width="50%"/>
        <colspec colnum="4" colname="c4" width="30%"/>
        <thead>
          <row>
            <entry>Version</entry>
            <entry>Date</entry>
            <entry>Description</entry>
            <entry>Author(s)</entry>
          </row>
        </thead>
        <tbody>
          <row>
            <entry>1.0</entry>
            <entry>01/01/2008</entry>
            <entry>First Draft Issued</entry>
            <entry>Maxim Grigoriev</entry>
          </row>
        </tbody>
        <tbody>
          <row>
            <entry>1.1</entry>
            <entry>01/09/2008</entry>
            <entry>Conversion to DocBook, addition of configuration and instllation documentation. Addition of MP and LS interface descriptions</entry>
            <entry>Yee-Ting Li</entry>
          </row>
        </tbody>
      </tgroup>
    </table>
   
  </section>

  <section id="general-information" xreflabel="General Information">
	  <title>General Information</title>
	
		<para>
			<emphasis>Service Name:</emphasis> perfSONAR-PS-PingER-1.0	
		</para>
		<para>
			<emphasis>Service Type:</emphasis> MA and MP
		</para>
		<para>
			<emphasis>Version/release:</emphasis> 1.0
		</para>
		<para>
			<emphasis>Service Description:</emphasis> This service provides the capability to publish data from the Measurement Archive, interact with remote Lookup Service and schedule and execute   ping measurements and store measured data and metadata into the service storage SQL database. 
		</para>
		<para>
			<emphasis>Contact Person(s):</emphasis> Maxim Grigoriev, Yee-Ting Li
		</para>
		<para>
			<emphasis>Contact Information:</emphasis> maxim at fnal dot gov, ytl at slac dot stanford dot edu
		</para>	
	
  </section>

  <section id="introduction" xreflabel="Introduction">
    <title>Introduction</title>
    
    <para>
      <emphasis>perfSONAR-PS</emphasis> is an implementation of the 
      <xref linkend="perfSONAR" /> standard written in the
      <citation>Perl</citation> programming language.
      <emphasis>perfSONAR-PS</emphasis> aims for complete compatibility with
      all other implementations of the <emphasis>perfSONAR</emphasis> standard.
    </para>   
    
    <para>
	    The PingER suite utilizes the libraries and design of the perfSONAR-PS 
	    suite to provide network performance information regarding network 
	    latencies, jitter and reachability (between monitored network hosts) and
	    presents the via a <emphasis>perfSONAR</emphasis> compatible interface.
	  </para>

    <para>
      This document describes the details of the       <emphasis>perfSONAR-PS</emphasis>
      PingER service. In the following text the functionality of the PingER 
      Measurement Archive and Measurement Point will be described.
 			For detailed protocol specifications see "PingER service Protocol 
			Specification".
      In addition to outlining the installation and
      configuration steps, a detailed guide of interface and functional
      behavior is included.
      The interface specification is meant to give a <emphasis>black 
      box</emphasis> understanding of the workings of the service, while the 
      functional specification describes the inner workings of the service 
      decision making process.
    </para>
    
    <para>  
      This software offers the ability to <emphasis>collect</emphasis> and 
      <emphasis>publish</emphasis> data 
      collected via ICMP "ping" packets.  This particular release 
      focuses on data that offers certain <xref linkend="characteristic"/> of
      the network, namely network <emphasis>latency</emphasis>,
      <emphasis>jitter</emphasis>, and <emphasis>reachability</emphasis>.  
      These three metrics are collected by the PingER <emphasis>MP</emphasis> 
      using the standard "ping" program which is available on all supported
      systems.
      The results of these measurements are stored in Relational Databases 
      such as <citation>MySQL</citation>, <citation>Postgres</citation>, 
      and <citation>sqlite</citation>, 
    </para>  
    
    <para>
      The <emphasis>publishing</emphasis> of <xref linkend="data"/> is 
      accomplished by exposing the data located in <emphasis>SQL</emphasis>
      databases by describing the <xref linkend="metadata"/> (i.e. static
      information about the data such as how/where it was collected, etc.)  A
      Web Services (<command>WS</command>) interface is offered that allows
      client applications such as <citation>perfSONAR-UI</citation> to contact
      this service, query for specific resources, and finally present graphs
      of the results.
    </para>  
    
  </section>


  <section id="installation" xreflabel="Installation Procedures">
    <title>Installation Procedures</title>

    <para>
      Before installing <emphasis>PingER</emphasis> suite, be sure to check if
      the software listed in <xref linkend="prerequisites"/> is currently
      installed on the target system.  This can be done in one of two ways:
      following <xref linkend="auto_installation" /> or
      <xref linkend="manual_installation" />.  Software versions may change
      from prior releases of <emphasis>perfSONAR-PS</emphasis> without explicit
      notice.
    </para> 

    <para>
      After installing the necessary prerequisite software, the actual software
      must be installed according to <xref linkend="service_installation" />.  
      It is necessary to perform some basic configuration steps outlined in 
      <xref linkend="service_configuration" />, followed by testing the 
      configuration and installation in <xref linkend="service_testing" />.  
      Finally we can start the service with instructions in 
      <xref linkend="service_use" />.  
    </para>


    <section id="prerequisites" xreflabel="Software Prerequisites">
      <title>Software Prerequisites</title>

      <para>
        To function properly, the <emphasis>PingER</emphasis> service requires
        the use of some prerequisite software to both store and mange the
        underlying data as well as assist with service duties such as parsing
        <xref linkend="XML" /> or managing the <xref linkend="SOAP" /> over
        <xref linkend="HTTP" /> transportation.  
      </para>
        
      <para>
        The following sections will guide the user through what is required,
 				and how it may be installed as painlessly as possible.  
      </para>  

      <section id="perl_installation" xreflabel="Required Perl Modules">
        <title>Required Perl Modules</title>

        <para>
          There are several Perl modules that are required for the
          <emphasis>PingER</emphasis> to function properly.  Some of these are
          included in the base Perl installation on many machines, although it
          is important to check all to be sure upgrades are not available.  
        </para>
   
        <para>
          The following is a list of the necessary modules for the
          <emphasis>PingER</emphasis>.
        </para>

        <itemizedlist mark='opencircle'>
          <listitem>
            <para><ulink url="http://search.cpan.org/~nwclark/perl-5.8.8/lib/strict.pm">strict</ulink></para>
          </listitem>
          <listitem>
            <para><ulink url="http://search.cpan.org/~nwclark/perl-5.8.8/lib/warnings.pm">warnings</ulink></para>
          </listitem>
          <listitem>
            <para><ulink url="http://search.cpan.org/~nwclark/perl-5.8.8/lib/Exporter.pm">Exporter</ulink></para>
          </listitem>
          <listitem>
            <para><ulink url="http://search.cpan.org/~kwilliams/PathTools-3.25/Cwd.pm">Cwd</ulink></para>
          </listitem>
          <listitem>
            <para><ulink url="http://search.cpan.org/~nwclark/perl-5.8.8/ext/POSIX/POSIX.pod">POSIX</ulink></para>
          </listitem>
          <listitem>
            <para><ulink url="http://search.cpan.org/~nwclark/perl-5.8.8/ext/Fcntl/Fcntl.pm">Fcntl</ulink></para>
          </listitem>
          <listitem>
            <para><ulink url="http://search.cpan.org/~jv/Getopt-Long-2.37/lib/Getopt/Long.pm">Getopt::Long</ulink></para>
          </listitem>
          <listitem>
            <para><ulink url="http://search.cpan.org/~mschilli/Log-Log4perl-1.14/lib/Log/Log4perl.pm">Log::Log4perl</ulink></para>
          </listitem>
          <listitem>
            <para><ulink url="http://search.cpan.org/~drolsky/Params-Validate-0.89/lib/Params/Validate.pm">Params::Validate</ulink></para>
          </listitem>
          <listitem>
            <para><ulink url="http://search.cpan.org/~drolsky/Log-Dispatch-2.20/lib/Log/Dispatch.pm">Log::Dispatch</ulink></para>
          </listitem>
          <listitem>
            <para><ulink url="http://search.cpan.org/~drolsky/Log-Dispatch-2.20/lib/Log/Dispatch/Screen.pm">Log::Dispatch::Screen</ulink></para>
          </listitem>
          <listitem>
            <para><ulink url="http://search.cpan.org/~markpf/Log-Dispatch-FileRotate-1.16/FileRotate.pm">Log::Dispatch::FileRotate</ulink></para>
          </listitem>
          <listitem>
            <para><ulink url="http://search.cpan.org/~gbarr/IO-1.2301/IO/File.pm">IO::File</ulink></para>
          </listitem>
          <listitem>
            <para><ulink url="http://search.cpan.org/~drolsky/Time-Local-1.18/lib/Time/Local.pm">Time::Local</ulink></para>
          </listitem>
          <listitem>
            <para><ulink url="http://search.cpan.org/~gaas/libwww-perl-5.808/lib/HTTP/Daemon.pm">HTTP::Daemon</ulink></para>
          </listitem>
          <listitem>
            <para><ulink url="http://search.cpan.org/~gaas/libwww-perl-5.808/lib/LWP/UserAgent.pm">LWP::UserAgent</ulink></para>
          </listitem>
          <listitem>
            <para><ulink url="http://search.cpan.org/~msergeant/XML-XPath-1.13/XPath.pm">XML::XPath</ulink></para>
          </listitem>
          <listitem>
            <para><ulink url="http://search.cpan.org/~pajas/XML-LibXML-1.65/LibXML.pod">XML::LibXML</ulink></para>
          </listitem>
          <listitem>
            <para><ulink url="http://search.cpan.org/~tjenness/File-Temp-0.19/Temp.pm">File::Temp</ulink></para>
          </listitem>
          <listitem>
            <para><ulink url="http://search.cpan.org/~nwclark/perl-5.8.8/lib/File/Basename.pm">File::Basename</ulink></para>
          </listitem>
          <listitem>
            <para><ulink url="http://search.cpan.org/~jhi/Time-HiRes-1.9708/HiRes.pm">Time::HiRes</ulink></para>
          </listitem>
          <listitem>
            <para>Module::Load</para>
          </listitem>
          <listitem>
            <para>Pod::Coverage</para>
          </listitem>
          <listitem>
            <para>Pod::Escapes</para>
          </listitem>
          <listitem>
            <para>Clone::PP</para>
          </listitem>
          <listitem>
            <para>DateTime::Locale</para>
          </listitem>
          <listitem>
            <para>Params::Validate</para>
          </listitem>
          <listitem>
            <para>Task::Weaken</para>
          </listitem>
          <listitem>
            <para>Rose::Object</para>
          </listitem>
          <listitem>
            <para>Sub::Uplevel</para>
          </listitem>
          <listitem>
            <para>Bit::Vector</para>
          </listitem>
          <listitem>
            <para>Params::Util</para>
          </listitem>
          <listitem>
            <para>Sub::Install</para>
          </listitem>
          <listitem>
            <para>Time::Clock</para>
          </listitem>
          <listitem>
            <para>YAML:Syck</para>
          </listitem>
          <listitem>
            <para>Clone</para>
          </listitem>
          <listitem>
            <para>DateTime::Format::Strptime</para>
          </listitem>
          <listitem>
            <para>Data::OptList</para>
          </listitem>
          <listitem>
            <para>Sub:Exporter</para>
          </listitem>
          <listitem>
            <para>SQL::ReservedWords</para>
          </listitem>
          <listitem>
            <para>Rose::DateTime</para>
          </listitem>
          <listitem>
            <para>List::MoreUtils</para>
          </listitem>
          <listitem>
            <para>DateTime</para>
          </listitem>
          <listitem>
            <para>DateTime::Format::Pg</para>
          </listitem>
          <listitem>
            <para>DBI</para>
          </listitem>
          <listitem>
            <para>DBD::SQLite</para>
          </listitem>
          <listitem>
            <para>DBD::mysql</para>
          </listitem>
          <listitem>
            <para>Rose::DB</para>
          </listitem>
          <listitem>
            <para>Rose::DB::Object</para>
          </listitem>
          <listitem>
            <para>version</para>
          </listitem>
          <listitem>
            <para>Carp:Assert</para>
          </listitem>
          <listitem>
            <para>Class::Fields</para>
          </listitem>
          <listitem>
            <para>XML::LibXML</para>
          </listitem>
          <listitem>
            <para>XML::SAX</para>
          </listitem>
          <listitem>
            <para>Clone::Fast</para>
          </listitem>
        </itemizedlist>
        
        <para>
          It is recommended that users utilize the installation method
 					described  in <xref linkend="auto_installation" />, failing back to 
          <xref linkend="manual_installation" /> if problems occur.  
        </para>

      </section>

      <section id="auto_installation" xreflabel="Automatic Installation">
        <title>Automatic Installation</title>

        <para>
          An automatic installation script has been developed that will take
          care of obtaining libraries and software needed for this application
          as described in <xref linkend="perl_installation" />.  The script is named 
          <emphasis>configure.PL</emphasis> and can be executed in the
          following manner.
        </para> 
        
        <programlisting>    
          sudo perl configure.PL
        </programlisting>   
        
        <para> 
          The script will check for required perl libraries and use
          <emphasis>CPAN</emphasis> to install any that are missing or old.
          The script will report any errors that <emphasis>CPAN</emphasis>
          encountered due to missing components.  Please see
          <xref linkend="perl_installation_issues"/> if the process is not
          successful.  
        </para>   

      </section>

      <section id="manual_installation" xreflabel="Manual Installation">
        <title>Manual Installation</title>

        <para>
          The most straightforward way to install Perl modules is through the
          <emphasis>CPAN</emphasis> administrative interface available on most
          machines:
        </para>
        <programlisting> 
          sudo perl -MCPAN -e shell
        </programlisting> 
        <para>
          If this is your first time using <emphasis>CPAN</emphasis>, there
          will be several questions to answer as you prepare the interface.
          You will eventually be presented with a shell prompt.
        </para>
        <programlisting> 
          cpan[1]>
        </programlisting> 
        <para>
          Modules may be installed by typing:
        </para>
        <programlisting> 
          cpan[1]>install MODULE::NAME
        </programlisting> 
        <para>
          Instructions may appear as the installation proceeds, errors may also 
          occur that will need to be handled.  If a module is installed, a
          message may appear:
        </para>
        <programlisting> 
          cpan[1]> install MODULE::NAME
          MODULE::NAME is up to date (x.yz).   
        </programlisting> 

      </section>

      <section id="installation_issues" xreflabel="Known Installation Problems">
        <title>Known Installation Problems</title>

        <para>
          Issues regarding the installation of 
          and Perl modules are well documented for the
          <emphasis>perfSONAR-PS</emphasis> services. We present some of these
          issues here as a brief introduction to items that the
          installer/developer should be aware of.  
        </para>

        <section id="perl_installation_issues" xreflabel="Perl Modules">
          <title>Perl Modules</title>

          <para>
            Some modules require software libraries that may not be installed 
            on most systems.  Although it is normally the job of the module 
            designer to take care of these situations, this is not always the 
            case.  Specifically the XML modules
            (<emphasis>XML::XPath</emphasis>, <emphasis>XML::LibXML</emphasis>)
            require the the XML::Parser module that depends on several
            internal libraries.
          </para>
          <para>      
            If you system is equipped with a software management system (such as 
            <xref linkend="apt"/>, <xref linkend="yum"/>, or 
            <xref linkend="up2date"/>) try and locate the 
            <emphasis>xml-parser-perl</emphasis> package via the search
            interface.  This is the easiest way to avoid trouble with
            <emphasis>CPAN</emphasis>.  Additionally, ensure that
            <emphasis>libxml2-dev</emphasis>, the <emphasis>LibXML</emphasis>
            version 2 development libraries, are also available.
          </para> 

        </section>

      </section>


      <section id="post_installation" xreflabel="Post Installation Tasks">
        <title>Post Installation Tasks</title>
      </section>

    </section>

    <section id="service_installation" xreflabel="Service Installation">
      <title>Service Installation</title>
      
      <para>
        After installing the prerequisite software, the remaining steps to
        getting the <emphasis>PingER</emphasis> working are few.  The software
        directory should be placed in a common location such as
        <command>/usr/local</command> or <command>/opt</command>.  This is not
        a requirement.  Note that other paths (particularly in configuration 
        files) may need to be changed to reflect this move.
      </para>
      <para>
        There are three major configuration files that may be adjusted,
        although the software is configured to run
        <emphasis>out of the box</emphasis>.  The configurations files can be
        adjusted to personalize settings, and to add the metrics you are
        collecting of course.
      </para>
      
    </section>




    <section id="service_configuration" xreflabel="Basic Service Configuration">
      <title>Basic Service Configuration</title>
      
      <para>
        There are three major configuration files for the
        <emphasis>PingER</emphasis> service.  Each file is configured to run
        <emphasis>out of the box</emphasis>, so modifying these files is only
        necessary to <emphasis>customize</emphasis> the behavior of this
        service (or make it available for non-<emphasis>localhost</emphasis>
        viewing).  
      </para>

      <para>
        A more detailed explanation of the various configuration options and
        the reasoning behind each is available in 
        <xref linkend="configuration" />.  
      </para>

      <section id="logging_configuration" xreflabel="Logging Configuration">
        <title>Logging Configuration via logger.conf</title>
        
          <para>
            This file contains information regarding logging in the
            <emphasis>perfSONAR-PS</emphasis> architecture.  Under normal
            circumstances the file will not need to be changed.  The only real
            choice worth noting during testing is choosing between the
            following three output methods.
          </para>

          <itemizedlist mark='opencircle'>
            <listitem>
              <para><command>log4perl.appender.A1=Log::Dispatch::Screen</command></para>
            </listitem>
            <listitem>
              <para><command>log4perl.appender.A1=Log::Dispatch::Syslog</command></para>
            </listitem>
            <listitem>
              <para><command>log4perl.appender.A1=Log::Dispatch::FileRotate</command></para>
            </listitem>
          </itemizedlist>

          <para>
            The <emphasis>Screen</emphasis> method sends log files to the 
            output screen, The <emphasis>Syslog</emphasis> method will append 
            the log messages directly to the Syslog system, and the 
            <emphasis>FileRotate</emphasis> method appends log messages to a 
            specified log file (specified via 
            <emphasis>log4perl.appender.A1.filename</emphasis>) and will 
            automatically rotate when they get too large (specified via 
            <emphasis>log4perl.appender.A1.size</emphasis>).
          </para>
          
          <para>
            The default setting is to log to the screen.        
          </para>
      </section>

      <section id="service_information_configuration" xreflabel="Service Configuration">
        <title>Service Configuration via pinger.conf</title>
        
          <para>
            This file contains detailed information and settings that help
            operate the <emphasis>PingER</emphasis> software suite.
  					A major listing of all
            directives and their full meaning is available in
            <xref linkend="configuration_service" />.
          </para>

					<para>
						The PingER suite allows the MP and MA to run on separate physical
						machines with the common factor between services being the 
						definition of the SQL backend to be used.
						The exclusion of the MA or MP service endpoint from this configuration
						files will disable the particular service and therefore in 
						combination with the above inclusion/exclusion from the 
						configuration file and setting up common SQL backends will allow
						PingER MP and PingER MA's to run on separate machines.
					</para>

					<para>
						<emphasis>pinger.conf</emphasis> acts as a generic service
						configuration for both the MP and MA PingER services. The 
						exclusion of either of these descriptions from the configuration 
						file will result in the non-running of the particular PingER
						service element.
					</para>


					<para>need some input/reference to aaron's daemon code for this</para>

          <itemizedlist mark='opencircle'>
            <listitem>
              <para>
                <command>METADATA_DB_FILE</command> - Location of the
                <emphasis>store.xml</emphasis> file
              </para>
            </listitem>
            <listitem>
              <para>
                <command>RRDTOOL</command> - Path to 
                <emphasis>RRDtool</emphasis>.
              </para>
            </listitem>
            <listitem>
              <para>
                <command>PORT</command> - Listen port for the application
              </para>
            </listitem>
            <listitem>
              <para>
                <command>ENDPOINT</command>This is used in conjunction with the 
                port and hostname:
                <emphasis>http://HOST:PORT/end/Point/String</emphasis>
              </para>
            </listitem>
          </itemizedlist>

          <para>
            A helper utility named <emphasis>configure.pl</emphasis> (located 
            in <command>util/</command>) can help create this file by 
            providing questions regarding each value.        
          </para>
           
      </section>
      
      <section id="mp_configuration" xreflabel="MP Configuration">
        <title>MP Configuration</title>

          <para> 
						The MP performs the task of collecting measurement information
						and inserting the relevant network performance characteristics
						into the backend SQL database.
					</para>
					
					<para>
						The MP configuration file <emphasis>pinger-landmarks.xml</emphasis> defines
						a list of end hosts that should be 'ping'd' from the service and
						hence also network performance measurements that should be 
						performed.
						As such, this file contains the descriptions of the end sites.
					</para>
					
					<para>
						The format of the <emphasis>pinger-landmarks.xml</emphasis> file is 
						compatible with the <emphasis>perfSONAR-PS topology service</emphasis> which allows geographical locations of the sites in queston.
					</para>
					
          <para>
            Further motivation as to how this file is organized, constructed, 
            and the reasons why it exists are available in 
            <xref linkend="configuration" />.
          </para>
          
      </section>

    </section>
    


    <section id="service_testing" xreflabel="Post Installation Tests">
      <title>Post Installation Tests</title>

      <para>
        The entire PingER suite can be run from a command line given the relevant configuration settings in <emphasis>pinger.conf</emphasis>.
  			This assumes that you are running both the MP and MA from the same machine and that the SQL database is local to both services.
     </para>

      <para>
        In the first terminal, enter the directory where the software is 
        installed, run the following command.
      </para>
      
      <programlisting>
        ./pinger.pl --verbose
      </programlisting>
      
      <para>    
        You will see output similar to the following example.
      </para>

      <programlisting>
        <![CDATA[

				TBA

        ]]>
      </programlisting> 

      <para>
        Assuming default configurations, this starts both the MP and MA PingER 	
				services. They will both also register data with an a predefined
				<command>LS</command> service. The MP will initiate its' internal 
				schedule of tests (as defined in <emphasis>pinger-landmarks.xml</emphasis>)
				and the MA will start listening for requests for PingER performance 
				data.
			</para>
			
			<para>
				The <command>LS</command> registration functionality is
        disabled by default.
      </para>
    
      <para>
        In the second terminal, enter the directory where the software is 
        installed, change into the <emphasis>client</emphasis> directory, and 
        run this command as follows.
      </para>
      
      <programlisting>
      ./client.pl --server=localhost --port=8081 --endpoint=perfSONAR_PS/services/PingERMA 
        requests/MetadataKeyRequest.xml
      </programlisting>
      
      <para>
        This will tell the client to contact the <command>MA</command> which is running on 
			</para>

			<para>
     		<emphasis>http://localhost:8081/perfSONAR_PS/services/snmpMA</emphasis>.
      </para>
      
      <para>
        And will send a simple <emphasis>MetaDataKeyRequest</emphasis> message (to see if the 
        server is active).  The client will see this output if everything is 
        running smoothly.
      </para>

      <programlisting>
        <![CDATA[

				TBA
				
        ]]>
      </programlisting> 

      <para>
        If you are not seeing a similar message, you may see something such as
        this.
      </para>

      <programlisting>
        <![CDATA[
      2007/10/31 13:32:29 (32494) DEBUG> Transport.pm:145 perfSONAR_PS::Transport::getHttpURI - 
        Created URI: http://localhost:8081//perfSONAR_PS/services/snmpMA
      2007/10/31 13:32:29 (32494) DEBUG> Transport.pm:346 perfSONAR_PS::Transport::sendReceive - 
        Sending information to "http://localhost:8081//perfSONAR_PS/services/snmpMA".
      2007/10/31 13:32:29 (32494) DEBUG> Transport.pm:356 perfSONAR_PS::Transport::sendReceive - 
        Send to "http://localhost:8081//perfSONAR_PS/services/snmpMA" failed.
      Empty String at ./client.pl line 106
        ]]>
      </programlisting> 

      <para>
        This message indicates that the server is not properly listening on 
				the port you are contacting, perhaps it is listening on another, the 	
				port is firewalled, or it may not be started at all.  
				Please check the above steps, and try again.
      </para>
      
      <para>
        In the first terminal, this information will appear when the call 	
				comes in.
      </para>

      <programlisting>
        <![CDATA[

				TBA 
				
        ]]>
      </programlisting> 

      <para>
        The other messages in the <emphasis>client/requests</emphasis> may 
				also be tried, with similar results.
      </para>
      
    </section>
    


    <section id="service_use" xreflabel="Service Use">
      <title>Service Use</title>

      <para>
        The software can be run as the following command.
      </para>
      
      <programlisting>
        ./pinger.pl
      </programlisting>

      <para>
        This will background the process automatically.  Be sure to adjust 
				your logging settings in <emphasis>logger.conf</emphasis>.
      </para>
      
    </section>
      
  </section>

  <section id="configuration" xreflabel="Metadata and System Configuration">
    <title>Metadata and System Configuration</title>
    
		<para>
			--- This shoudl be the same as that for the general new daemon architecture documentation.
		</para>

    <para>
      In <xref linkend="service_configuration" /> we briefly introduced
      some of the configuration that is necessary for the
      <emphasis>PingER</emphasis> suite in the context of getting the 
			deployment to work smoothly.  We will build upon the previous 
			explanations in this
      section with a deeper description of the three configuration files, as
      well as some theory regarding the design and layout of these files.
    </para>      

    <section id="configuration_logging" xreflabel="Logging Configuration">
      <title>Detailed Logging Configuration</title>
        
      <para>
        The logging facility used in this software is 
        <citation>log4perl</citation>, a derivative of the popular
        <emphasis>log4j</emphasis> logging package used in Java.  Log4perl
        offers the same ease of use as <emphasis>log4j</emphasis> does by
        allowing the user to control the <emphasis>level</emphasis>
        of logging used, thus increase or decreasing the amount of reported 
        information.  The ability to log is delivered through the use of a 
        small log object, and single method calls based on level to output
        information.
      </para>  
 
      <para>
        The logging is controlled via a very small configuration file, 
        included in this package.  Most interesting options are included
        in this file already, and under normal circumstances it should
        not be edited.  The following brief overview describes the
        various directives of this file and how they may be twiddled to
        better suit the interested user.  Those interested in adding
        options not included with the software may do so, but at their
        own risk.
      </para>
      
      <itemizedlist mark='opencircle'>
        <listitem>
          <para>
            <command>log4perl.logger.perfSONAR_PS=DEBUG, A1</command> -
            Establishes the <emphasis>top</emphasis> of the hierarchy for the
            logging object (perfSONAR_PS), sets the default log level
            (<emphasis>DEBUG</emphasis> in this case, you are free to choose
            <emphasis>TRACE</emphasis>, <emphasis>DEBUG</emphasis>, 
            <emphasis>INFO</emphasis>, <emphasis>WARN</emphasis>, 
            <emphasis>ERROR</emphasis>, or <emphasis>FATAL</emphasis>), and
            finally gives the object a <emphasis>localname</emphasis> (A1 in
            this case).  The local name will be used to set other options on
            this new object we have created. 
          </para>
        </listitem>          
        <listitem>
          <para>
            <command>log4perl.appender.A1=DISPATCHER</command> - Pick one of
            several dispatching entities to record the log messages that are
            thrown.  The common choices are as follows.
          </para>
          <itemizedlist mark='opencircle'>
            <listitem>
              <para>
                <command>log4perl.appender.A1=Log::Dispatch::Screen</command> -
                Output log messages directly to the screen.</para>
            </listitem>
            <listitem>
              <para>
                <command>log4perl.appender.A1=Log::Dispatch::Syslog</command> -
                Output log messages to the syslog facility.</para>
            </listitem>
            <listitem>
              <para>
                <command>log4perl.appender.A1=Log::Dispatch::FileRotate</command> -
                Output log messages to the log file specified by 
                <emphasis>log4perl.appender.A1.filename</emphasis>.  The log
                file (<emphasis>log4perl.appender.A1.filename=log/perfSONAR.log</emphasis>) 
                will then be <emphasis>rotated</emphasis> according to
                size (<emphasis>log4perl.appender.A1.max</emphasis>) and 
                number (<emphasis>log4perl.appender.A1.size</emphasis>).  
              </para>
            </listitem>
          </itemizedlist>
        </listitem>          
        <listitem>
          <para>
            <command>log4perl.appender.A1.filename=log/perfSONAR.log</command> -
            specify the location of a log file, can be absolute (i.e. 
            <emphasis>/path/to/file</emphasis>) or relative (i.e. 
            <emphasis>./path/to/file</emphasis>).  Be sure the user running the
            service has permission to write the log file.  Note that this
            option is really only valid when used with the 
            <emphasis>log4perl.appender.A1=Log::Dispatch::FileRotate</emphasis> 
            option.
          </para>
        </listitem>    
        <listitem>
          <para>
            <command>log4perl.appender.A1.max=5</command> - Signifies the
            <emphasis>number</emphasis> of old log files to keep around when
            rotating logs.  Note that this option is really only valid when
            used with the <emphasis>log4perl.appender.A1=Log::Dispatch::FileRotate</emphasis> 
            option.
          </para>
        </listitem>    
        <listitem>
          <para>
            <command>log4perl.appender.A1.size=16777216</command> - Signifies
            the <emphasis>size</emphasis> a log file can attain before being
            rotated out.  Note that this option is really only valid when used
            with the 
            <emphasis>log4perl.appender.A1=Log::Dispatch::FileRotate</emphasis> 
            option.
          </para>
        </listitem>    
        <listitem>
          <para>
            <command>log4perl.appender.A1.mode=append</command> - Sets the mode
            to append, this should not be altered.
          </para>
        </listitem>    
        <listitem>
          <para>
            <command>log4perl.appender.A1.layout=Log::Log4perl::Layout::PatternLayout</command> - 
            Uses a standard logging pattern when recording info.  We will alter
            this with
            <emphasis>log4perl.appender.A1.layout.ConversionPattern</emphasis>.
          </para>
        </listitem>              
        <listitem>
          <para>
            <command>log4perl.appender.A1.layout.ConversionPattern=%d (%P) %p&gt; %F{1}:%L %M - %m%n</command> - 
            Sets the logging output to be the date and time, the PID, the
            logging mode, the module name, the line number, the module object
            hierarchy, the function, and finally the message to be printed.  
          </para>
        </listitem>
      </itemizedlist>

    </section>

    <section id="configuration_service" xreflabel="Service Configuration">
      <title>Detailed Service Configuration</title>

      <para>
        The <emphasis>pinger.conf</emphasis> file describes configurable options
        about the service that can be specified by the user.  Items that 
        deal with important system information (i.e.
        <command>METADATA_DB_FILE</command>), performance(i.e.
        <command>MAX_WORKER_PROCESSES</command>), and style 
        (i.e. <command>SERVICE_NAME</command>) are included in this file.  The
        following listing describes the various options that can be adjusted
        in detail.  
      </para>

      <itemizedlist mark='opencircle'>
        <listitem>
          <para>
            <command>METADATA_DB_TYPE</command> - <emphasis>Type</emphasis>
            of the metadata database, this should be <emphasis>file</emphasis>
            (and only file) for this particular service.
          </para>
        </listitem>
        <listitem>
          <para>
            <command>METADATA_DB_NAME</command> - Not to be used in this
            service.
          </para>
        </listitem>
        <listitem>
          <para>
            <command>METADATA_DB_FILE</command> - Location of the
            <emphasis>store.xml</emphasis> file, 
            the location of all metadata and key descriptions.
          </para>
        </listitem>
        <listitem>
          <para>
            <command>RRDTOOL</command> - Path to the <emphasis>BINARY</emphasis>
            for <emphasis>RRDtool</emphasis>.
          </para>
        </listitem>
        <listitem>
          <para>
            <command>PORT</command> - Listen port for the application.
            This should be something that can be accessed from the outside
            world (not blocked by firewall rules, etc.).
          </para>
        </listitem>
        <listitem>
          <para>
            <command>ENDPOINT</command> - An <emphasis>endPoint</emphasis> is a
            contact string that a service is listening on.  This is used in
            conjunction with the port and hostname:
            <emphasis>http://HOST:PORT/end/Point/String</emphasis>
          </para>
        </listitem>
        <listitem>
          <para>
            <command>DEFAULT_RESOLUTION</command> - This is a value that
            pertains to the <emphasis>resolution</emphasis> used in the
            <emphasis>RRA</emphasis>s in an <emphasis>RRD</emphasis>.  It can
            be left blank if unsure.
          </para>
        </listitem>
        <listitem>
          <para>
            <command>LS_REGISTRATION_INTERVAL</command>  - The interval of time
            (in seconds) that this service will contact the
            <emphasis>LS_INSTANCE</emphasis> to register itself.  This value
            can be <emphasis>0</emphasis> if you do not want to register with
            an <command>LS</command>.
          </para>
        </listitem>
        <listitem>
          <para>
            <command>LS_INSTANCE</command> - The <command>LS</command> that
            will be contacted to register this service.
          </para>
        </listitem>
        <listitem>
          <para>
            <command>SERVICE_NAME</command> - String describing the
            <emphasis>name</emphasis> of this <command>MA</command>.
          </para>
        </listitem>
        <listitem>
          <para>
            <command>SERVICE_ACCESSPOINT</command> - String describing the 
            <emphasis>accessPoint</emphasis> of this <command>MA</command>.
            This string is how the service can be reached:
            <emphasis>http://HOST:PORT/end/Point/String</emphasis>
          </para>
        </listitem>
        <listitem>
          <para>
            <command>SERVICE_TYPE</command> - String describing the
            <emphasis>type</emphasis> of this <command>MA</command>, it can be
            just <emphasis>MA</emphasis> or <emphasis>SNMP MA</emphasis>, etc.
          </para>
        </listitem>
        <listitem>
          <para>
            <command>SERVICE_DESCRIPTION</command> - String describing this
            <command>MA</command>, it can include location info, etc.
          </para>
        </listitem>
        <listitem>
          <para>
            <command>MAX_WORKER_PROCESSES</command> - Maximum number of child
            processes that can be spawned at a given time.
          </para>
        </listitem>
        <listitem>
          <para>
            <command>MAX_WORKER_LIFETIME</command> - Maximum lifetime a child
            has to do work (eliminates hung children)
          </para>
        </listitem>
      </itemizedlist>

      <para>
        Note that for the service to be useful, it must be configured
        correctly, and sanely.  Items that may seem simple (such as the
        <command>SERVICE_</command> based directives) will become propagated
        through the system on registration to information services.  Please
        take time to specify the information to make your service function
        correctly and be useful to others.  
      </para>
 
    </section>
      

    <section id="configuration_mp" xreflabel="MP Configuration">
      <title>Detailed MP Configuration</title>

      <para>
        The configuration of hosts to 'ping' is defined in the <command>mp_confugration</command> defined in the <emphasis>pinger.conf</emphasis> configuration file.
				The default value of the MP configuration file is <emphasis>pinger-landmarks.xml</emphasis>.
			</para>
			<para>
				<emphasis>pinger-landmarks.xml</emphasis> is responsible for
        describing the list of end hosts to perform network measurements to,
				as well as providing some basic topology information regarding the 
				contact for each remote site and the geographical location of those
				remote hosts.
      </para>

      <para>
				The format of <emphasis>pinger-landmarks.xml</emphasis> is such that
				is it compatible with the <emphasis>perfSONAR-PS topology service</emphasis> and the configuration file can be directly used by the topology service to facilitate discovery and mapping of PingER landmarks.
      </para>


      <section id="configuration_mp_structure" xreflabel="MP Structure">
        <title>PingER MP Configuration Structure</title>

        <para>
          The following description represents a <emphasis>complete</emphasis>
          markup of the possible elements that may be used in describing an
          PingER landmark host in the <emphasis>PingER MP</emphasis> service.  
					The XML is
          also completely annotated with values, namespaces, and related
          prefixes.  We will examine each of these items in turn.
        </para>

        <programlisting>
          <![CDATA[
					<pingertopo:topology xmlns:pingertopo="http://namespaces.slac.stanford.edu/schema/pinger/20071120"
					xmlns:nmtl2="http://ogf.org/schema/network/topology/l2/20070707/" xmlns:nmtl3="http://ogf.org/schema/network/topology/l3/20070707/"
					xmlns:nmtl4="http://ogf.org/schema/network/topology/l4/20070707/" xmlns:nmtb="http://ogf.org/schema/network/topology/base/20070707/">
					  <nmtb:domain id="urn:ogf:network:domain=slac.stanford.edu">
					    <nmtb:node id="urn:ogf:network:domain=slac.stanford.edu:node=pinger">
					      <nmtb:name type="string">pinger</nmtb:name>
					      <nmtb:hostName>pinger.slac.stanford.edu</nmtb:hostName>
					      <nmtb:description></nmtb:description>
					      <pingertopo:test>
					        <pingertopo:packetSize>1000</pingertopo:packetSize>
					        <pingertopo:count>10</pingertopo:count>
					        <pingertopo:interval>1</pingertopo:interval>
					        <pingertopo:ttl>32</pingertopo:ttl>
					        <pingertopo:period>60</pingertopo:period>
					        <pingertopo:offset>0</pingertopo:offset>
					      </pingertopo:test>
					      <nmtl3:port id="urn:ogf:network:domain=slac.stanford.edu:node=pinger:port=134.79.18.163">
					        <nmtl3:ipAddress type="IPv4">134.79.240.30</nmtl3:ipAddress>
					      </nmtl3:port>
					    </nmtb:node>
					  </nmtb:domain>
					</pingertopo:topology>
          ]]>
        </programlisting>
   
        <section id="configuration_mp_domain" xreflabel="Domain">
          <title>Domain</title>

          <programlisting>
            <![CDATA[
							<nmtb:domain id="STRING">
								<nmtb:node id="STRING"/>
							</nmtb:domain>
            ]]>
          </programlisting>

          <itemizedlist mark='opencircle'>
            <listitem>
              <para><command>localname</command> - domain</para>
            </listitem>
            <listitem>
              <para><command>namespace</command> - http://ogf.org/schema/network/topology/base/20070707/</para>
            </listitem>
            <listitem>
              <para><command>attributes</command> - id</para>
            </listitem>
            <listitem>
              <para><command>nested elements</command> - node</para>
            </listitem>
            <listitem>
              <para><command>required</command> - yes</para>
            </listitem>
          </itemizedlist>
          
          <para>
						
						The domain element encloses all <emphasis>static</emphasis>
						descriptors for a domain to be measured. As such, it contains a
						list of <emphasis>node</emphasis> descriptors which define the 
						nodes within the domain to be measured.
					  The namespace of this object
            is always the same and the object <command>is</command> required.
          </para>
          
          <para>
            There is only one required element that must be enclosed in a 
            <command>domain</command> description as well as one attribute.  
						The <xref linkend="configuration_mp_node" /> element is required 
						for this element. 
						The <emphasis>id</emphasis> element is required and should contain
						a unique identifier for the domain.
          </para>

        </section>

        <section id="configuration_mp_node" xreflabel="MP Node">
          <title>Node</title>
                 
          <programlisting>
            <![CDATA[
				    <nmtb:node id="STRING">
				      <nmtb:name type="string">STRING</nmtb:name>
				      <nmtb:hostName>STRING</nmtb:hostName>
				      <nmtb:description>STRING</nmtb:description>
				      <pingertopo:test/>
				      <nmtl3:port/>
				    </nmtb:node>
						]]>
          </programlisting>                 
                    
          <itemizedlist mark='opencircle'>
            <listitem>
              <para><command>localname</command> - node</para>
            </listitem>
            <listitem>
            	<para><command>>namespace</command> - http://ogf.org/schema/network/topology/base/20070707/"></para>
            </listitem>
            <listitem>
              <para><command>attributes</command> - id</para>
            </listitem>
            <listitem>
              <para><command>nested elements</command> - name, hostName, description, test, port</para>
            </listitem>
            <listitem>
              <para><command>required</command> - yes</para>
            </listitem>
          </itemizedlist>
          
          <para>
            The <command>node</command> element encloses the description of
            the entity being measured.  For the <emphasis>PingER MP</emphasis> 
            the <command>node</command> MUST <command>always</command>
            contain a hostName and tests element.
						The id attribute is also required and serves as a unique identification of the node for cross service lookup.
						The other elements allow further administrative descriptions of
						node and are not directly used by the PingER MP service.
          </para>
          
					<para>
						The inclusion of the <emphasis>port</emphasis> element will allow
						the MP service to use the defined IP address rather than do a 
						dynamic host lookup of the host.
						This is particular useful in situations where the DNS reliability 
						of end sites are somewhat questionable or unreliable.
					</para>
		
        </section>
        
        <section id="configuration_mp_name" xreflabel="MP Name">
          <title>name</title>
          <programlisting>
            <![CDATA[
          	<nmtb:n ame>STRING</nmtb:name>
            ]]>
          </programlisting>          
          
          <itemizedlist mark='opencircle'>
            <listitem>
              <para><command>localname</command> - aame</para>
            </listitem>
            <listitem>
              <para><command>namespace</command> - http://ogf.org/schema/network/topology/base/20070707/</para>
            </listitem>
            <listitem>
              <para><command>attributes</command> - none</para>
            </listitem>
            <listitem>
              <para><command>nested elements</command> - text</para>
            </listitem>
            <listitem>
              <para><command>required</command> - flexible</para>
            </listitem>
          </itemizedlist>
          
          <para>
            The <command>name</command> element describes the unqualified
            <emphasis>name</emphasis> of the node. This element can only be 
						from the <emphasis>nmtb</emphasis> namespace, and should not have 
						any attributes or elements.  It must contain text that describes
						the host name.
          </para>
     
        </section>
        
        <section id="configuration_mp_hostName" xreflabel="Parameters">
          <title>hostName</title>
          
          <programlisting>
            <![CDATA[
			      <nmtb:hostName>STRING</nmtb:hostName>
            ]]>
          </programlisting>          
          
          <itemizedlist mark='opencircle'>
            <listitem>
              <para><command>localname</command> - hostName</para>
            </listitem>
            <listitem>
              <para><command>namespace</command> - http://ogf.org/schema/network/topology/base/20070707/</para>
       			</listitem>
            <listitem>
              <para><command>attributes</command> - none</para>
            </listitem>
            <listitem>
              <para><command>nested elements</command> - text</para>
            </listitem>
            <listitem>
              <para><command>required</command> - flexible</para>
            </listitem>
          </itemizedlist>
          
          <para>
            The <command>hostName</command> element should contain a valid
						fully qualified host name for the host. It is important that the 
						text entry within this element should be resolvable by the 
						registered DNS server for the MP host as it will be used to 
						perform ping measurements.
          </para>
              
        </section>

        <section id="configuration_mp_description" xreflabel="MP Description">
          <title>Description</title>
          
          <programlisting>
            <![CDATA[
      			<nmtb:description>STRING</nmtb:description>
            ]]>
          </programlisting>          
          
          <itemizedlist mark='opencircle'>
            <listitem>
              <para><command>localname</command> - description</para>
            </listitem>
            <listitem>
              <para><command>namespace</command> - http://ogf.org/schema/network/topology/base/20070707/</para>
            </listitem>
            <listitem>
              <para><command>attributes</command> - none</para>
            </listitem>
            <listitem>
              <para><command>nested elements</command> - text</para>
            </listitem>
            <listitem>
              <para><command>required</command> - flexible</para>
            </listitem>
          </itemizedlist>
          
          <para>
            The <command>description</command> element serves as a general
						human readable description of the node.
          </para>
                    
        </section>
 
        <section id="configuration_mp_test" xreflabel="MP Test">
	        <title>Test</title>
          
          <programlisting>
            <![CDATA[
			      <pingertopo:test>
			        <pingertopo:packetSize/>
			        <pingertopo:count/>
			        <pingertopo:interval/>
			        <pingertopo:ttl/>
			        <pingertopo:period/>
			        <pingertopo:offset/>
			      </pingertopo:test>            ]]>
          </programlisting>          
          
          <itemizedlist mark='opencircle'>
            <listitem>
              <para><command>localname</command> - test</para>
            </listitem>
            <listitem>
              <para><command>namespace</command> - http://namespaces.slac.stanford.edu/schema/pinger/20071120/</para>
            </listitem>
            <listitem>
              <para><command>attributes</command> - none</para>
            </listitem>
            <listitem>
              <para><command>nested elements</command> - packetSize, count, interval, ttl, period, offset</para>
            </listitem>
            <listitem>
              <para><command>required</command> - flexible</para>
            </listitem>
          </itemizedlist>

          <para>
            The <command>test</command> element serves as a definition for a measurement to be taking by the MP for the parent <command>node</command>. As such, the nested content describes parameters and test scheduling information pertinent to the running of ping measurements.
          </para>

					
	        <section id="configuration_mp_test_packetsize" xreflabel="PacketSize">
	          <title>PacketSize</title>
          
	          <programlisting>
	            <![CDATA[
			        <pingertopo:packetSize>STRING</pingertopo:packetSize>
							]]>
	          </programlisting>          
          
	          <itemizedlist mark='opencircle'>
	            <listitem>
	              <para><command>localname</command> - packetSize</para>
	            </listitem>
	            <listitem>
	              <para><command>namespace</command> - http://namespaces.slac.stanford.edu/schema/pinger/20071120/</para>
	            </listitem>
	            <listitem>
	              <para><command>attributes</command> - none</para>
	            </listitem>
	            <listitem>
	              <para><command>nested elements</command> - text</para>
	            </listitem>
	            <listitem>
	              <para><command>required</command> - yes</para>
	            </listitem>
	          </itemizedlist>
          
	          <para>
	            The <emphasis>packetSize</emphasis> element is used to specify 
							the ping packet size to use for the <command>test</command>. It does not requires any attributes.
	          </para>

	        </section>

	        <section id="configuration_mp_test_count" xreflabel="Count">
	          <title>Count</title>
          
	          <programlisting>
	            <![CDATA[
			        <pingertopo:count>STRING</pingertopo:count>
							]]>
	          </programlisting>          
          
	          <itemizedlist mark='opencircle'>
	            <listitem>
	              <para><command>localname</command> - count</para>
	            </listitem>
	            <listitem>
	              <para><command>namespace</command> - http://namespaces.slac.stanford.edu/schema/pinger/20071120/</para>
	            </listitem>
	            <listitem>
	              <para><command>attributes</command> - none</para>
	            </listitem>
	            <listitem>
	              <para><command>nested elements</command> - text</para>
	            </listitem>
	            <listitem>
	              <para><command>required</command> - yes</para>
	            </listitem>
	          </itemizedlist>
          
	          <para>
	            The <emphasis>count</emphasis> element is used to specify 
							the number of sequential ping packets to send for the <command>test</command>. It does not requires any attributes.
	          </para>

	        </section>

	        <section id="configuration_mp_test_interval" xreflabel="Interval">
	          <title>Interval</title>
          
	          <programlisting>
	            <![CDATA[
			        <pingertopo:interval>STRING</pingertopo:interval>
							]]>
	          </programlisting>          
          
	          <itemizedlist mark='opencircle'>
	            <listitem>
	              <para><command>localname</command> - interval</para>
	            </listitem>
	            <listitem>
	              <para><command>namespace</command> - http://namespaces.slac.stanford.edu/schema/pinger/20071120/</para>
	            </listitem>
	            <listitem>
	              <para><command>attributes</command> - none</para>
	            </listitem>
	            <listitem>
	              <para><command>nested elements</command> - text</para>
	            </listitem>
	            <listitem>
	              <para><command>required</command> - yes</para>
	            </listitem>
	          </itemizedlist>
          
	          <para>
	            The <emphasis>interval</emphasis> element specifies the inter-packet time to wait between sending sequential ping packets for the <command>test</command>. The units are in seconds. It does not requires any attributes.
	          </para>

	        </section>

	        <section id="configuration_mp_test_ttl" xreflabel="TTL">
	          <title>TTL</title>
          
	          <programlisting>
	            <![CDATA[
			        <pingertopo:ttl>STRING</pingertopo:ttl>
							]]>
	          </programlisting>          
          
	          <itemizedlist mark='opencircle'>
	            <listitem>
	              <para><command>localname</command> - ttl</para>
	            </listitem>
	            <listitem>
	              <para><command>namespace</command> - http://namespaces.slac.stanford.edu/schema/pinger/20071120/</para>
	            </listitem>
	            <listitem>
	              <para><command>attributes</command> - none</para>
	            </listitem>
	            <listitem>
	              <para><command>nested elements</command> - text</para>
	            </listitem>
	            <listitem>
	              <para><command>required</command> - yes</para>
	            </listitem>
	          </itemizedlist>
          
	          <para>
	            The <emphasis>ttl</emphasis> element is used to specify 
							the time-to-live value of the ping packets sent for the <command>test</command>. It does not requires any attributes.
	          </para>

	        </section>

	        <section id="configuration_mp_test_period" xreflabel="Period">
	          <title>Period</title>
          
	          <programlisting>
	            <![CDATA[
			        <pingertopo:period>STRING</pingertopo:period>
							]]>
	          </programlisting>          
          
	          <itemizedlist mark='opencircle'>
	            <listitem>
	              <para><command>localname</command> - packetSize</para>
	            </listitem>
	            <listitem>
	              <para><command>namespace</command> - http://namespaces.slac.stanford.edu/schema/pinger/20071120/</para>
	            </listitem>
	            <listitem>
	              <para><command>attributes</command> - none</para>
	            </listitem>
	            <listitem>
	              <para><command>nested elements</command> - text</para>
	            </listitem>
	            <listitem>
	              <para><command>required</command> - yes</para>
	            </listitem>
	          </itemizedlist>
          
	          <para>
	            The <emphasis>period</emphasis> element is used to schedule the time between subsequent measurements of the defined <command>test</command>. In conjunction with the <command>offset</command> element, it defines the time in seconds between measurements. It does not requires any attributes.
	          </para>

	        </section>

	        <section id="configuration_mp_test_offset" xreflabel="Offset">
	          <title>Offset</title>
          
	          <programlisting>
	            <![CDATA[
			        <pingertopo:offset>STRING</pingertopo:offset>
							]]>
	          </programlisting>          
          
	          <itemizedlist mark='opencircle'>
	            <listitem>
	              <para><command>localname</command> - offset</para>
	            </listitem>
	            <listitem>
	              <para><command>namespace</command> - http://namespaces.slac.stanford.edu/schema/pinger/20071120/</para>
	            </listitem>
	            <listitem>
	              <para><command>attributes</command> - none</para>
	            </listitem>
	            <listitem>
	              <para><command>nested elements</command> - text</para>
	            </listitem>
	            <listitem>
	              <para><command>required</command> - yes</para>
	            </listitem>
	          </itemizedlist>
          
	          <para>
	            The <emphasis>offset</emphasis> element is used to schedule the time between subsequent measurements of the defined <command>test</command>. In conjunction with the <command>period</command> element, it defines the time in seconds between measurements. In particular, a random number is generated with the maximum of the <command>offset</command> value which is used such that the next measurement time is equal to <command>period</command> plus/minus <command>rand( offset )</command>. This allows for statistically multiplexed results and will help prevent flooding of packets.
	          </para>

	        </section>


	      </section>

        <section id="configuration_mp_port" xreflabel="MP Port">
          <title>Port</title>
          
          <programlisting>
            <![CDATA[
			      <nmtl3:port id="STRING">
			        <nmtl3:ipAddress/>
			      </nmtl3:port>
            ]]>
          </programlisting>          
          
          <itemizedlist mark='opencircle'>
            <listitem>
              <para><command>localname</command> - port</para>
            </listitem>
            <listitem>
              <para><command>namespace</command> - http://ogf.org/schema/network/topology/l3/20070707/</para>
            </listitem>
            <listitem>
              <para><command>attributes</command> - id</para>
            </listitem>
            <listitem>
              <para><command>nested elements</command> - ipAddress</para>
            </listitem>
            <listitem>
              <para><command>required</command> - no</para>
            </listitem>
          </itemizedlist>
          
          <para>
            The <emphasis>port</emphasis> element is used to specify the IP address of the <command>host</command> so that upon measurement, a DNS lookup
is <emphasis>not</emphasis> performed and the IP address defined in it's child element <command>ipAddress</command> is used.
						A single attribute <command>id</command> is used to uniquely identify the ip address which should follow the URN conventions.
          </para>
        
	        <section id="configuration_mp_port_ipAddress" xreflabel="MP IpAddress">
	          <title>IpAddress</title>
          
	          <programlisting>
	            <![CDATA[
        			<nmtl3:ipAddress type="STRNG">STRING</nmtl3:ipAddress>	            
							]]>
	          </programlisting>          
          
	          <itemizedlist mark='opencircle'>
	            <listitem>
	              <para><command>localname</command> - ipAddress</para>
	            </listitem>
	            <listitem>
	              <para><command>namespace</command> - http://ogf.org/schema/network/topology/l3/20070707/</para>
	            </listitem>
	            <listitem>
	              <para><command>attributes</command> - type</para>
	            </listitem>
	            <listitem>
	              <para><command>nested elements</command> - text</para>
	            </listitem>
	            <listitem>
	              <para><command>required</command> - yes</para>
	            </listitem>
	          </itemizedlist>
          
	          <para>
	            The <emphasis>ipAddress</emphasis> element is used to specify 
							the IP Address of the parent <command>node</command>. 
							This element is required if the parent element <command>port</command> is present. It must contain a single attribute <command>type</command> which defines the format of the text element enclosed. The two possible values are 'IPv4' and 'IPv6' and should represent the IP address format present in the text element.
	          </para>

	        </section>
        
	      </section>

      </section>    

    </section>

    <section id="configuration_mp_schema" xreflabel="MP XML Schema Definitions">
      <title>MP XML Schema Definitions</title>

      <para>
        An XML <xref linkend="schema" /> is typically used to describe 
        the structure and internal content of a given XML instance.  This 
        description can sometimes be expressed in XML itself.  This 
        abstract is generally created to allow programmatic validation of 
        XML instances and to protect a service from receiving a poorly 
        constructed message.  
      </para>
      
      <para>
        Two schema definitions are presented here, the first being the native
        form of all <emphasis>NM-WG</emphasis> schemata written in the
        <citation>RELAX-NG</citation> language and the second being a derived
        version written in <citation>XSD</citation>.
      </para>

      <para>
        The following schema fragments validate the
        <emphasis>store.xml</emphasis> file, note that these are self
        contained fragments that should be viewed more as a useful supplement
        instead of functional code.  Those interested in a complete schema
        overview should consult the <emphasis>perfSONAR</emphasis> and
        <emphasis>NMWG</emphasis> subversion repositories.  
      </para>

      <section id="configuration_mp_schema_relax" xreflabel="MP RELAX-NG">
        <title>RELAX-NG</title>

        <para>
          <emphasis>NM-WG</emphasis> schemata is always expressed in terms of
          the RELAX-NG schema language.  This tool, unlike similar XML schema 
          languages, does not utilize XML markup.  The syntax is similar 
          to that of a regular language, and allows for a rather compact 
          description.  Note that this <command>will</command> only validate
          <emphasis>store.xml</emphasis> files used for this service.  Other
          schemas can be found in <citation>NMWG-Schema</citation>.
        </para>

        <programlisting>
        <![CDATA[
        ]]>
        </programlisting>              
        
      </section>
      
      <section id="configuration_mp_schema_xsd" xreflabel="MP XSD">
        <title>XSD</title>  

        <para>
          This particular description was produced using tools such as 
          <citation>MSV</citation> and <citation>Trang</citation> to 
          programatically convert between schema languages.  XSD is a more
          widely accepted schema format for validation, thus we present
          this definition for use in <emphasis>perfSONAR</emphasis> services.  
        </para>

        <programlisting>
        <![CDATA[
        ]]>
        </programlisting>  

        <para>
          <command>netdisc.xsd</command>
        </para>

        <programlisting>
        <![CDATA[
        ]]>
        </programlisting>  

        <para>
          <command>neterr.xsd</command>
        </para>

        <programlisting>
        <![CDATA[   
        ]]>
        </programlisting>  

        <para>
          <command>netutil.xsd</command>
        </para>

        <programlisting>
        <![CDATA[   
        ]]>
        </programlisting>  

        <para>
          <command>snmp.xsd</command>
        </para>

        <programlisting>
        <![CDATA[   
        ]]>
        </programlisting>  

        <para>
          <command>nmwgtopo.xsd</command>
        </para>

        <programlisting>
        <![CDATA[   
        ]]>
        </programlisting>  

      </section>          

    </section>


    <section id="configuration_ma" xreflabel="MA Configuration">
	    <title>MA Configuration</title>


      <section id="configuration_store_data" xreflabel="Data Structure">
        <title>Data Structure</title>

        <para>
          The following description represents a <emphasis>complete</emphasis>
          markup of the possible elements that may be used in describing the 
          backend storage of data for the <emphasis>SNMP MA</emphasis> service.
          This service is designed with only one specific backend for now, 
          RRD files, but the general abstraction provided by the XML will
          allow the description of any backend in time.  The XML is completely
          annotated with values, namespaces, and related prefixes.  We will
          examine each of these items in turn.
        </para>

        <programlisting>
          <![CDATA[
          ]]>
        </programlisting>  

        <section id="configuration_store_data_data" xreflabel="Data">
          <title>Data</title>

          <programlisting>
            <![CDATA[
              <nmwg:data xmlns:nmwg="http://ggf.org/ns/nmwg/base/2.0/" 
                         id="STRING" metadataIdRef="STRING">
 
                <nmwg:key id="STRING" />
 
              </nmwg:data>  
            ]]>
          </programlisting>  

          <itemizedlist mark='opencircle'>
            <listitem>
              <para><command>localname</command> - data</para>
            </listitem>
            <listitem>
              <para><command>namespace</command> - http://ggf.org/ns/nmwg/base/2.0/</para>
            </listitem>
            <listitem>
              <para><command>attributes</command> - id, metadataIdRef</para>
            </listitem>
            <listitem>
              <para><command>nested elements</command> - key</para>
            </listitem>
            <listitem>
              <para><command>required</command> - yes</para>
            </listitem>
          </itemizedlist>

          <para>
            The <command>data</command> element encloses a <command>key</command> 
            structure that is used to describe the representative backend storage.  
            The namespace of this object is always the same and the object 
            <command>is</command> required.
          </para>

          <para>
            The <xref linkend="configuration_store_data_key" /> elements is required 
            for this element.  The <emphasis>id</emphasis> and 
            <emphasis>metadataIdRef</emphasis> attributes are also required to preserve
            the relationship between <command>metadata</command> and 
            <command>data</command> items.  
          </para>
        
        </section>  

        <section id="configuration_store_data_key" xreflabel="Key">
          <title>Key</title>

          <programlisting>
            <![CDATA[
              <nmwg:key xmlns:nmwg="http://ggf.org/ns/nmwg/base/2.0/"
                        id="STRING">
                        
                <nmwg:parameters id="STRING" />

              </nmwg:key> 
            ]]>
          </programlisting>  

          <itemizedlist mark='opencircle'>
            <listitem>
              <para><command>localname</command> - key</para>
            </listitem>
            <listitem>
              <para><command>namespace</command> - http://ggf.org/ns/nmwg/base/2.0/</para>
            </listitem>
            <listitem>
              <para><command>attributes</command> - id</para>
            </listitem>
            <listitem>
              <para><command>nested elements</command> - parameters</para>
            </listitem>
            <listitem>
              <para><command>required</command> - yes</para>
            </listitem>
          </itemizedlist>

          <para>
            The <command>key</command> element encloses a <command>parameters</command> 
            structure that is used to describe the representative backend storage.  
            The key does not serve an explicit purpose other than to offer a container for
            the additional <emphasis>parameters</emphasis>.  The namespace of this 
            object is always the same and the object <command>is</command> required.
          </para>

          <para>
            The <xref linkend="configuration_store_data_parameters" /> elements and 
            <emphasis>id</emphasis> attribute are also required for this element.
          </para>
        
        </section>           

        <section id="configuration_store_data_parameters" xreflabel="Parameters">
          <title>Parameters</title>

          <programlisting>
            <![CDATA[
              <nmwg:parameters id="STRING"
                               xmlns:nmwg="http://ggf.org/ns/nmwg/base/2.0/">
                               
                <nmwg:parameter name="STRING">STRING</nmwg:parameter>

              </nmwg:parameters>
            ]]>
          </programlisting>  

          <itemizedlist mark='opencircle'>
            <listitem>
              <para><command>localname</command> - parameters</para>
            </listitem>
            <listitem>
              <para><command>namespace</command> - http://ggf.org/ns/nmwg/base/2.0/</para>
            </listitem>
            <listitem>
              <para><command>attributes</command> - id</para>
            </listitem>
            <listitem>
              <para><command>nested elements</command> - parameter</para>
            </listitem>
            <listitem>
              <para><command>required</command> - yes</para>
            </listitem>
          </itemizedlist>

          <para>
            The <command>parameters</command> element encloses a series of 
            <command>parameter</command> structures that are used to describe 
            the representative backend storage.  The namespace of this object 
            is always the same (unlike previous uses) and the object 
            <command>is</command> required.
          </para>

          <para>
            The <xref linkend="configuration_store_data_parameter" /> elements and 
            <emphasis>id</emphasis> attribute are also required for this element.
          </para>
        
        </section>  
        
        <section id="configuration_store_data_parameter" xreflabel="Parameter">
          <title>Parameter</title>

          <programlisting>
            <![CDATA[

              <nmwg:parameter name="STRING"
                              xmlns:nmwg="http://ggf.org/ns/nmwg/base/2.0/">
                STRING
              </nmwg:parameter>

            ]]>
          </programlisting>  

          <itemizedlist mark='opencircle'>
            <listitem>
              <para><command>localname</command> - parameter</para>
            </listitem>
            <listitem>
              <para><command>namespace</command> - http://ggf.org/ns/nmwg/base/2.0/</para>
            </listitem>
            <listitem>
              <para><command>attributes</command> - name, value</para>
            </listitem>
            <listitem>
              <para><command>nested elements</command> - text</para>
            </listitem>
            <listitem>
              <para><command>required</command> - yes</para>
            </listitem>
          </itemizedlist>

          <para>
            The <command>parameter</command> element is meant to describe
            a physical aspect of the data storage in terms of both name
            and value.  The value can be an attribute (appropriately named
            <emphasis>value</emphasis>) or in the form of a text element.  
          </para>

          <para>
            There are several recognized values for the <emphasis>name</emphasis> 
            attribute, they are enumerated as follows.
          </para>

          <itemizedlist mark='opencircle'>
            <listitem>
              <para>supportedEventType - Same use as in the metadata.  Use this
              to signify what datatype exists for this particular data store, can
              be used many times.</para>
            </listitem>
            <listitem>
              <para>type - for now always <emphasis>rrd</emphasis>, may also
              be used for other items such as <emphasis>sql</emphasis> or 
              <emphasis>csv</emphasis>.</para>
            </listitem>
            <listitem>
              <para>file - path to the file.</para>
            </listitem>
            <listitem>
              <para>valueUnits - units of the data stored in the file.</para>
            </listitem>
            <listitem>
              <para>dataSource - variable name of data in the file (used for
              query access).</para>
            </listitem> 
          </itemizedlist>
 
          <para>
            The <emphasis>name</emphasis> attribute is required for this element, 
            the <emphasis>value</emphasis> attribute is an option instead of using
            a text element.  The namespace should always be the base.  
          </para>        
        
        </section>          
                 
      </section>    
    

    </section>


  </section>

  <section id="ma_interface" xreflabel="MA Interface Specification">
    <title>Measurement Archive Interface</title>
	
		<section id="ma_interface_handle-metadata" xreflabel="MA Interface Specification - handle-metadata">
		    <title>MA Functionality – Handle-metadata</title>

		    <section id="ma_interface_handle-metadata_introduction" xreflabel="MA handle-metadata Introduction">
		      <title>Introduction</title>

		      <para>
				The <emphasis>Handle-metadata</emphasis> functionality aims to allow users to perform searches on the metadata information stored within the installed service. With the help of such searches, the user can easily check what data can be retrieved via the service.
				This functionality is made available to the users with the help of <emphasis>MetadataKeyRequest</emphasis> and <emphasis>MetadataKeyResponse</emphasis> messages. Whenever the user makes a <emphasis>MetadataKeyRequest</emphasis>, the response from the service is always a <emphasis>MetadataKeyResponse</emphasis> (not considering underlying transport protocol errors). If the service encountered one or more problems, they are reported using error codes. These error codes are contained within the <emphasis>MetadataKeyResponse</emphasis> as well. Currently MA service supports requests with metadata supporting only one eventType -  "http://ggf.org/ns/nmwg/tools/pinger/2.0/",  registered under pinger namespace.
			    </para>
			
		      <para>
				Number of request messages supported: 1
				Number of possible error-free response message types: 1
			    </para>
	
		    </section>  

		    <section id="ma_interface_metadatakeyrequest" xreflabel="MA MetadataKeyRequest">
		      <title>MetadataKeyRequest</title>

		      <para>
				The .rnc file for the request message can be found in Appendix I. This .rnc file is based on NMWG v2 (base 2) xml protocol definitions and completely describes request message. 
		      </para>
		      <para>
				At a high level, the request message may consist of multiple metadata elements and mupltiple data elements where each data element must refer to the metadata element by <emphasis>metadataIdRef</emphasis>.  The data element with missing metadata element will be marked as orphaned and will be skipped in the message processing. The error code will be returned for such element. Multiple metadata elements may refer to each other and the complete metadata sections can be assembled by chaining. Chaining will work only for the metadata elements with the same <emphasis>evenType</emphasis> elements. The presence of the key element will result in the immediate query to the metadata storage engine.
		      </para>
			  <para>
				The number of the data elements in response message might be limited by optional  message parameter from the nmwg:parameters namespace with name <emphasis>setLimit</emphasis>. Also, two types of time format are supported – "iso" and "unix" by setting <emphasis>timeType</emphasis> parameter for the whole message.  
			  </para>
	
		    </section>

		    <section id="ma_interface_metadatakeyresponse" xreflabel="MA MetadataKeyResponse">
		      <title>MetadataKeyResponse</title>

		      <para>
				The .rnc file for the response message can be found in Appendix I. This .rnc file is based on NMWG v2   xml protocol definitions and completely describes response message. 
		      </para>
		      <para>
				The MetadataKeyResponse message   will contain at least one metadata-data chain under all circumstances (apart from transport layer errors). Each chain will contain a metadata element and data element. There can be as many chains as there are matches for the given MetadataKeyRequest message. If the system error was encountered, there will be only one chain in the response and this chain will contain the error code.
			    </para>
		      <para>
				The metadata element can also contain a key. This happens when a key was passed in the metadataKeyRequest. In such a case the original key will be passed back and the same key will be passed inside of the data element.
			    </para>
		      <para>
				If a result code in the metadata element is passed back, it is contained in an eventType element directly in the metadata block. The data block will also contain a datum element (nmwgr namespace) and the datum element will provide more information about the error.
			    </para>
		      <para>
				If no errors occurred and no error codes were passed back, the linked data block will contain a key. This key element contains a metaID primary key from the metaData table of the storage SQL database. This key might be encrypted by the server in the future.
		      </para>
		    
		    </section>

		    <section id="ma_interface_handle-metadata_examples" xreflabel="MA handle-metadata Examples">
		      <title>Examples</title>
		      <para>
		A simple MetadataKeyRequest is in the first example below with partial subject for broader search criteria and setLimit parameter set to 10 
		      </para>
		      <programlisting>
		        <![CDATA[
						<nmwg:message id="message1"
						              type="MetadataKeyRequest"
						              xmlns="http://ggf.org/ns/nmwg/base/2.0/" 
						              xmlns:pinger="http://ggf.org/ns/nmwg/tools/pinger/2.0/"
						              xmlns:nmwgt="http://ggf.org/ns/nmwg/topology/2.0/"
						              xmlns:nmwg="http://ggf.org/ns/nmwg/base/2.0/">

						 <nmwg:parameters>
						         <nmwg:parameter name=”setLimit” value=”10”/>
						         <nmwg:parameter name=”timeType” value=”unix”/>
						 </nmwg:parameters>
						 <nmwg:metadata id="meta1">
						    <pinger:subject  id="subject1">
						      <nmwgt:endPointPair>
						        <nmwgt:dst type="hostname" value="pinger.fnal.gov"/> 
						     </nmwgt:endPointPair>
						    </pinger:subject>
						      <nmwg:eventType>http://ggf.org/ns/nmwg/tools/pinger/2.0/</nmwg:eventType>
						  </nmwg:metadata>
						  <nmwg:data id="data1" metadataIdRef="meta1"/>
						</nmwg:message> 
		        ]]>
		      </programlisting>

		      <para>
		      A MetadataKeyResponse for the above request is in the example below:
			    </para>
		      <programlisting>
          <![CDATA[
					<nmwg:message type="MetadataKeyResponse" 
					              id="message.2455708" 
					              xmlns:nmwgt="http://ggf.org/ns/nmwg/topology/2.0/"                  
					              xmlns:pinger="http://ggf.org/ns/nmwg/tools/pinger/2.0/" 
					              xmlns:select="http://ggf.org/ns/nmwg/ops/select/2.0/" 
					              xmlns:nmwg="http://ggf.org/ns/nmwg/base/2.0/">
					<nmwg:parameters>
					         <nmwg:parameter name=”setLimit” value=”10”/>
					         <nmwg:parameter name=”timeType” value=”unix”/>
					 </nmwg:parameters>
					<nmwg:metadata id="meta1">
					  <pinger:subject id="subj330229">
					    <nmwgt:endPointPair>
					        <nmwgt:src value="lhcopnmon1-mgm.fnal.gov" type="hostname"/>
					        <nmwgt:dst value="pinger.fnal.gov" type="hostname"/>
					    </nmwgt:endPointPair>
					</pinger:subject>
					<nmwg:key id="meta330229">
					   <pinger:parameters id="params330229">
					      <nmwg:parameter value="10" name="count"/>
					      <nmwg:parameter value="1000" name="packetSize"/>
					      <nmwg:parameter value="32" name="ttl"/>
					      <nmwg:parameter value="ICMP" name="transport"/>
					      <nmwg:parameter value="1" name="packetInterval"/>
					   </pinger:parameters>
					</nmwg:key>
					<nmwg:eventType>http://ggf.org/ns/nmwg/tools/pinger/2.0/</nmwg:eventType>
					</nmwg:metadata>
					<nmwg:data metadataIdRef="meta1" id="data1">
					   <nmwg:key id="330229"/>
					</nmwg:data>
					</nmwg:message>
		      ]]>
		      </programlisting>

		    </section>

	  </section>


  	<section id="ma_interface_handle-data" xreflabel="MA Interface Specification - handle-data">
	    <title>MA Functionality – Handle-data</title>

      <para>
	    PingER MA provides the ability to retrieve and store data:
	    </para>

	    <section id="ma_interface_handle-data_introduction" xreflabel="MA handle-data Introduction">
	      <title>Introduction</title>

	      <para>
					The Handle Data functionality provides the capability to request the service for retrieval of measurement data stored in backend storage.  
				</para>
				<para>
					There are many ways in which data can be retrieved. The service also supports bulk data retrievals wherein many requests can be put into one request whereby many overheads can be avoided. It also supports usage of ‘keys’ in requests. These keys would have to be retrieved previously using ‘handle-metadata’ functionality. Such measures when used will help in increasing the efficiency of the server and also increasing the speed with which data is available for consumption by the client. There is one interface message supported -  SetupDataRequest and it returns SetupDataResponse.
				</para>
				<para>
					Currently MA service supports requests with metadata supporting only one eventType -  "http://ggf.org/ns/nmwg/tools/pinger/2.0/",  registered under pinger namespace.
				</para>
				<para>
					If the service encountered one or more problems, they are reported using error codes. These error codes are contained within the SetupDataResponse as well. 
		    </para>
		
	      <para>
			Number of request messages supported: 1
			Number of possible error-free response message types: 1
		    </para>

	    </section>  

      <section id="ma_interface_retrievedata" xreflabel="MA Retrieve Data">
	      <title>MA Retrieve Data</title>

		    <section id="ma_interface_setupdatarequest" xreflabel="MA SetupDataRequest">
		      <title>SetupDataRequest</title>

		      <para>
						The .rnc file for the request message can be found in Appendix II. This .rnc file is based on NMWG v2 (base 2) xml protocol definitions and completely describes request message. 
					</para>
					<para>
						The set  of  rules from building MetaDataRequest applied here as well. The same metadata-data and multiple metadata  chaining is supported. Filter chaining is supported with additional  time range parameters - ‘startTime’ and ‘endTime’. 
					</para>
					<para>
						There are several use cases considered for the requests. 
					</para>
					<para>
						Requests without keys –   there is one metadata element and one data element. Time range select can be inserted as select parameters of the metadata. If time range will me missing then default time range is 24 hours past current time in UTC.  
					</para>
					<para>
						Requests with keys – A simple request for data can also be made by providing a ‘key’ in the metadata section of the request with ‘id’ attribute set to the actual metaID   primary key of the particular metadata in the metadata storage. The usage of the keys is preferred in case of the bulk requests.
					</para>
					<para>
						Requests with filters – both types of requests from above can be utilized with additional metadata element  and linked by metadataIdRef.  
					</para>
					<para>
											A response for such filter chained request will contain the main metadata section with found metadata, requested time range in form of the linked  metadata element and linked data element with collection of nmwg:commonTime sub-elements identified by the unique timestamp.  
					</para>
					<para>
																All requests can be extensively chained with unlimited depth by matching the same eventType in the chained metadata. In this case the same parameters from the metadata elements will be overwritten.
					</para>
					<para>
											The number of either metadata or data elements in response message might be limited by optional  message parameter from the nmwg:parameters namespace with name setLimit. Also, two types of time format are supported – “iso” and “unix” by setting timeType parameter for the whole message.  
	   		  </para>

		    </section>

		    <section id="ma_interface_setupdataresponse" xreflabel="MA SetupDataResponse">
		      <title>SetupDataResponse</title>

		      <para>The .rnc file for the request message can be found in Appendix II. This .rnc file is based on NMWG v2 (base 2) xml protocol definitions and completely describes response message. 
			    </para>
		      <para>
					A Typical Response Message of type SetupDataResponse  may contain multiple metadata elements paired with data elements and actual measured data will be contained as multiple datums inside of nmwg:commonTime sub-elements. 
			    </para>
		      <para>
					If a match for the given metadata was found on the service, the service will return all known metadata elements and will   fill up the data section with data values from the data table of the storage SQL database for the matched metadata. If data is unavailable for the given metadata or there is no metadata element in the request then an error code will be sent back in the response.  If no matching metadata  were found, a result error message will be sent back saying ‘no metadata found’. If service storage  does not contain datum  for requested metadata and time range then ‘no data found’ error message will be returned.  In both cases eventType of the metadata will signify the error nature of the result datum. 
		      </para>
	    
		    </section>

		    <section id="ma_interface_handle-data_examples" xreflabel="MA handle-data Examples">
		      <title>Examples</title>
		      <para>
		  SetupDataRequest  with  additional setLimit parameter set to 10  and extra  filter chained  metadata with specified  time range select
		      </para>
		      <programlisting>
		        <![CDATA[
						<nmwg:message id="message1"
						              type="SetupDataRequest"
						              xmlns="http://ggf.org/ns/nmwg/base/2.0/" 
						              xmlns:pinger="http://ggf.org/ns/nmwg/tools/pinger/2.0/"
						              xmlns:nmwgt="http://ggf.org/ns/nmwg/topology/2.0/"
						              xmlns:nmwg="http://ggf.org/ns/nmwg/base/2.0/"
						              xmlns:select="http://ggf.org/ns/nmwg/ops/select/2.0/">
						<nmwg:parameters>
						         <nmwg:parameter name=”setLimit” value=”10”/>
						         <nmwg:parameter name=”timeType” value=”unix”/>
						 </nmwg:parameters>
						   <nmwg:metadata id="meta426">
						     <pinger:subject id="subject426">
						       <nmwgt:endPointPair>
						          <nmwgt:src type="hostname" value="pinger.ictp.it"/> 
						          <nmwgt:dst type="hostname" value="foundation.bw"/> 
						       </nmwgt:endPointPair>
						       <pinger:parameters>
						           <nmwg:parameter name="packetSize">1000</nmwg:parameter>
						            <nmwg:parameter name="count">10</nmwg:parameter>
						        </pinger:parameters>
						     </pinger:subject>           
						     <nmwg:eventType>http://ggf.org/ns/nmwg/tools/pinger/2.0/</nmwg:eventType>
						   </nmwg:metadata>
						  <nmwg:metadata id="meta427" metadataIdRef="meta426">
						     <select:parameters id="param2c" >      
						        <nmwg:parameter name="startTime">1193876292</nmwg:parameter>
						        <nmwg:parameter name="endTime">1194045045</nmwg:parameter>
						     </select:parameters>
						     <nmwg:eventType>http://ggf.org/ns/nmwg/tools/pinger/2.0/</nmwg:eventType>
						  </nmwg:metadata>
						  <nmwg:data id="data426" metadataIdRef="meta427"/>
						</nmwg:message>
			      ]]>
		      </programlisting>
		      <para>
	And corresponded  SetupDataResponse message:
		      </para>
		      <programlisting>
		        <![CDATA[
						<nmwg:message 
						                     xmlns:nmwgt="http://ggf.org/ns/nmwg/topology/2.0/"         
						                     xmlns:select="http://ggf.org/ns/nmwg/ops/select/2.0/" 
						                     xmlns:pinger="http://ggf.org/ns/nmwg/tools/pinger/2.0/" 
						                      xmlns:nmwg="http://ggf.org/ns/nmwg/base/2.0/" 
						                     type="SetupDataResponse" id="message.2455708">
						<nmwg:parameters>
						         <nmwg:parameter name=”setLimit” value=”10”/>
						         <nmwg:parameter name=”timeType” value=”unix”/>
						 </nmwg:parameters>
						<nmwg:metadata id="meta1">
						     <select:subject id="subj1"/>
						     <select:parameters id="params1">
						              <nmwg:parameter value="1193876292" name="startTime"/>
						              <nmwg:parameter value="1194045045" name="endTime"/>
						    </select:parameters>              
						    <nmwg:eventType>http://ggf.org/ns/nmwg/ops/select/2.0/</nmwg:eventType>
						</nmwg:metadata>
						<nmwg:metadata metadataIdRef="1" id="meta2">
						     <pinger:subject id="subj25150">
						         <nmwgt:endPointPair>
						                <nmwgt:src value="pinger.ictp.it" type="hostname"/>
						                <nmwgt:dst value="foundation.bw" type="hostname"/>
						          </nmwgt:endPointPair>
						     </pinger:subject>
						      <nmwg:key id="meta25150">
						              <pinger:parameters id="params25150">
						                   <nmwg:parameter value="10" name="count"/>
						                    <nmwg:parameter value="100" name="packetSize"/>
						                    <nmwg:parameter value="ICMP" name="transport"/>
						                   <nmwg:parameter value="1" name="packetInterval"/>
						            </pinger:parameters>
						      </nmwg:key>
						      <nmwg:eventType>http://ggf.org/ns/nmwg/tools/pinger/2.0/</nmwg:eventType>
						</nmwg:metadata>
						 <nmwg:data metadataIdRef="meta2" id="data1">
						     <nmwg:commonTime value="1193877091" type="unix">
						               <pinger:datum value="315" name="minRtt"/>
						               <pinger:datum value="323.9" name="maxRtt"/>
						               <pinger:datum value="320" name="medianRtt"/>
						               <pinger:datum value="339" name="meanRtt"/>
						               <pinger:datum value="10" name="iqrIpd"/>
						               <pinger:datum value="20" name="maxIpd"/>
						               <pinger:datum value="1" name="minIpd"/>
						               <pinger:datum value="7.88889" name="meanIpd"/>
						       </nmwg:commonTime>
						  </nmwg:data>
						</nmwg:message>
			      ]]>
		      </programlisting>

	      </section>

      </section>

      <section id="ma_interface_storedata" xreflabel="MA Store Data">
	      <title>MA Store Data</title>

				<para>
					PingER MA does not currently support the storage of data. Data in the MA is currently read only.
	      </para>

      </section>

    </section>


  </section>

  <section id="mp_interface" xreflabel="MP Interface Specification">
	  <title>Measurement Point Interface</title>
	
	  <section id="mp_interface_introduction" xreflabel="MP Interface Introduction">
		  <title>Introduction</title>
		
		  <para>
			  The <emphasis>PingER MP</emphasis> is designed to provide  interface to the ping facility, ie schedule ping measurements.
			</para>
		  <para>
			The PingER MP currently provides no externally accessible interface. 
			</para>
			
		</section>
	
	</section>

  <section id="general_interface" xreflabel="General Interface Specification">
	  <title>General Interface</title>
	
	  <section id="general_interface_introduction" xreflabel="General Interface Introduction">
		  <title>Introduction</title>
		
			<para>
				Two general interfaces are provided with the PingER suite. The first, an "Echo Service" enables a client to determine the availability of the service. The second and "LS" (de)registration service publishes information to a Lookup Server for service discovery by perfSONAR clients.
			</para>

	    <section id="general_interface_handleecho" xreflabel="General Interface Echo">
			  <title>Echo</title>

				<para>
					The PingER suite provides a "echo" feature with which clients and any other users interested in finding out the status of a service can send an echo message and get back a echo reply. Both the PingER MA and PingER MP service provide such functionality.
					If no ‘success.echo’ reply was got back then the client/user can assume that the service is down (even though there might not be a 404 error response). Depending on the requested endpoint the service will return echo response for  MA or MP.
				</para>

				<para>
					Please see the "Echo Service Specification" for further information.
				</para>

		    <section id="general_interface_echorequest" xreflabel="General Interface Echo Request">
				  <title>Echo Request</title>
        </section>

		    <section id="general_interface_echoresponse" xreflabel="General Interface Echo Response">
				  <title>Echo Response</title>
        </section>

			</section>


	
	    <section id="general_interface_handles" xreflabel="General Interface LS Interaction">
			  <title>LS Interaction</title>
	
		  	<para>
				The PingER service is capable of registering information about itself and its capabilities with the Lookup Service. In order to do so, it communicates with the LS (Lookup Service) by sending messages of registration, de-registration, etc.
				</para>
	
		    <section id="general_interface_registerls" xreflabel="General Interface LS Registration">
				  <title>LS Registration</title>
					<para>
						TBA
					</para>
        </section>

		    <section id="general_interface_deregisterls" xreflabel="General Interface LS Deregistration">
				  <title>LS Deregistration</title>
					<para>
						TBA
					</para>
        </section>

			</section>
			
		</section>
	
	</section>


  <glossary id="glossary">
    <title>Terms</title>

    <glossdiv id="A">
      <title>A</title>    
      <glossentry id="apt"><glossterm>apt</glossterm>
        <glossdef>
          <para>Advanced Packaging Tool, or APT, is a front-end for the 
          package management system used by Debian GNU/Linux and its 
          derivatives.</para>
        </glossdef>
      </glossentry>   
    </glossdiv> 
    
    <glossdiv id="B">
      <title>B</title>    
    </glossdiv> 
    
    <glossdiv id="C">
      <title>C</title>    
      <glossentry id="characteristic" xreflabel="characteristics"><glossterm>characteristic</glossterm>
        <glossdef>
          <para>Taken on the context of networking, these describe the 
          intrinsic properties of a portion of the network that are related 
          to the performance and reliability of the network.  See 
          <ulink url="http://www.ggf.org/documents/GFD.23.pdf">http://www.ggf.org/documents/GFD.23.pdf</ulink> 
          for more information.</para>
        </glossdef>
      </glossentry> 
      <glossentry id="chaining"><glossterm>chaining</glossterm>
        <glossdef>
          <para>
            The process of linking together elements in the 
            <xref linkend="NMWG" /> XML specification.
          </para>
        </glossdef>
        <glossseealso otherterm="filter_chaining">filter chaining</glossseealso>
        <glossseealso otherterm="merge_chaining">merge chaining</glossseealso>
      </glossentry>   
    </glossdiv> 
    
    <glossdiv id="D">
      <title>D</title>   
      <glossentry id="data"><glossterm>data</glossterm>
        <glossdef>
          <para>An <xref linkend="NMWG" /> <xref linkend="XML" /> block used 
          to store dynamic information, such as the results of a measurement.</para>
        </glossdef>
      </glossentry>     
    </glossdiv> 
    
    <glossdiv id="E">
      <title>E</title>    
    </glossdiv> 
    
    <glossdiv id="F">
      <title>F</title>   
      <glossentry id="filter_chaining" xreflabel="filter chaining"><glossterm>filter chaining</glossterm>
        <glossdef>
          <para>
            Chaining operation that is akin to performing advanced selection or 
            aggregation on a dataset.
          </para>
        </glossdef>
        <glossseealso otherterm="chaining">chaining</glossseealso>
        <glossseealso otherterm="merge_chaining">merge chaining</glossseealso>
      </glossentry>   
    </glossdiv> 
    
    <glossdiv id="G">
      <title>G</title>    
    </glossdiv> 
    
    <glossdiv id="H">
      <title>H</title>   
      <glossentry id="HTTP"><glossterm>HTTP</glossterm>
        <glossdef>
          <para>Hypertext Transfer Protocol (HTTP) is a communications protocol 
          used to transfer or convey information on intranets and the World 
          Wide Web.</para>
        </glossdef>
      </glossentry>            
    </glossdiv> 
    
    <glossdiv id="I">
      <title>I</title>    
    </glossdiv> 
    
    <glossdiv id="J">
      <title>J</title>    
    </glossdiv> 
    
    <glossdiv id="K">
      <title>K</title>    
    </glossdiv> 
    
    <glossdiv id="L">
      <title>L</title>    
    </glossdiv> 
    
    <glossdiv id="M">
      <title>M</title> 
      <glossentry id="merge_chaining" xreflabel="merge chaining"><glossterm>merge chaining</glossterm>
        <glossdef>
          <para>
            Chaining that combines linked metadata items into a new 
            representation.
          </para>
        </glossdef>
        <glossseealso otherterm="filter_chaining">filter chaining</glossseealso>
        <glossseealso otherterm="chaining">chaining</glossseealso>
      </glossentry>   
      <glossentry id="metadata"><glossterm>metadata</glossterm>
        <glossdef>
          <para>An <xref linkend="NMWG" /> <xref linkend="XML" /> block used 
          to store static information, such as the specific parameters of a 
          measurement.</para>
        </glossdef>
      </glossentry>       
    </glossdiv> 
    
    <glossdiv id="N">
      <title>N</title>  
      <glossentry id="NMWG"><glossterm>NM-WG</glossterm>
        <glossdef>
          <para>The performance of most grid applications is dependent on the 
          performance of the networks forming the grid. The Network 
          Measurements Working Group (NMWG) identifies network metrics 
          (aka <xref linkend="characteristic" />) useful to grid applications 
          and middleware, and develops standard mechanisms to describe and 
          publish these characteristics to the Grid.</para>
        </glossdef>
      </glossentry>   
    </glossdiv> 
    
    <glossdiv id="O">
      <title>O</title>    
    </glossdiv> 
    
    <glossdiv id="P">
      <title>P</title>
      <glossentry id="perfSONAR"><glossterm>perfSONAR</glossterm>
        <glossdef>
          <para>Network performance monitoring framework.</para>
        </glossdef>
      </glossentry>     
    </glossdiv>
    
    <glossdiv id="Q">
      <title>Q</title>    
    </glossdiv> 
    
    <glossdiv id="R">
      <title>R</title>
      <glossentry id="RPM"><glossterm>RPM</glossterm>
        <glossdef>
          <para>(originally Red Hat Package Manager, abbreviated RPM) is a 
          package management system. The name RPM refers to two things: a 
          software package file format, and software packaged in this format. 
          RPM was intended primarily for Linux distributions; the file format 
          RPM is the baseline package format of the Linux Standard Base.</para>
        </glossdef>
      </glossentry>     
    </glossdiv> 
    
    <glossdiv id="S">
      <title>S</title> 
      <glossentry id="schema"><glossterm>schema</glossterm>
        <glossdef>
          <para>XML specification, normally written in XML.</para>
        </glossdef>
        <glossseealso otherterm="schemata">schemata</glossseealso>
      </glossentry>   
      <glossentry id="schemata"><glossterm>schemata</glossterm>
        <glossdef>
          <para>Plural of schema.</para>
        </glossdef>
        <glossseealso otherterm="schema">schema</glossseealso>
      </glossentry>  
      <glossentry id="snmp"><glossterm>SNMP</glossterm>
        <glossdef>
          <para>The Simple Network Management Protocol (SNMP) forms part of 
          the internet protocol suite as defined by the Internet Engineering 
          Task Force (IETF). SNMP is used in network management systems to 
          monitor network-attached devices for conditions that warrant 
          administrative attention.</para>
        </glossdef>
      </glossentry>   
      <glossentry id="SOAP"><glossterm>SOAP</glossterm>
        <glossdef>
          <para>SOAP originally stood for Simple Object Access Protocol, and 
          lately also Service Oriented Architecture Protocol, but is now 
          simply SOAP is a protocol for exchanging XML-based messages over 
          computer networks, normally using <xref linkend="HTTP" />.</para>
        </glossdef>
      </glossentry>       
    </glossdiv> 
    
    <glossdiv id="T">
      <title>T</title>    
    </glossdiv> 
    
    <glossdiv id="U">
      <title>U</title>  
      <glossentry id="up2date"><glossterm>up2date</glossterm>
        <glossdef>
          <para>The Red Hat Update Agent, is a tool used by Red Hat Enterprise 
          Linux, CentOS and early versions of Fedora Core that downloads and 
          installs new software and upgrades to the operating system. </para>
        </glossdef>
      </glossentry>   
    </glossdiv> 
    
    <glossdiv id="V">
      <title>V</title>    
    </glossdiv> 
    
    <glossdiv id="W">
      <title>W</title>    
    </glossdiv> 
    
    <glossdiv id="X">
      <title>X</title>  
      <glossentry id="XML"><glossterm>XML</glossterm>
        <glossdef>
          <para>The Extensible Markup Language (XML) is a general-purpose markup
          language. It is classified as an extensible language because it 
          allows its users to define their own tags. Its primary purpose is 
          to facilitate the sharing of structured data across different 
          information systems, particularly via the Internet.</para>
        </glossdef>
      </glossentry>   
    </glossdiv> 
    
    <glossdiv id="Y">
      <title>Y</title>    
      <glossentry id="yum"><glossterm>yum</glossterm>
        <glossdef>
          <para>The Yellow dog Updater, Modified (YUM) is a free software/open 
          source command line package management utility for <xref linkend="RPM" />-compatible 
          Linux operating systems. </para>
        </glossdef>
      </glossentry> 
    </glossdiv> 
    
    <glossdiv id="Z">
      <title>Z</title>    
    </glossdiv>
     
  </glossary>


  <bibliography id="bibliography">
    <title>References</title>

    <biblioentry>
      <abbrev>Perl</abbrev>
      <title>
        <ulink url="http://www.perl.org">Perl Programing Language</ulink>
      </title>
    </biblioentry>

    <biblioentry>
      <abbrev>log4perl</abbrev>
      <title>
        <ulink url="http://log4perl.sourceforge.net/">log4perl</ulink>
      </title>
    </biblioentry>

    <biblioentry>
      <abbrev>SNMP</abbrev>
      <title>
        <ulink url="http://en.wikipedia.org/wiki/Simple_Network_Management_Protocol">Simple Network Management Protocol</ulink>
      </title>
    </biblioentry>
    
    <biblioentry>
      <abbrev>MRTG</abbrev>
      <title>
        <ulink url="http://oss.oetiker.ch/mrtg/">Multi Router Traffic Grapher</ulink>
      </title>
    </biblioentry>
    
    <biblioentry>
      <abbrev>SNAPP</abbrev>
      <title>
        <ulink url="http://tools.globalnoc.iu.edu/snapp.html">SNMP Network Analysis and Presentation Package</ulink>
      </title>
    </biblioentry>
    
    <biblioentry>
      <abbrev>Cricket</abbrev>
      <title>
        <ulink url="http://cricket.sourceforge.net/">Cricket</ulink>
      </title>
    </biblioentry>
    
    <biblioentry>
      <abbrev>CACTI</abbrev>
      <title>
        <ulink url="http://cacti.net/">CACTI</ulink>
      </title>
    </biblioentry>
    
    <biblioentry>
      <abbrev>RRD</abbrev>
      <title>
        <ulink url="http://oss.oetiker.ch/rrdtool/">RRDTool</ulink>
      </title>
    </biblioentry>

    <biblioentry>
      <abbrev>NM-WG</abbrev>
      <title>
        <ulink url="http://nmwg.internet2.edu">Network Measurements Working Group</ulink>
      </title>
    </biblioentry>
    
    <biblioentry>
      <abbrev>perfSONAR</abbrev>
      <title>
        <ulink url="http://www.perfSONAR.net">perfSONAR</ulink>
      </title>
    </biblioentry>  
      
    <biblioentry>
      <abbrev>perfSONAR-UI</abbrev>
      <title>
        <ulink url="http://perfsonar.acad.bg/">perfSONAR-UI</ulink>
      </title>
    </biblioentry> 
    
    <biblioentry>
      <abbrev>XML</abbrev>
      <title>
        <ulink url="http://www.w3.org/XML">Extensible Markup Language (XML)</ulink>
      </title>
    </biblioentry>
    
    <biblioentry>
      <abbrev>ping</abbrev>
      <title>
        <ulink url="http://en.wikipedia.org/wiki/Ping">Ping - Wikipedia</ulink>
      </title>
    </biblioentry>
    
    <biblioentry>
      <abbrev>RELAX-NG</abbrev>
      <title>
        <ulink url="http://relaxng.org/">RELAX-NG Schema Language</ulink>
      </title>
    </biblioentry>
    
    <biblioentry xreflabel="XSD">
      <abbrev>XSD</abbrev>
      <title>
        <ulink url="http://www.w3.org/XML/Schema">XML Schema</ulink>
      </title>
    </biblioentry>     
    
    <biblioentry>
      <abbrev>GGF/OGF</abbrev>
      <title>
        <ulink url="http://www.ogf.org/">(Global|Open) Grid Forum</ulink>
      </title>
    </biblioentry>
    
    <biblioentry>
      <abbrev>CDF</abbrev>
      <title>
        <ulink url="http://en.wikipedia.org/wiki/Cumulative_distribution_function">Cumulative distribution function - Wikipedia</ulink>
      </title>
    </biblioentry>

    <biblioentry>
      <abbrev>NMWG-Schema</abbrev>
      <title>
        <ulink url="http://nmwg.internet2.edu/nm-schema-base.html">NMWG Base Schema</ulink>
      </title>
    </biblioentry>

    <biblioentry>
      <abbrev>Zurawski06Scalable</abbrev>
      <title>A Scalable Framework for Representation and Exchange of Network Measurements</title>
      <authorgroup>
        <author><personname>
          <firstname>J.</firstname><surname>Zurawski</surname>
        </personname></author>
        <author><personname>
          <firstname>M.</firstname><surname>Swany</surname>
        </personname></author>
        <author><personname>
          <firstname>D.</firstname><surname>Gunter</surname>
        </personname></author>
      </authorgroup>
      <confgroup>
        <confdates>March, 2006</confdates>
        <conftitle>2nd International IEEE/Create-Net Conference on Testbeds and Research Infrastructures for the Development of Networks and Communities</conftitle>
        <address>Barcelona, Spain</address>
        <confsponsor>IEEE/Create-Net</confsponsor>
      </confgroup>
    </biblioentry>

    <biblioentry>
      <abbrev>Hanemann05PerfSONAR</abbrev>
      <title>PerfSONAR: A Service-Oriented Architecture for Multi-Domain Network Monitoring </title>
      <authorgroup>
        <author><personname>
          <firstname>A.</firstname><surname>Hanemann</surname>
        </personname></author>
        <author><personname>
          <firstname>J.</firstname><surname>Boote</surname>
        </personname></author>
        <author><personname>
          <firstname>E.</firstname><surname>Boyd</surname>
        </personname></author>
        <author><personname>
          <firstname>J.</firstname><surname>Durand</surname>
        </personname></author>
        <author><personname>
          <firstname>L.</firstname><surname>Kudarimoti</surname>
        </personname></author>
        <author><personname>
          <firstname>R.</firstname><surname>Lapacz</surname>
        </personname></author>
        <author><personname>
          <firstname>M.</firstname><surname>Swany</surname>
        </personname></author>
        <author><personname>
          <firstname>S.</firstname><surname>Trocha</surname>
        </personname></author>  
        <author><personname>
          <firstname>J.</firstname><surname>Zurawski</surname>
        </personname></author>      
      </authorgroup>
      <confgroup>
        <confdates>2005</confdates>
        <conftitle>International Conference on Service Oriented Computing</conftitle>
      </confgroup>
    </biblioentry>

  </bibliography>

</article>



