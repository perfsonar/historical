#summary A Proposal for how to structure the PS-NPToolkit to easily allow users to install all the NPToolkit software on a machine of their own
other wiki pages

= Introduction = 
The goal of this proposal is to minimize the customization required to produce an NPToolkit. This has the benefit of minimizing the steps required for us to put out newer versions of the toolkit. It would also allow for end users to deploy all the tools and services on the NPToolkit on their local machine in a standardized, straight-forward fashion.

The proposal is to produce a set of packages covering all the software on the NPToolkit CD. These packages would then be made available via Yum and Apt repositories. A set of instructions would then be provided describing the steps required for end users to turn their machines into a Performance Node.

The first step would be to replace the current structure of the toolkit with a set of Debian packages that can "reconstruct" the toolkit. Once the toolkit can be easily reconstructed, we could take the debian packages and produce a comparable set of RPMs. These packages could then be made available via Yum and Apt repositories. The perfSONAR-PS services would also be made available via CPAN, though CPAN should not be required to construct a Performance Node.

= Proposal =

  * bwctl/owamp
    * There exist RPM packages for bwctl and owamp. We would need to produce standard Debian packages for the software.
    * The existing packages for bwctl/owamp install into /usr whereas the NPToolkit has bwctl/owamp installed in /usr/local. An extra package could be created to do NPToolkit-specific customizations
      * installs a default NPToolkit bwctld.limits file as generated by a default run through of the bwctl/owamp config gui in /usr/local/etc (backward compatibility)
      * symlinks /etc/bwctld/bwctld.* and /etc/owampd/owampd.* to the versions in /usr/local/etc
  * Iperf/Nuttcp
    *  create (or reuse existing if available) RPM/DEB packages. Keep their default locations as long as the defaults have them in the system path.
  * NDT/NPAD
    *  produce debian/rpm packages for both of these
    *  install in /usr/share/[npad,ndt] or /usr/local/share/[ndt,npad] or similar
    *  have an NPToolkit specific package that symlinks it into place
      *  Must also symlinking the NPAD log directory or add the default location of the saved logs to the "mount from disk" file.
  * perfSONAR-PS Services
    *  currently, pS-PS on the disk is a svn checkout in /usr/local/perfSONAR-PS
    * Proposed CPAN Packaging:
      *  perfSONAR_PS::Base
        * contains: all of pS-PS's lib directory, perfsonar-daemon.pl and perfsonar-collector.pl
        * Dependencies include those solely in CPAN (i.e. not RRD, not Sleepycat XML DB)
        * contains conf files, init scripts and scripts for a generic service configuration (e.g. psConfigureDaemon)
      * perfSONAR_PS::PingER
      * perfSONAR_PS::LS
      * perfSONAR_PS::SNMP
      * perfSONAR_PS::perfSONARBUOY
      * perfSONAR_PS::Status
      * perfSONAR_PS::Topology
        * contains conf files, init scripts, etc tailored for the service
    *  Create RPM/DEB of the CPAN packages
  * LS registration daemon
    *  CPAN package dependent on perfSONAR_PS::Base
    *  includes ls_registration_daemon.pl, along with init scripts
    *  RPM/DEB of the CPAN package
    *  produce an NPToolkit package containing a new configuration file and symlinking any files as needed
  * Web GUIs
  * Web Admin GUIs