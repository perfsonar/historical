# summary  PS Toolkit Configuration Guide

(this page is under construction, and will be moved to psps.perfsonar.net when complete)

=perfSONAR NP Toolkit Configuration Guide =

OK, so you've installed and configured your NP Toolkit host so that others can run tests to your host. Now what? Just sit back and wait for others to find problems and tell you about them? No! You should go looking for problems.  Here are the steps:

<strong>Step 1</strong>: Select "Scheduled Tests" under "Toolkit Administration" in the web GUI on your NP Toolkit host, and configure some regular bwctl tests to places in the network of interest to you. You need to locate some relevant bwctl servers. For example:

|| Catgory || Examples ||
|| 10G backbone servers in ESnet, Internet2, etc.|| ESnet: chic-pt1.es.net,wash-pt1.es.net,sunn-pt1.es.net<br/>Internet2: bwctl.losa.net.internet2.edu, bwctl.newy.net.internet2.edu||
||Large, well connected sites that your users transfer data to or from|| NERSC: perfsonar.nersc.gov<br/>OLCF/ORNL: perfsonar.ornl.gov<br/>LHC Tier 1 sites: lhcmon.bnl.gov<br/>SLAC: bwctl.slac.stanford.edu ||
||Other sites your users interact with (look at netflow data for your site to find largest flow destinations, or talk to your users)||

Look in the <a href="https://stats1.es.net/perfSONAR/directorySearch.html" target="_blank">perfSONAR Directory</a> for bwctl servers in each of the above catagories. Note that a lot of problems only show up at RTT &gt; 20ms, to be sure to include some tests to servers at least that far away, as well as some nearby servers. If there are no bwctl servers where you need them, encourage your friends to deploy at least a bwctl server. (For example, see the <a href="http://fasterdata.es.net/fasterdata/perfSONAR/ps-howto/level-1/">'level 1' HOWTO</a> instructions for DOE sites)

The default NP Toolkit configuration (20 second test every 4 hours, using TCP autotuning) is fine for most situations. It is best for tests to be a short as possible but long enough to give good results. You may want to create different test classes for network paths based on RTT. For example:

||RTT time||	Test duration||
|| 0 - 10 ms ||	10 seconds||
||10ms - 50 ms ||	15 seconds||
||50ms - 100 ms	|| 20 seconds||
||> 100 ms ||	30 seconds ||

<p>TCP window size: use autotuning unless you have a 10G tester running tests to lots of 1G hosts. In that case create a test class with a window size based on the BDP to that host.</p>

<p><strong>Step 2:</strong> Configure a similar set of owamp tests. The Default NP Toolkit test configuration (10 packets/second, 20 byte packets) if fine. Note that sometimes there will be a bwctl server at a site, but no owamp server.</p>

<strong>Step 3:</strong> collect data for a couple days, and then look at results. (See the "Service Graphs" section in the web GUI)

  * Throughput Expectations: Single stream TCP still has trouble filling the pipe and keeping it full. But for RTTs &lt; 80 ms or so, you should be able to get 20% of the capacity unless there is a lot of congestion.  
  * Loss Expectations: In general you should see less than 10 lost packets per hour. More than that indicates severe congestion somewhere on the path. 

<strong>Step 4:</strong> Track down and fix the problems you find. If you didnt find any, you are probably not looking hard enough. Our <a href="http://fasterdata.es.net/fasterdata/troubleshooting/overview/" target="_blank">Troubleshooting HOWTO </a>may help.

<strong>Step 5:</strong> To make sure problem dont some back, integrate perfSONAR checks into your Nagios infrastructure. You'll want to set up email alerts to detect new problems as they arise. Your goal is to notice soft failures before your users do.

The new NP Toolkit Nagios scripts can be found here. These are still in "beta":
  *<a href="http://anonsvn.internet2.edu/svn/perfSONAR-PS/branches/sowmya-nagios/perfSONAR_PS-Nagios/perl-perfSONAR_PS-Nagios-Plugins-3.2-1.pSPS.noarch.rpm" target="_blank">Nagios RPM</a>
  * <a href="http://anonsvn.internet2.edu/svn/perfSONAR-PS/branches/sowmya-nagios/perfSONAR_PS-Nagios/doc/README.txt" target="_blank">Nagios Plugin Documentation</a>

For nagios alarms, start with 150 Mbps for a 1G host, and 1 Gbps for a 10G host, and adjust as necessary.