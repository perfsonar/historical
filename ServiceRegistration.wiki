#summary A proposal for what the 'service' element that gets registered in the LS might look like
= Use Cases =
  * A service speaks two versions of a protocol
  * A service speaks two separate protocols
  * An OWAMP service wants to register some of its settings to allow clients to make better decisions

= Examples =

== NDT ==
{{{
<!-- OWAMP Service. Running on same node as the bwctl service. Specifies what service modes are available (Open, Authenticated, Encrypted) -->
<nmtb:service id="ogf:network:domain=internet2.edu:node=ndt:service=NDT">
    <nmtb:name>Internet2 OWAMP Server</nmtb:name>
    <nmtb:description>OWAMP Server at Internet2 in Ann Arbor, MI USA</nmtb:description>
    <nmtb:type>http://e2epi.internet2.edu/tools/ndt</nmtb:type>

    <nmtb:relation type="runsOn">
        <nmtb:idRef type="node">ogf:network:domain=internet2.edu:node=ndt</nmtb:urn>
    </nmtb:relation>

    <nmtb:port>
        <nmtb:address type="url">http://207.75.164.244:7123</nmtb:address>
        <nmtb:address type="url">http://[2001:468:1420:3:214:22ff:fe72:8ae6]:7123</nmtb:address>

        <nmtb:protocol>
            <nmtb:type>http://e2epi.internet2.edu/ndt/http/3.1</nmtb:type>

             <!-- optional parameters bag -->
        </nmtb:protocol>
    </nmtb:port>

     <nmtb:port>
        <nmtb:address type="uri">tcp://207.75.164.244:3000</nmtb:address>
        <nmtb:address type="uri">tcp://[2001:468:1420:3:214:22ff:fe72:8ae6]:3000</nmtb:address>

        <nmtb:protocol>
            <nmtb:type>http://e2epi.internet2.edu/ndt/nonhttp/3.1</nmtb:type>
        </nmtb:protocol>
    </nmtb:port>
</nmtb:service>
}}}

== BWCTL ==
{{{
<!-- BWCTL Service. Speaks version 1.3 of the protocol -->
<nmtb:service id="ogf:network:domain=internet2.edu:service=BWCTL">
    <nmtb:name>Internet2 BWCTL Server</nmtb:name>
    <nmtb:description>BWCTL Server at Internet2 in Ann Arbor, MI USA</nmtb:description>
    <nmtb:type>http://e2epi.internet2.edu/tools/bwctl</nmtb:type>

    <nmtb:relation type="runsOn">
        <nmtb:idRef type="node">ogf:network:domain=internet2.edu:node=bwctl.chic.net</nmtb:urn>
    </nmtb:relation>

    <!-- speaks version 1.3 of the protocol -->
    <nmtb:protocol>
        <nmtb:type>http://e2epi.internet2.edu/bwctl/1.3</nmtb:type>

        <nmtb:address type="uri">tcp://207.75.164.244:4823</nmtb:address>
        <nmtb:address type="uri">tcp://[2001:468:1420:3:214:22ff:fe72:8ae6]:4823</nmtb:address>

        <nmtb:parameters>
            <nmtb:parameter name="tool">http://dast.nlanr.net/Projects/Iperf/2.0.2</nmtb:parameter>
            <nmtb:parameter name="tool">http://www.lcp.nrl.navy.mil/nuttcp/5.5.5</nmtb:parameter>
            <nmtb:parameter name="tool">http://e2epi.internet2.edu/thrulay/0.9</nmtb:parameter>
        </nmtb:parameters>
    </nmtb:protocol>

    <!-- speaks version 1.0 of the protocol -->
    <nmtb:protocol>
        <nmtb:type>http://e2epi.internet2.edu/bwctl/1.0</nmtb:type>

        <nmtb:address type="uri">tcp://207.75.164.244:4823</nmtb:address>
        <nmtb:address type="uri">tcp://[2001:468:1420:3:214:22ff:fe72:8ae6]:4823</nmtb:address>
    </nmtb:protocol>
</nmtb:service>
}}}

== OWAMP ==
{{{
<!-- OWAMP Service. Running on same node as the bwctl service. Specifies what service modes are available (Open, Authenticated, Encrypted) -->
<nmtb:service id="ogf:network:domain=internet2.edu:node=bwctl.chic.net:service=OWAMP">
    <nmtb:name>Internet2 OWAMP Server</nmtb:name>
    <nmtb:description>OWAMP Server at Internet2 in Ann Arbor, MI USA</nmtb:description>
    <nmtb:type>http://e2epi.internet2.edu/tools/owamp</nmtb:type>

    <nmtb:relation type="runsOn">
        <nmtb:idRef type="node">ogf:network:domain=internet2.edu:node=bwctl.chic.net</nmtb:urn>
    </nmtb:relation>

    <nmtb:protocol>
        <nmtb:type>http://e2epi.internet2.edu/owamp/3.1</nmtb:type>

        <nmtb:address type="uri">tcp://207.75.164.244:861</nmtb:address>
        <nmtb:address type="uri">tcp://[2001:468:1420:3:214:22ff:fe72:8ae6]:861</nmtb:address>

        <nmtb:parameters>
            <nmtb:parameter name="serviceMode">open</nmtb:parameter>
            <nmtb:parameter name="serviceMode">authenticated</nmtb:parameter>
            <nmtb:parameter name="serviceMode">encrypted</nmtb:parameter>
        </nmtb:parameters>
    </nmtb:protocol>

    <nmtb:protocol>
        <nmtb:type>http://e2epi.internet2.edu/owamp/3.0</nmtb:type>

        <nmtb:address type="uri">tcp://207.75.164.244:861</nmtb:address>
        <nmtb:address type="uri">tcp://[2001:468:1420:3:214:22ff:fe72:8ae6]:861</nmtb:address>

        <nmtb:parameters>
            <nmtb:parameter name="serviceMode">open</nmtb:parameter>
            <nmtb:parameter name="serviceMode">authenticated</nmtb:parameter>
            <nmtb:parameter name="serviceMode">encrypted</nmtb:parameter>
        </nmtb:parameters>
    </nmtb:protocol>
</nmtb:service>
}}}

== PingER ==
{{{
<!-- PingER MA/MP -->
<perfsonar:service id="ogf:network:domain=internet2.edu:service=PingER_MA">
    <perfsonar:serviceName>Internet2 PingER MA/MP</perfsonar:serviceName>
    <perfsonar:serviceDescription>PingER MA/MP at Internet2 in Ann Arbor, MI USA</perfsonar:serviceDescription>
    <perfsonar:serviceType>MA</perfsonar:serviceType>

    <!-- accessPoint is simply the 1.0 version of the protocol -->
    <perfsonar:accessPoint>http://lab244.internet2.edu:8075/perfSONAR_PS/services/pinger/ma/1.0</perfsonar:accessPoint>

    <perfsonar:type>http://perfsonar.net/ma/pinger</perfsonar:type>

    <perfsonar:relation type="runsOn">
        <perfsonar:idRef type="node">ogf:network:domain=internet2.edu:node=lab244</perfsonar:urn>
    </perfsonar:relation>

    <perfsonar:relation type="siblings">
        <perfsonar:idRef type="node">ogf:network:domain=internet2.edu:service=PingER_MP</perfsonar:urn>
    </perfsonar:relation>

    <perfsonar:protocol>
        <perfsonar:type>http://perfsonar.net/ma/1.0/pinger/1.0</perfsonar:type>

        <perfsonar:address type="url">http://lab244.internet2.edu:8075/perfSONAR_PS/services/pinger/ma/1.0</perfsonar:address>

        <perfsonar:parameters>
            <perfsonar:parameter serviceName="supportedMessage">SetupDataRequest</perfsonar:parameter>
            <perfsonar:parameter serviceName="supportedMessage">MetadataKeyRequest</perfsonar:parameter>
        </perfsonar:parameters>
    </perfsonar:protocol>

    <!-- supports some new version of the protocol as well -->
    <perfsonar:protocol>
        <perfsonar:type>http://perfsonar.net/ma/1.2/pinger/1.2</perfsonar:type>

        <perfsonar:address type="url">http://lab244.internet2.edu:8075/perfSONAR_PS/services/pinger/ma/1.2</perfsonar:address>

        <perfsonar:parameters>
            <perfsonar:parameter serviceName="supportedMessage">SetupDataRequest</perfsonar:parameter>
            <perfsonar:parameter serviceName="supportedMessage">MetadataKeyRequest</perfsonar:parameter>
            <perfsonar:parameter serviceName="supportedMessage">MetadataQueryRequest</perfsonar:parameter>
            <perfsonar:parameter serviceName="supportedMessage">MetadataUpdateRequest</perfsonar:parameter>
            <perfsonar:parameter serviceName="supportedMessage">MetadataDeleteRequest</perfsonar:parameter>
        </perfsonar:parameters>
    </perfsonar:protocol>

</perfsonar:service>

<perfsonar:service id="ogf:network:domain=internet2.edu:service=PingER_MP">
    <perfsonar:serviceName>Internet2 PingER MA/MP</perfsonar:serviceName> 
    <perfsonar:serviceDescription>PingER MA/MP at Internet2 in Ann Arbor, MI USA</perfsonar:serviceDescription>
    <perfsonar:serviceType>MP</perfsonar:serviceType>

    <perfsonar:type>http://perfsonar.net/mp/pinger</perfsonar:type>

    <!-- accessPoint is simply the 1.0 version of the protocol -->
    <perfsonar:accessPoint>http://lab244.internet2.edu:8075/perfSONAR_PS/services/pinger/ma/1.0</perfsonar:accessPoint>

    <perfsonar:relation type="runsOn">
        <perfsonar:idRef type="node">ogf:network:domain=internet2.edu:node=lab244</perfsonar:urn>
    </perfsonar:relation>
    
    <perfsonar:relation type="siblings">
        <perfsonar:idRef type="node">ogf:network:domain=internet2.edu:service=PingER_MA</perfsonar:urn>
    </perfsonar:relation>
    
    <perfsonar:protocol>
        <perfsonar:type>http://perfsonar.net/mp/1.0</perfsonar:type>
        
        <perfsonar:address type="url">http://lab244.internet2.edu:8075/perfSONAR_PS/services/pinger/mp</perfsonar:address>
        
        <perfsonar:parameters>
            <perfsonar:parameter serviceName="supportedMessage">SetupDataRequest</perfsonar:parameter>
            <perfsonar:parameter serviceName="supportedMessage">MetadataKeyRequest</perfsonar:parameter>
        </perfsonar:parameters>
    </perfsonar:protocol>
</perfsonar:service>
}}}
== IDC ==
{{{
<!-- IDC Service. -->
<nmtb:service id="ogf:network:domain=internet2.edu:service=OSCARS_IDC">
   <nmtb:name>Internet2 OSCARS Server</nmtb:name>
   <nmtb:description>OSCARS Server at Internet2 in Ann Arbor, MI USA</nmtb:description>
   <nmtb:type>http://dice.controlplane.net/idc</nmtb:type>

   <nmtb:relation type="runsOn">
        <nmtb:idRef type="node">ogf:network:domain=internet2.edu:node=anna-lab1</nmtb:urn>
   </nmtb:relation>

   <nmtb:relation type="siblings">
        <nmtb:idRef type="node">ogf:network:domain=internet2.edu:service=OSCARS_NB</nmtb:urn>
   </nmtb:relation>

    <!-- service parameters -->
    <nmtb:parameters>
        <nmtb:parameter name="publisher">https://test-idc.internet2.edu:8443/axis2/services/OSCARS</nmtb:parameter>
    </nmtb:parameters>

    <nmtb:protocol>
        <nmtb:type>http://dice.controlplane.net/idc/1.0</nmtb:type>

        <nmtb:address type="url"> https://test-idc.internet2.edu:8443/axis2/services/OSCARS</nmtb:address>

        <!-- protocol parameters -->
        <nmtb:parameters>
            <nmtb:parameter name="supportedMessage">http://oscars.es.net/OSCARS#createReservation</nmtb:parameter>
            <nmtb:parameter name="supportedMessage">http://oscars.es.net/OSCARS#modifyReservation</nmtb:parameter>
            <nmtb:parameter name="supportedMessage">http://oscars.es.net/OSCARS#cancelReservation</nmtb:parameter>
            <nmtb:parameter name="supportedMessage">http://oscars.es.net/OSCARS#createPath</nmtb:parameter>
            <nmtb:parameter name="supportedMessage">http://oscars.es.net/OSCARS#refreshPath</nmtb:parameter>
            <nmtb:parameter name="supportedMessage">http://oscars.es.net/OSCARS#teardownPath</nmtb:parameter>
            <nmtb:parameter name="supportedMessage">http://oscars.es.net/OSCARS#queryReservation</nmtb:parameter>
            <nmtb:parameter name="supportedMessage">http://oscars.es.net/OSCARS#listReservations</nmtb:parameter>
            <nmtb:parameter name="supportedMessage">http://oscars.es.net/OSCARS#getNetworkTopology</nmtb:parameter>
        </nmtb:parameters>
    </nmtb:protocol>
 </nmtb:service>

 <nmtb:service id="ogf:network:domain=internet2.edu:service=OSCARS_NB">
    <nmtb:name>Internet2 OSCARS Server</nmtb:name>
    <nmtb:description>OSCARS Server at Internet2 in Ann Arbor, MI USA</nmtb:description>

    <nmtb:type>http://dice.controlplane.net/nb</nmtb:type>

    <nmtb:relation type="runsOn">
        <nmtb:idRef type="node">ogf:network:domain=internet2.edu:node=anna-lab1</nmtb:urn>
    </nmtb:relation>

   <nmtb:relation type="siblings">
        <nmtb:idRef type="node">ogf:network:domain=internet2.edu:service=OSCARS_IDC</nmtb:urn>
   </nmtb:relation>

    <nmtb:address type="url"> https://test-idc.internet2.edu:8443/axis2/services/OSCARS</nmtb:address>


    <nmtb:protocol>
        <nmtb:type>http://dice.controlplane.net/nb/1.0</nmtb:type>

        <!-- protocol parameters -->
        <nmtb:parameters>
            <nmtb:parameter name="supportedMessage">http://docs.oasis-open.org/wsn/b-2#Notify</nmtb:parameter>
            <nmtb:parameter name="supportedMessage">http://docs.oasis-open.org/wsn/b-2#Subscribe</nmtb:parameter>
            <nmtb:parameter name="supportedMessage">http://docs.oasis-open.org/wsn/b-2#Renew</nmtb:parameter>
            <nmtb:parameter name="supportedMessage">http://docs.oasis-open.org/wsn/b-2#Unsubscribe</nmtb:parameter>

            <nmtb:parameter name="availableTopic">idc:INFO</nmtb:parameter>
            <nmtb:parameter name="availableTopic">idc:DEBUG</nmtb:parameter>
            <nmtb:parameter name="availableTopic">idc:ERROR</nmtb:parameter>
        </nmtb:parameters>
    </nmtb:protocol>

</nmtb:service>
}}}

= Open Questions =
  * What is the 1.0 version of the perfsonar protocol?
  * Should the parameters bags be typed?
  * Should the parameter names be hierarchically defined?
  * When are parameters protocol specific and when are they service specific?
  * Should there be a hierarchical serviceType element that the protocols are contained within? If so, are we simply creating a service within a service?
  * How should the type of service interact with the protocols that service can speak?