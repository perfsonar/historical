# ##############################################################
#
# File:    nmtopo_base.rnc - Schema to describe network elements
# Version: $Id: nmtopo_base.rnc 347 2008-05-20 15:55:47Z aaron $
#
# ##############################################################

# ##############################################################
# Namespace definitions
# ##############################################################
 default namespace nmtb =
   "http://ogf.org/schema/network/topology/base/20070828/"

# External schema files
 include "nmtypes.rnc"

# generic NMTTopology can be a root element
 start |= NMTTopology

NMTTopology = element topology {
     NMTDomain*
     & NMTBaseNode*
     & NMTBaseLink*
     & NMTBasePort*
     & NMTBaseNetwork*
     & NMTBasePath*
   }

NMTDomain = element domain {
     NMTIdentifier?
     & NMTName?
     & NMTIdReference?
     & NMTBaseNode*
     & NMTBaseLink*
     & NMTBaseNetwork*
     & NMTBasePath*
   }

## ########################
## generic node
## ########################
 NMTBaseNode = element node { NMTBaseNodeContent }
 NMTBaseNodeContent =
   NMTIdentifier?
   & NMTIdReference?
   & NMTName*
   & NMTAddress*
   & NMTRelation*
   & NMTLifetime?
   & element role { xsd:string }?
   & element type { xsd:string }?
   & element description { xsd:string }?
   & element location { NMTLocationContent }?
   & element contact { NMTContactInformationContent }*
   & element comments { xsd:string }*
   & NMTBasePort*
   & NMTBaseService*

NMTContactInformationContent =
   attribute priority { xsd:integer }?
   & element email { xsd:string }?
   & element phoneNumber { xsd:string }?
   & element administrator { xsd:string }?
   & element institution { xsd:string }?

NMTLocationContent =
   element continent { xsd:string }?
   & element country { xsd:string }?
   & element zipcode { xsd:integer }?
   & element state { xsd:string }?
   & element institution { xsd:string }?
   & element city { xsd:string }?
   & element streetAddress { xsd:string }?
   & element floor { xsd:string }?
   & element room { xsd:string }?
   & element cage { xsd:string }?
   & element rack { xsd:string }?
   & element shelf { xsd:string }?
   & element latitude { xsd:float }?
   & element longitude { xsd:float }?

## ########################
## generic port
## ########################
NMTBasePort = element port { NMTBasePortContent }
NMTBasePortContent =
   NMTIdentifier?
   & NMTIdReference?
   & NMTName*
   & NMTAddress*
   & NMTRelation*
   & NMTLifetime?
   & element type { xsd:string }?
   & element description { xsd:string }?
   & element capacity { xsd:string }?
   & element mtu { xsd:string }?
   & element comments { xsd:string }*
   & NMTBaseLink*

## ########################
## generic link
## ########################
NMTBaseLink = element link { NMTBaseLinkContent }
NMTBaseLinkContent =
   NMTIdentifier?
   & NMTIdReference?
   & NMTName*
   & NMTRelation*
   & NMTLifetime?
   & element remoteLinkId { xsd:string }
   & element type { xsd:string }?
   & element description { xsd:string }?
   & element globalName {
       attribute type { xsd:string }?
       & xsd:string
     }?
   & element comments { xsd:string }*

## ########################
## generic network
## ########################
NMTBaseNetwork = element network { NMTBaseNetworkContent }
NMTBaseNetworkContent =
   NMTIdentifier?
   & NMTIdReference?
   & NMTNodeIdRef*
   & NMTPortIdRef*
   & NMTLinkIdRef*
   & NMTName*
   & NMTRelation*
   & NMTLifetime?
   & element type { xsd:string }?
   & element description { xsd:string }?
   & element comments { xsd:string }*

## ########################
## generic path
## ########################
NMTBasePath =
   element path { NMTBasePathContent }

# a path consists of a list of hops
NMTBasePathContent =
   NMTIdentifier
   & NMTRelation*
   & NMTLifetime?
   & element comments { xsd:string }*
   & element hop { NMTHopContent }*

NMTHopContent =
   NMTIdentifier,
   (
     NMTDomainIdRef
     | NMTNodeIdRef
     | NMTPortIdRef
     | NMTLinkIdRef
     | NMTPathIdRef
     | NMTNetworkIdRef
   )

## ########################
## generic endpoint pair
## ########################
NMTBaseEndPointPair =
   element endPointPair { NMTBaseEndPointPairContent }

# an endpoint pair consists of two endpoints in the form of ports
NMTBaseEndPointPairContent =
   NMTName*
   & element type { xsd:string }?
   & element description { xsd:string }?
   & element comments { xsd:string }*
   & element src { (NMTBasePortContent | NMTPortIdRef) }
   & element dst { (NMTBasePortContent | NMTPortIdRef) }

## ########################
## generic service
## ########################
NMTBaseService =
   element service { NMTBaseServiceContent }

NMTBaseServiceContent =
   NMTIdentifier?
   & NMTIdReference?
   & NMTName*
   & element type { xsd:string }?
   & element description { xsd:string }?
   & element comments { xsd:string }*
   & NMTRelation*
   & NMTLifetime?
