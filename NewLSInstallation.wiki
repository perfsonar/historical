#summary Instructions to install and run the new SimpleLookupService

= Introduction =

The SimpleLookupService is used by perfSONAR to search for perfSONAR services, hosts and interfaces. It registers records, which are simply lists of key-value pairs describing the network element. These records can then be searched using one or more key-values. 

This page details the installation instruction for CentOS. For any other flavor of linux, the installation must be done from source.


= Installation =

== Download == 
The SimpleLookupService rpm can be downloaded from here: http://odev-vm-7.es.net/perfsonar-packages/new-ls/lookup-service-0.1-3.noarch.rpm

Source RPM: http://odev-vm-7.es.net/perfsonar-packages/new-ls/lookup-service-0.1-3.src.rpm

== Dependencies ==
This software requires the following:
  # MongoDB
  # java-1.6.0-openjdk
	
In addition,

If you are using the rpm to install, then you will need
  # chkconfig
	
If you are installing from source, then you will need
  # maven

=== MongoDB installation: ===
Download Mongo DB and install it. It’s official site: http://www.mongodb.org/downloads

If you are using CentOS, RedHat or Fedora, you can use yum to install MongoDB.
The instructions can be found here: http://docs.mongodb.org/manual/tutorial/install-mongodb-on-redhat-centos-or-fedora-linux/

==== Configuring and Running MongoDB: ====
For CentOS, RedHat or Fedora, use the instructions found here: http://docs.mongodb.org/manual/tutorial/install-mongodb-on-redhat-centos-or-fedora-linux/

For other flavors, find the instructions for your distribution here: http://docs.mongodb.org/manual/installation/#installation-guides

If you are modifying the port and url, then make a note of it. You will need it when you configure the Lookup Service.

=== Java installation ===
The Java jdk downloads can be found here: http://www.oracle.com/technetwork/java/javase/downloads/index.html


=== Installing Lookup Service ===
Download rpm and use yum to install it. 

= Running Lookup Service =
The package will be under /opt/lookup-service. Config file: /opt/lookup-service/etc. 

  # Configure the host and port options. 
  # MongoDB config options are configured for the default host and port (127.0.0.1,  27017). If it is different, then modify the DB config options accordingly.
 
== Starting and Stopping the service ==

  * To start: service lookup-service start
  * To stop: service lookup-service stop
  * To restart: service lookup-service restart

== Check if service is running ==
From a browser, try http://`<`host:port`>`/lookup/records

== Simple Curl examples ==
=== Registration === 
curl -v -H "Content-Type: application/json" –X POST -d '{"group-domains”:[ "es.net"],"service-locator":["nash-owamp.es.net"],"service-name":["ESnet-nash Ping Responder"],"service-type”:[ "ping"],"type”:[ "service"]}' http://ps4.es.net:9095/lookup/records 


=== Registration example 2 === 
curl -v -H "Content-Type: application/json" –X POST -d '{"type":["host"],"group-domains":[ "es.net"],"host-name":["nash-owamp.es.net"],"host-OS":[ "Linux"]}' http://ps4.es.net:9095/lookup/records 


=== Query === 
curl -v -H "Content-Type: application/js" -X GET http://ps4.es.net:9095/lookup/records/?group-domains=es.net\&service-type=ping\&type=service\&operator=any 

=== Renew ===
curl -v -H "Content-Type: application/json" -X POST http://ps4.es.net:9095/lookup/service/<service-id`>`

=== Delete === 
curl -v -H "Content-Type: application/json" -X DELETE http://ps4.es.net:9095/lookup/service/<service-id`>`

=== Get Service === 
curl -v -H "Content-Type: application/json" -X GET http://ps4.es.net:9095/lookup/service/<service-id`>`

=== Get Value of a particular key in service ===
curl -v -H -X GET http://ps4.es.net:9095/lookup/service/<service-id`>`/record-service-domain