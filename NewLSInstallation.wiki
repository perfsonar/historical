#summary Instructions to install and run the new SimpleLookupService

= Introduction =

The SimpleLookupService is used by perfSONAR to search for perfSONAR services, hosts and interfaces. It registers records, which are simply lists of key-value pairs describing the network element. These records can then be searched using one or more key-values. 

This page details the installation instruction for CentOS. For any other flavor of linux, the installation must be done from source.


= Installation =

== Download == 
The SimpleLookupService rpm is available in yum repo here: http://software.internet2.edu/rpms/i386/main/RPMS/lookup-service-0.1-3.noarch.rpm


== Dependencies ==
This software requires the following:
  # MongoDB
  # java-1.6.0-openjdk
	
In addition,

If you are using the rpm to install, then you will need
  # chkconfig
	
If you are installing from source, then you will need
  # maven

=== MongoDB installation: ===
Download Mongo DB and install it. It’s official site: http://www.mongodb.org/downloads

If you are using CentOS, RedHat or Fedora, you can use yum to install MongoDB.
The instructions can be found here: http://docs.mongodb.org/manual/tutorial/install-mongodb-on-redhat-centos-or-fedora-linux/

==== Configuring and Running MongoDB: ====
For CentOS, RedHat or Fedora, use the instructions found here: http://docs.mongodb.org/manual/tutorial/install-mongodb-on-redhat-centos-or-fedora-linux/

For other flavors, find the instructions for your distribution here: http://docs.mongodb.org/manual/installation/#installation-guides

If you are modifying the port and url, then make a note of it. You will need it when you configure the Lookup Service.

=== Java installation ===
The Java jdk downloads can be found here: http://www.oracle.com/technetwork/java/javase/downloads/index.html


=== Installing Lookup Service ===
Download rpm and use yum to install it. 

= Running Lookup Service =
The package will be under /opt/lookup-service. Config file: /etc/lookup-service/lookup-service.yaml.
Log files can be found under: /var/log/lookup-service 

  # Configure the host and port options. 
  # MongoDB config options are configured for the default host and port (127.0.0.1,  27017). If it is different, then modify the DB config options accordingly.
 
== Starting and Stopping the service ==

  * To start: service lookup-service start
  * To stop: service lookup-service stop
  * To restart: service lookup-service restart

== Check if service is running ==
From a browser, try http://your-sLS.yourdomain.org:8090/lookup/records

== Configuring the Lookup Service ==
The lookup service uses a yaml based configuration file. The current lookup service supports the following options:

=== Lookup Service settings ===
  * host - hostname or the ip address of the host where the lookup service is running. Default value: localhost
  * port - port where lookup service listens for connections. Default value: 8090 
  * (lease) max - in seconds, maximum lease time that can be granted to a record. Default value: 2592000
  * (lease) min - in seconds, minimum lease time that can be granted to a record. Default value: 7200
  * (lease) default - in seconds, if no lease time is requested, this is granted. Default value: 1800

=== Database settings ===
  * DBUrl - the host name where MongoDB is running. Default value: 127.0.0.1
  * DBPort - the port number where MongoDB is running. Default value: 27017
  * DBName - name of the database. Default value: LookupService
  * DBCollName - name of the collection name. Default value: services
  * username - username for access (future)
  * password - password for access (future)
  * pruneInterval - interval at which the stale entries are removed from the database
  * pruneThreshold -  the duration for which expired records can live in the database before they are renewed or cleaned up 

== Simple Curl examples ==
=== Registration === 
curl -v -H "Content-Type: application/json" –X POST -d '{"group-domains”:[ "es.net"],"service-locator":["nash-owamp.es.net"],"service-name":["ESnet-nash Ping Responder"],"service-type”:[ "ping"],"type”:[ "service"]}' http://your-sLS.yourdomain.org:8090/lookup/records 


=== Registration example 2 === 
curl -v -H "Content-Type: application/json" –X POST -d '{"type":["host"],"group-domains":[ "es.net"],"host-name":["nash-owamp.es.net"],"host-OS":[ "Linux"]}' http://your-sLS.yourdomain.org:8090/lookup/records 


=== Query === 
curl -v -H "Content-Type: application/js" -X GET http://your-sLS.yourdomain.org:8090/lookup/records/?group-domains=es.net\&service-type=ping\&type=service\&operator=any 

=== Renew ===
curl -v -H "Content-Type: application/json" -X POST http://your-sLS.yourdomain.org:8090/lookup/service/<service-id`>`

=== Delete === 
curl -v -H "Content-Type: application/json" -X DELETE http://your-sLS.yourdomain.org:8090/lookup/service/<service-id`>`

=== Get Service === 
curl -v -H "Content-Type: application/json" -X GET http://your-sLS.yourdomain.org:8090/lookup/service/<service-id`>`

=== Get Value of a particular key in service ===
curl -v -H -X GET http://your-sLS.yourdomain.org:8090/lookup/service/<service-id`>`/record-service-domain