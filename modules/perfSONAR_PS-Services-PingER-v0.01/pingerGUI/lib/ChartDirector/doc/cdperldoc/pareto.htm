<HTML>
<HEAD>
<Title>Pareto Chart</Title>
<link type='text/css' rel='Stylesheet' href="maxchartapi.css" />
</HEAD>
<body bgcolor="#FFFFFF" text="#000000" topmargin="0" leftmargin="0" rightmargin="0" marginwidth="0" marginheight="0">

<p class="heading0">ChartDirector Ver 4.1 (Perl Edition)</p>
<p class="heading1">Pareto Chart</p>
<hr class="separator">
<div class="content">
<img src="images/pareto.png">
<br><br>
This example demonstrates the pareto chart style.<br><br>
A pareto chart is a bar chart with the data sorted in descending order, together with a line chart showing the same data in accumulated form. In the current example, the data is shown as both percentages and values on the two y-axes.<br><br>
The chart in this example is composed of two layers - a <a href="BarLayer.htm">BarLayer</a> created using <a href="XYChart.addBarLayer.htm">XYChart.addBarLayer</a>, and a <a href="LineLayer.htm">LineLayer</a> created using <a href="XYChart.addLineLayer.htm">XYChart.addLineLayer</a>.<br><br>
This example employs the <a href="ArrayMath.htm">ArrayMath</a> utility class for computing the accumulated line, obtaining the scaling factor between the two y-axes, and re-scaling the line data as percentages.<br><br>
The two y-axes are synchronized using <a href="XYChart.syncYAxis.htm">XYChart.syncYAxis</a>.
</div>
<p class="heading1a">Source Code Listing</p>
<div class="content">
<b>[Standalone Version]</b> perldemo\pareto.pl
<table width="98%" border="0" cellpadding="10"><tr><td bgcolor="#cccccc"><pre>#!/usr/bin/perl
use perlchartdir;

# The data for the chart
my $data = [40, 15, 7, 5, 2];

# The labels for the chart
my $labels = ["Hard Disk", "PCB", "Printer", "CDROM", "Keyboard"];

# Create a XYChart object of size 400 x 225 pixels. Use golden background color, with
# a 2 pixel 3D border.
my $c = new XYChart(400, 225, perlchartdir::goldColor(), -1, 2);

# Add a title box using Arial Bold/11 pt font. Set the background color to metallic
# blue (9999FF). Use a 1 pixel 3D border.
$c-&gt;addTitle("Hardware Defects", "arialbd.ttf", 11)-&gt;setBackground(
    perlchartdir::metalColor(0x9999ff), -1, 1);

# Set the plotarea at (50, 40) and of 300 x 150 pixels in size, with a silver
# background color.
$c-&gt;setPlotArea(50, 40, 300, 150, perlchartdir::silverColor());

# Add a line layer for the pareto line
my $lineLayer = $c-&gt;addLineLayer();

# Compute the pareto line by accumulating the data
my $lineData = new ArrayMath($data);
$lineData-&gt;acc();

# Set a scaling factor such as the maximum point of the line is scaled to 100
my $scaleFactor = 100 / $lineData-&gt;max();

# Add the pareto line using the scaled data. Use deep blue (0x80) as the line color,
# with light blue (0x9999ff) diamond symbols
$lineLayer-&gt;addDataSet($lineData-&gt;mul2($scaleFactor)-&gt;result(), 0x000080
    )-&gt;setDataSymbol($perlchartdir::DiamondSymbol, 9, 0x9999ff);

# Set the line width to 2 pixel
$lineLayer-&gt;setLineWidth(2);

# Add a multi-color bar layer using the given data.
my $barLayer = $c-&gt;addBarLayer3($data);

# Bind the layer to the secondary (right) y-axis.
$barLayer-&gt;setUseYAxis2();

# Set soft lighting for the bars with light direction from the right
$barLayer-&gt;setBorderColor($perlchartdir::Transparent, perlchartdir::softLighting(
    $perlchartdir::Right));

# Set the labels on the x axis.
$c-&gt;xAxis()-&gt;setLabels($labels);

# Set the primary y-axis scale as 0 - 100 with a tick every 20 units
$c-&gt;yAxis()-&gt;setLinearScale(0, 100, 20);

# Set the label format of the y-axis label to include a percentage sign
$c-&gt;yAxis()-&gt;setLabelFormat("{value}%");

# Add a title to the secondary y-axis
$c-&gt;yAxis2()-&gt;setTitle("Frequency");

# Set the secondary y-axis label foramt to show no decimal point
$c-&gt;yAxis2()-&gt;setLabelFormat("{value|0}");

# Set the relationship between the two y-axes, which only differ by a scaling factor
$c-&gt;syncYAxis(1 / $scaleFactor);

# Output the chart
$c-&gt;makeChart("pareto.png")</pre></tr></td></table><br><b>[CGI Version]</b> perldemo_cgi\pareto.pl
<table width="98%" border="0" cellpadding="10"><tr><td bgcolor="#cccccc"><pre>#!/usr/bin/perl

# Include current script directory in the module path (needed on Microsoft IIS).
# This allows this script to work by copying ChartDirector to the same directory
# as the script (as an alternative to installation in Perl module directory)
use File::Basename;
use lib dirname($0);

use perlchartdir;

# The data for the chart
my $data = [40, 15, 7, 5, 2];

# The labels for the chart
my $labels = ["Hard Disk", "PCB", "Printer", "CDROM", "Keyboard"];

# Create a XYChart object of size 400 x 225 pixels. Use golden background color, with
# a 2 pixel 3D border.
my $c = new XYChart(400, 225, perlchartdir::goldColor(), -1, 2);

# Add a title box using Arial Bold/11 pt font. Set the background color to metallic
# blue (9999FF). Use a 1 pixel 3D border.
$c-&gt;addTitle("Hardware Defects", "arialbd.ttf", 11)-&gt;setBackground(
    perlchartdir::metalColor(0x9999ff), -1, 1);

# Set the plotarea at (50, 40) and of 300 x 150 pixels in size, with a silver
# background color.
$c-&gt;setPlotArea(50, 40, 300, 150, perlchartdir::silverColor());

# Add a line layer for the pareto line
my $lineLayer = $c-&gt;addLineLayer();

# Compute the pareto line by accumulating the data
my $lineData = new ArrayMath($data);
$lineData-&gt;acc();

# Set a scaling factor such as the maximum point of the line is scaled to 100
my $scaleFactor = 100 / $lineData-&gt;max();

# Add the pareto line using the scaled data. Use deep blue (0x80) as the line color,
# with light blue (0x9999ff) diamond symbols
$lineLayer-&gt;addDataSet($lineData-&gt;mul2($scaleFactor)-&gt;result(), 0x000080
    )-&gt;setDataSymbol($perlchartdir::DiamondSymbol, 9, 0x9999ff);

# Set the line width to 2 pixel
$lineLayer-&gt;setLineWidth(2);

# Add a multi-color bar layer using the given data.
my $barLayer = $c-&gt;addBarLayer3($data);

# Bind the layer to the secondary (right) y-axis.
$barLayer-&gt;setUseYAxis2();

# Set soft lighting for the bars with light direction from the right
$barLayer-&gt;setBorderColor($perlchartdir::Transparent, perlchartdir::softLighting(
    $perlchartdir::Right));

# Set the labels on the x axis.
$c-&gt;xAxis()-&gt;setLabels($labels);

# Set the primary y-axis scale as 0 - 100 with a tick every 20 units
$c-&gt;yAxis()-&gt;setLinearScale(0, 100, 20);

# Set the label format of the y-axis label to include a percentage sign
$c-&gt;yAxis()-&gt;setLabelFormat("{value}%");

# Add a title to the secondary y-axis
$c-&gt;yAxis2()-&gt;setTitle("Frequency");

# Set the secondary y-axis label foramt to show no decimal point
$c-&gt;yAxis2()-&gt;setLabelFormat("{value|0}");

# Set the relationship between the two y-axes, which only differ by a scaling factor
$c-&gt;syncYAxis(1 / $scaleFactor);

# Output the chart
binmode(STDOUT);
print "Content-type: image/png\n\n";
print $c-&gt;makeChart2($perlchartdir::PNG);</pre></tr></td></table>
</div>
<br><hr class="separator"><div class="copyright">&copy; 2008 Advanced Software Engineering Limited. All rights reserved.</div>
</body>
</HTML>
